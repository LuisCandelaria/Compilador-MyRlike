
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNleftPLUSMINUSleftTIMESDIVIDEleftLTHANGTHANDIFFEQUALleftCOLONSEMICOLONCOMAleftLBRACKRBRACKLSBRACKRSBRACKleftLPARENRPARENAND ASSIGN AVERAGE CHAR COLON COMA CTE_CHAR CTE_FLOAT CTE_INT CTE_STRING DIFF DIVIDE DO ELSE EQUAL FLOAT FOR FUNCTION GTHAN ID IF INT LBRACK LPAREN LSBRACK LTHAN MAIN MINUS MODE OR PLOTXY PLUS PROGRAM RBRACK READ REGRESSION RETURN RPAREN RSBRACK SEMICOLON THEN TIMES TO VARIANCE VARS VOID WHILE WRITE\n    program : PROGRAM ID SEMICOLON programVer1\n    | PROGRAM ID SEMICOLON programVer2\n    | PROGRAM ID SEMICOLON programVer3\n    \n    programVer1 : variables functions principal\n    \n    programVer2 : variables principal\n    | functions principal\n    \n    programVer3 : principal\n    \n    variables : VARS varAux\n    \n    varAux : oneVar\n    | sameType\n    | newType\n    \n    oneVar : typeVar COLON identifierVar SEMICOLON\n    \n    sameType : typeVar COLON identifierVar COMA sameTypeFinal\n    | typeVar COLON identifierVar COMA sameTypeRecursive\n    \n    sameTypeFinal : identifierVar SEMICOLON\n    \n    sameTypeRecursive : identifierVar COMA sameTypeRecursive\n    | identifierVar COMA sameTypeFinal\n    | identifierVar SEMICOLON varAux\n    \n    newType : typeVar COLON identifierVar SEMICOLON varAux\n    \n    functions : funcAux\n    | recursiveFunc\n    \n    recursiveFunc : funcAux functions\n    \n    funcAux : FUNCTION typeFunction ID LPAREN withParameters\n    | FUNCTION typeFunction ID LPAREN RPAREN funcVer1\n    | FUNCTION typeFunction ID LPAREN RPAREN funcVer2\n    \n    typeFunction : INT\n    | FLOAT\n    | CHAR\n    | VOID\n    \n    withParameters : parameters RPAREN funcVer1\n    | parameters RPAREN funcVer2\n    \n    funcVer1 : variablesLoc block\n    \n    funcVer2 : block\n    \n    variablesLoc : VARS varAuxLoc\n    \n    varAuxLoc : oneVarLoc\n    | sameTypeLoc\n    | newTypeLoc\n    \n    oneVarLoc : typeVar COLON identifier SEMICOLON\n    \n    sameTypeLoc : typeVar COLON identifier COMA sameTypeFinalLoc\n    | typeVar COLON identifier COMA sameTypeRecursiveLoc\n    \n    sameTypeFinalLoc : identifier SEMICOLON\n    \n    sameTypeRecursiveLoc : identifier COMA sameTypeRecursiveLoc\n    | identifier COMA sameTypeFinalLoc\n    | identifier SEMICOLON varAuxLoc\n    \n    newTypeLoc : typeVar COLON identifier SEMICOLON varAuxLoc\n    \n    parameters : oneParam\n    | sameTypeParam\n    | newParam\n    \n    oneParam : typeVar COLON identifierVar\n    \n    sameTypeParam : typeVar COLON identifierVar COMA sameTypeParamFinal\n    | typeVar COLON identifierVar COMA sameTypeParamRecursive\n    \n    sameTypeParamFinal : identifierVar\n    \n    sameTypeParamRecursive : identifierVar  COMA sameTypeParamRecursive\n    | identifierVar COMA sameTypeFinal\n    | identifier SEMICOLON parameters\n    \n    newParam : typeVar COLON identifierVar SEMICOLON parameters\n    \n    identifierVar : identLonely\n    | identArrayVar\n    \n    identArrayVar : ID LSBRACK expressionVar RSBRACK\n    \n    typeVar : INT\n    | FLOAT\n    | CHAR\n    \n    principal : MAIN LPAREN RPAREN block\n    \n    block : LBRACK blockAux\n    \n    blockAux : statute RBRACK\n    | blockRecursive\n    | blockFinal\n    \n    blockFinal : RBRACK\n    \n    blockRecursive : statute blockAux\n    \n    statute : assignment SEMICOLON\n    | ifStatement\n    | writing SEMICOLON\n    | reading SEMICOLON\n    | loop\n    | functionCall SEMICOLON\n    | returnStatement SEMICOLON\n    | regressionFunc SEMICOLON\n    | plotXYFunc SEMICOLON\n    \n    assignment : identifier ASSIGN expression\n    \n    returnStatement : RETURN LPAREN expression RPAREN\n    \n    ifStatement : shortCondition\n    | longCondition\n    \n    shortCondition : IF LPAREN expression RPAREN THEN block\n    \n    longCondition : IF LPAREN expression RPAREN THEN block ELSE block\n    \n    plotXYFunc : PLOTXY LPAREN ID COMA ID RPAREN\n    \n    regressionFunc : REGRESSION LPAREN ID COMA ID RPAREN\n    \n    writing : WRITE LPAREN writingAux\n    \n    writingAux : writingFinal\n    | writingRecursive\n    \n    writingFinal : writingString RPAREN\n    | expression RPAREN\n    \n    writingString : CTE_STRING\n    \n    writingRecursive : writingString COMA writingFinal\n    | expression COMA writingFinal\n    | writingString COMA writingRecursive\n    | expression COMA writingRecursive\n    \n    reading : READ LPAREN readingAux\n    \n    readingAux : readingFinal\n    | readingRecursive\n    \n    readingFinal : identifier RPAREN\n    \n    readingRecursive : identifier COMA readingRecursive\n    | identifier COMA readingFinal\n    \n    loop : conditional\n    | nonconditional\n    \n    conditional : WHILE LPAREN expression RPAREN block\n    \n    nonconditional : FOR identifier ASSIGN expression TO expression DO block\n    \n    functionCall : ID LPAREN callAux\n    \n    callAux : expression RPAREN\n    | callRecursive\n    | callFinal\n    \n    callRecursive : expression COMA callAux\n    \n    callFinal : RPAREN\n    \n    expression : term\n    | expressionOperation\n    \n    expressionOperation : term PLUS expression\n    | term MINUS expression\n    \n    term : factor\n    | termOperation\n    \n    termOperation : factor TIMES term\n    | factor DIVIDE term\n    \n    factor : idioms\n    | factorOperation\n    \n    factorOperation : idioms GTHAN factor\n    | idioms LTHAN factor\n    | idioms EQUAL factor\n    | idioms DIFF factor\n    \n    idioms : auction\n    | idiomsOperation\n    \n    idiomsOperation : auction OR idioms\n    | auction AND idioms\n    \n    auction : constant\n    | otherExpression\n    | identifier\n    | averageFunc\n    | modeFunc\n    | varianceFunc\n    | functionCall\n    \n    constant : someInt\n    | someFloat\n    | someChar\n    \n    someInt : CTE_INT\n    \n    someFloat : CTE_FLOAT \n    \n    someChar : CTE_CHAR\n    \n    otherExpression : LPAREN expression RPAREN\n    \n    identifier : identLonely\n    | identArray\n    \n    identLonely : ID\n    \n    identArray : ID LSBRACK expression RSBRACK\n    \n    averageFunc : AVERAGE LPAREN ID RPAREN\n    \n    modeFunc : MODE LPAREN ID RPAREN\n    \n    varianceFunc : VARIANCE LPAREN ID RPAREN\n    \n    expressionVar : termVar\n    | expressionOperationVar\n    \n    expressionOperationVar : termVar PLUS expressionVar\n    | termVar MINUS expressionVar\n    \n    termVar : auctionVar\n    | termOperationVar\n    \n    termOperationVar : auctionVar TIMES termVar\n    | auctionVar DIVIDE termVar\n    \n    auctionVar : constantVar\n    | otherExpressionVar\n    \n    constantVar : CTE_INT\n    \n    otherExpressionVar : LPAREN expressionVar RPAREN\n    '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,5,6,7,10,17,18,34,42,48,50,51,52,98,99,],[0,-1,-2,-3,-7,-5,-6,-4,-63,-64,-68,-66,-67,-65,-69,]),'ID':([2,29,30,31,32,33,35,43,46,48,49,50,51,52,54,57,63,64,67,68,77,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,125,127,153,181,200,201,202,203,204,205,206,207,208,209,211,212,213,215,217,219,221,224,225,229,230,258,259,273,276,277,279,291,292,293,295,],[3,37,-26,-27,-28,-29,41,69,41,-64,69,-68,-66,-67,-71,-74,-81,-82,-103,-104,118,-65,-69,-70,-72,-73,-75,-76,-77,-78,69,69,118,69,69,69,177,178,69,69,41,41,69,69,69,69,69,69,69,69,69,69,69,69,244,245,246,69,69,118,69,255,256,118,266,-105,69,-83,118,266,69,69,-84,-106,118,]),'SEMICOLON':([3,38,39,40,41,53,55,56,58,59,60,61,69,73,74,86,118,128,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,160,161,162,166,167,168,170,172,173,174,190,192,214,216,218,220,222,223,233,234,235,236,237,238,239,240,241,242,243,247,248,249,250,252,253,254,260,264,265,266,268,269,270,271,272,283,286,298,],[4,45,-57,-58,-147,100,101,102,103,104,105,106,-147,-145,-146,126,-147,-59,-133,-79,-113,-114,-117,-118,-121,-122,-127,-128,-131,-132,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-87,-88,-89,-97,-98,-99,-107,-112,-109,-110,231,232,-90,-91,-100,-108,-148,-80,-115,-116,-119,-120,-123,-124,-125,-126,-129,-130,-144,-93,-95,-94,-96,-101,-102,-111,275,278,-57,-147,-149,-150,-151,-86,-85,294,296,301,]),'VARS':([4,79,124,],[11,123,123,]),'MAIN':([4,8,9,12,13,16,19,20,21,22,27,45,48,50,51,52,78,85,87,88,98,99,119,120,122,126,182,188,189,191,193,194,232,],[14,14,14,-20,-21,14,-8,-9,-10,-11,-22,-12,-64,-68,-66,-67,-23,-19,-13,-14,-65,-69,-24,-25,-33,-15,-32,-30,-31,-18,-16,-17,-15,]),'FUNCTION':([4,8,12,19,20,21,22,45,48,50,51,52,78,85,87,88,98,99,119,120,122,126,182,188,189,191,193,194,232,],[15,15,15,-8,-9,-10,-11,-12,-64,-68,-66,-67,-23,-19,-13,-14,-65,-69,-24,-25,-33,-15,-32,-30,-31,-18,-16,-17,-15,]),'INT':([11,15,44,45,123,126,231,232,275,278,294,301,],[24,30,24,24,24,24,24,24,24,24,24,24,]),'FLOAT':([11,15,44,45,123,126,231,232,275,278,294,301,],[25,31,25,25,25,25,25,25,25,25,25,25,]),'CHAR':([11,15,44,45,123,126,231,232,275,278,294,301,],[26,32,26,26,26,26,26,26,26,26,26,26,]),'LPAREN':([14,37,47,65,66,69,70,71,72,75,76,97,107,108,110,111,112,115,116,129,130,131,132,153,154,155,156,181,200,201,202,203,204,205,206,207,208,209,215,217,221,259,279,291,],[28,44,97,108,109,110,112,113,114,115,116,97,153,153,153,153,153,153,153,97,97,97,97,153,211,212,213,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,291,291,]),'VOID':([15,],[33,]),'COLON':([23,24,25,26,84,187,],[35,-60,-61,-62,125,229,]),'RPAREN':([28,39,40,41,44,69,73,74,80,81,82,83,90,91,92,93,94,95,96,110,118,128,133,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,163,164,165,169,170,171,172,173,174,176,179,180,190,195,196,197,198,199,210,220,221,222,233,234,235,236,237,238,239,240,241,242,243,244,245,246,251,254,255,256,261,262,263,265,266,267,268,269,270,287,288,289,290,296,],[36,-57,-58,-147,79,-147,-145,-146,124,-46,-47,-48,-152,-153,-156,-157,-160,-161,-162,172,-147,-59,199,-133,-113,-114,-117,-118,-121,-122,-127,-128,-131,-132,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,214,216,-92,218,-107,220,-112,-109,-110,223,226,227,-49,-154,-155,-158,-159,-163,243,-108,172,-148,-115,-116,-119,-120,-123,-124,-125,-126,-129,-130,-144,268,269,270,218,-111,271,272,-52,-50,-51,-57,-147,-56,-149,-150,-151,-53,-54,-55,-141,-15,]),'LBRACK':([36,79,121,124,183,184,185,186,227,257,275,280,281,282,284,285,294,297,299,300,301,],[43,43,43,43,-34,-35,-36,-37,43,43,-38,43,43,-45,-39,-40,-41,-44,-42,-43,-41,]),'COMA':([38,39,40,41,69,73,74,86,118,128,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,163,164,165,169,170,171,172,173,174,177,178,190,192,220,222,233,234,235,236,237,238,239,240,241,242,243,251,254,260,261,265,266,268,269,270,283,286,298,],[46,-57,-58,-147,-147,-145,-146,127,-147,-59,-133,-113,-114,-117,-118,-121,-122,-127,-128,-131,-132,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,215,217,-92,219,-107,221,-112,-109,-110,224,225,230,127,-108,-148,-115,-116,-119,-120,-123,-124,-125,-126,-129,-130,-144,219,-111,276,277,-57,-147,-149,-150,-151,295,277,295,]),'LSBRACK':([41,69,118,266,],[47,111,111,279,]),'RBRACK':([43,48,49,50,51,52,54,57,63,64,67,68,98,99,100,101,102,103,104,105,106,258,273,292,293,],[50,-64,98,-68,-66,-67,-71,-74,-81,-82,-103,-104,-65,-69,-70,-72,-73,-75,-76,-77,-78,-105,-83,-84,-106,]),'WRITE':([43,48,49,50,51,52,54,57,63,64,67,68,98,99,100,101,102,103,104,105,106,258,273,292,293,],[65,-64,65,-68,-66,-67,-71,-74,-81,-82,-103,-104,-65,-69,-70,-72,-73,-75,-76,-77,-78,-105,-83,-84,-106,]),'READ':([43,48,49,50,51,52,54,57,63,64,67,68,98,99,100,101,102,103,104,105,106,258,273,292,293,],[66,-64,66,-68,-66,-67,-71,-74,-81,-82,-103,-104,-65,-69,-70,-72,-73,-75,-76,-77,-78,-105,-83,-84,-106,]),'RETURN':([43,48,49,50,51,52,54,57,63,64,67,68,98,99,100,101,102,103,104,105,106,258,273,292,293,],[70,-64,70,-68,-66,-67,-71,-74,-81,-82,-103,-104,-65,-69,-70,-72,-73,-75,-76,-77,-78,-105,-83,-84,-106,]),'REGRESSION':([43,48,49,50,51,52,54,57,63,64,67,68,98,99,100,101,102,103,104,105,106,258,273,292,293,],[71,-64,71,-68,-66,-67,-71,-74,-81,-82,-103,-104,-65,-69,-70,-72,-73,-75,-76,-77,-78,-105,-83,-84,-106,]),'PLOTXY':([43,48,49,50,51,52,54,57,63,64,67,68,98,99,100,101,102,103,104,105,106,258,273,292,293,],[72,-64,72,-68,-66,-67,-71,-74,-81,-82,-103,-104,-65,-69,-70,-72,-73,-75,-76,-77,-78,-105,-83,-84,-106,]),'IF':([43,48,49,50,51,52,54,57,63,64,67,68,98,99,100,101,102,103,104,105,106,258,273,292,293,],[75,-64,75,-68,-66,-67,-71,-74,-81,-82,-103,-104,-65,-69,-70,-72,-73,-75,-76,-77,-78,-105,-83,-84,-106,]),'WHILE':([43,48,49,50,51,52,54,57,63,64,67,68,98,99,100,101,102,103,104,105,106,258,273,292,293,],[76,-64,76,-68,-66,-67,-71,-74,-81,-82,-103,-104,-65,-69,-70,-72,-73,-75,-76,-77,-78,-105,-83,-84,-106,]),'FOR':([43,48,49,50,51,52,54,57,63,64,67,68,98,99,100,101,102,103,104,105,106,258,273,292,293,],[77,-64,77,-68,-66,-67,-71,-74,-81,-82,-103,-104,-65,-69,-70,-72,-73,-75,-76,-77,-78,-105,-83,-84,-106,]),'CTE_INT':([47,97,107,108,110,111,112,115,116,129,130,131,132,153,181,200,201,202,203,204,205,206,207,208,209,215,217,221,259,279,291,],[96,96,157,157,157,157,157,157,157,96,96,96,96,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,157,290,290,]),'ELSE':([48,50,51,52,98,99,273,],[-64,-68,-66,-67,-65,-69,280,]),'ASSIGN':([62,69,73,74,117,118,222,],[107,-147,-145,-146,181,-147,-148,]),'OR':([69,73,74,134,142,144,145,146,147,148,149,150,151,152,157,158,159,170,172,173,174,220,222,243,254,268,269,270,290,],[-147,-145,-146,-133,208,-131,-132,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-107,-112,-109,-110,-108,-148,-144,-111,-149,-150,-151,-141,]),'AND':([69,73,74,134,142,144,145,146,147,148,149,150,151,152,157,158,159,170,172,173,174,220,222,243,254,268,269,270,290,],[-147,-145,-146,-133,209,-131,-132,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-107,-112,-109,-110,-108,-148,-144,-111,-149,-150,-151,-141,]),'GTHAN':([69,73,74,134,140,142,143,144,145,146,147,148,149,150,151,152,157,158,159,170,172,173,174,220,222,241,242,243,254,268,269,270,290,],[-147,-145,-146,-133,204,-127,-128,-131,-132,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-107,-112,-109,-110,-108,-148,-129,-130,-144,-111,-149,-150,-151,-141,]),'LTHAN':([69,73,74,134,140,142,143,144,145,146,147,148,149,150,151,152,157,158,159,170,172,173,174,220,222,241,242,243,254,268,269,270,290,],[-147,-145,-146,-133,205,-127,-128,-131,-132,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-107,-112,-109,-110,-108,-148,-129,-130,-144,-111,-149,-150,-151,-141,]),'EQUAL':([69,73,74,134,140,142,143,144,145,146,147,148,149,150,151,152,157,158,159,170,172,173,174,220,222,241,242,243,254,268,269,270,290,],[-147,-145,-146,-133,206,-127,-128,-131,-132,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-107,-112,-109,-110,-108,-148,-129,-130,-144,-111,-149,-150,-151,-141,]),'DIFF':([69,73,74,134,140,142,143,144,145,146,147,148,149,150,151,152,157,158,159,170,172,173,174,220,222,241,242,243,254,268,269,270,290,],[-147,-145,-146,-133,207,-127,-128,-131,-132,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-107,-112,-109,-110,-108,-148,-129,-130,-144,-111,-149,-150,-151,-141,]),'TIMES':([69,73,74,92,94,95,96,134,138,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,170,172,173,174,199,220,222,237,238,239,240,241,242,243,254,268,269,270,290,],[-147,-145,-146,131,-160,-161,-162,-133,202,-121,-122,-127,-128,-131,-132,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-107,-112,-109,-110,-163,-108,-148,-123,-124,-125,-126,-129,-130,-144,-111,-149,-150,-151,-141,]),'DIVIDE':([69,73,74,92,94,95,96,134,138,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,170,172,173,174,199,220,222,237,238,239,240,241,242,243,254,268,269,270,290,],[-147,-145,-146,132,-160,-161,-162,-133,203,-121,-122,-127,-128,-131,-132,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-107,-112,-109,-110,-163,-108,-148,-123,-124,-125,-126,-129,-130,-144,-111,-149,-150,-151,-141,]),'PLUS':([69,73,74,90,92,93,94,95,96,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,170,172,173,174,197,198,199,220,222,235,236,237,238,239,240,241,242,243,254,268,269,270,290,],[-147,-145,-146,129,-156,-157,-160,-161,-162,-133,200,-117,-118,-121,-122,-127,-128,-131,-132,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-107,-112,-109,-110,-158,-159,-163,-108,-148,-119,-120,-123,-124,-125,-126,-129,-130,-144,-111,-149,-150,-151,-141,]),'MINUS':([69,73,74,90,92,93,94,95,96,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,170,172,173,174,197,198,199,220,222,235,236,237,238,239,240,241,242,243,254,268,269,270,290,],[-147,-145,-146,130,-156,-157,-160,-161,-162,-133,201,-117,-118,-121,-122,-127,-128,-131,-132,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-107,-112,-109,-110,-158,-159,-163,-108,-148,-119,-120,-123,-124,-125,-126,-129,-130,-144,-111,-149,-150,-151,-141,]),'RSBRACK':([69,73,74,89,90,91,92,93,94,95,96,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,170,172,173,174,175,195,196,197,198,199,220,222,233,234,235,236,237,238,239,240,241,242,243,254,268,269,270,290,],[-147,-145,-146,128,-152,-153,-156,-157,-160,-161,-162,-133,-113,-114,-117,-118,-121,-122,-127,-128,-131,-132,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-107,-112,-109,-110,222,-154,-155,-158,-159,-163,-108,-148,-115,-116,-119,-120,-123,-124,-125,-126,-129,-130,-144,-111,-149,-150,-151,-141,]),'TO':([69,73,74,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,170,172,173,174,220,222,228,233,234,235,236,237,238,239,240,241,242,243,254,268,269,270,],[-147,-145,-146,-133,-113,-114,-117,-118,-121,-122,-127,-128,-131,-132,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-107,-112,-109,-110,-108,-148,259,-115,-116,-119,-120,-123,-124,-125,-126,-129,-130,-144,-111,-149,-150,-151,]),'DO':([69,73,74,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,157,158,159,170,172,173,174,220,222,233,234,235,236,237,238,239,240,241,242,243,254,268,269,270,274,],[-147,-145,-146,-133,-113,-114,-117,-118,-121,-122,-127,-128,-131,-132,-134,-135,-136,-137,-138,-139,-140,-141,-142,-143,-107,-112,-109,-110,-108,-148,-115,-116,-119,-120,-123,-124,-125,-126,-129,-130,-144,-111,-149,-150,-151,281,]),'AVERAGE':([107,108,110,111,112,115,116,153,181,200,201,202,203,204,205,206,207,208,209,215,217,221,259,279,291,],[154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'MODE':([107,108,110,111,112,115,116,153,181,200,201,202,203,204,205,206,207,208,209,215,217,221,259,279,291,],[155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'VARIANCE':([107,108,110,111,112,115,116,153,181,200,201,202,203,204,205,206,207,208,209,215,217,221,259,279,291,],[156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,]),'CTE_FLOAT':([107,108,110,111,112,115,116,153,181,200,201,202,203,204,205,206,207,208,209,215,217,221,259,279,291,],[158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,158,]),'CTE_CHAR':([107,108,110,111,112,115,116,153,181,200,201,202,203,204,205,206,207,208,209,215,217,221,259,279,291,],[159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,]),'CTE_STRING':([108,215,217,],[165,165,165,]),'THEN':([226,],[257,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'programVer1':([4,],[5,]),'programVer2':([4,],[6,]),'programVer3':([4,],[7,]),'variables':([4,],[8,]),'functions':([4,8,12,],[9,16,27,]),'principal':([4,8,9,16,],[10,17,18,34,]),'funcAux':([4,8,12,],[12,12,12,]),'recursiveFunc':([4,8,12,],[13,13,13,]),'varAux':([11,45,126,232,],[19,85,191,191,]),'oneVar':([11,45,126,232,],[20,20,20,20,]),'sameType':([11,45,126,232,],[21,21,21,21,]),'newType':([11,45,126,232,],[22,22,22,22,]),'typeVar':([11,44,45,123,126,231,232,275,278,294,301,],[23,84,23,187,23,84,23,187,84,187,187,]),'typeFunction':([15,],[29,]),'identifierVar':([35,46,125,127,230,277,],[38,86,190,192,261,286,]),'identLonely':([35,43,46,49,77,107,108,109,110,111,112,115,116,125,127,153,181,200,201,202,203,204,205,206,207,208,209,215,217,219,221,229,230,259,276,277,279,291,295,],[39,73,39,73,73,73,73,73,73,73,73,73,73,39,39,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,265,73,73,265,73,73,73,]),'identArrayVar':([35,46,125,127,230,277,],[40,40,40,40,40,40,]),'block':([36,79,121,124,227,257,280,281,],[42,122,182,122,258,273,292,293,]),'blockAux':([43,49,],[48,99,]),'statute':([43,49,],[49,49,]),'blockRecursive':([43,49,],[51,51,]),'blockFinal':([43,49,],[52,52,]),'assignment':([43,49,],[53,53,]),'ifStatement':([43,49,],[54,54,]),'writing':([43,49,],[55,55,]),'reading':([43,49,],[56,56,]),'loop':([43,49,],[57,57,]),'functionCall':([43,49,107,108,110,111,112,115,116,153,181,200,201,202,203,204,205,206,207,208,209,215,217,221,259,279,291,],[58,58,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'returnStatement':([43,49,],[59,59,]),'regressionFunc':([43,49,],[60,60,]),'plotXYFunc':([43,49,],[61,61,]),'identifier':([43,49,77,107,108,109,110,111,112,115,116,153,181,200,201,202,203,204,205,206,207,208,209,215,217,219,221,229,230,259,276,277,279,291,295,],[62,62,117,134,134,169,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,251,134,260,264,134,283,264,134,134,298,]),'shortCondition':([43,49,],[63,63,]),'longCondition':([43,49,],[64,64,]),'conditional':([43,49,],[67,67,]),'nonconditional':([43,49,],[68,68,]),'identArray':([43,49,77,107,108,109,110,111,112,115,116,153,181,200,201,202,203,204,205,206,207,208,209,215,217,219,221,229,230,259,276,277,279,291,295,],[74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'withParameters':([44,],[78,]),'parameters':([44,231,278,],[80,267,289,]),'oneParam':([44,231,278,],[81,81,81,]),'sameTypeParam':([44,231,278,],[82,82,82,]),'newParam':([44,231,278,],[83,83,83,]),'sameTypeFinal':([46,127,277,],[87,194,288,]),'sameTypeRecursive':([46,127,],[88,193,]),'expressionVar':([47,97,129,130,279,291,],[89,133,195,196,89,133,]),'termVar':([47,97,129,130,131,132,279,291,],[90,90,90,90,197,198,90,90,]),'expressionOperationVar':([47,97,129,130,279,291,],[91,91,91,91,91,91,]),'auctionVar':([47,97,129,130,131,132,279,291,],[92,92,92,92,92,92,92,92,]),'termOperationVar':([47,97,129,130,131,132,279,291,],[93,93,93,93,93,93,93,93,]),'constantVar':([47,97,129,130,131,132,279,291,],[94,94,94,94,94,94,94,94,]),'otherExpressionVar':([47,97,129,130,131,132,279,291,],[95,95,95,95,95,95,95,95,]),'funcVer1':([79,124,],[119,188,]),'funcVer2':([79,124,],[120,189,]),'variablesLoc':([79,124,],[121,121,]),'expression':([107,108,110,111,112,115,116,153,181,200,201,215,217,221,259,279,291,],[135,164,171,175,176,179,180,210,228,233,234,164,164,171,274,175,210,]),'term':([107,108,110,111,112,115,116,153,181,200,201,202,203,215,217,221,259,279,291,],[136,136,136,136,136,136,136,136,136,136,136,235,236,136,136,136,136,136,136,]),'expressionOperation':([107,108,110,111,112,115,116,153,181,200,201,215,217,221,259,279,291,],[137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,137,]),'factor':([107,108,110,111,112,115,116,153,181,200,201,202,203,204,205,206,207,215,217,221,259,279,291,],[138,138,138,138,138,138,138,138,138,138,138,138,138,237,238,239,240,138,138,138,138,138,138,]),'termOperation':([107,108,110,111,112,115,116,153,181,200,201,202,203,215,217,221,259,279,291,],[139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,139,]),'idioms':([107,108,110,111,112,115,116,153,181,200,201,202,203,204,205,206,207,208,209,215,217,221,259,279,291,],[140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,241,242,140,140,140,140,140,140,]),'factorOperation':([107,108,110,111,112,115,116,153,181,200,201,202,203,204,205,206,207,215,217,221,259,279,291,],[141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'auction':([107,108,110,111,112,115,116,153,181,200,201,202,203,204,205,206,207,208,209,215,217,221,259,279,291,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'idiomsOperation':([107,108,110,111,112,115,116,153,181,200,201,202,203,204,205,206,207,208,209,215,217,221,259,279,291,],[143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'constant':([107,108,110,111,112,115,116,153,181,200,201,202,203,204,205,206,207,208,209,215,217,221,259,279,291,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'otherExpression':([107,108,110,111,112,115,116,153,181,200,201,202,203,204,205,206,207,208,209,215,217,221,259,279,291,],[145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'averageFunc':([107,108,110,111,112,115,116,153,181,200,201,202,203,204,205,206,207,208,209,215,217,221,259,279,291,],[146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'modeFunc':([107,108,110,111,112,115,116,153,181,200,201,202,203,204,205,206,207,208,209,215,217,221,259,279,291,],[147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,]),'varianceFunc':([107,108,110,111,112,115,116,153,181,200,201,202,203,204,205,206,207,208,209,215,217,221,259,279,291,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'someInt':([107,108,110,111,112,115,116,153,181,200,201,202,203,204,205,206,207,208,209,215,217,221,259,279,291,],[150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'someFloat':([107,108,110,111,112,115,116,153,181,200,201,202,203,204,205,206,207,208,209,215,217,221,259,279,291,],[151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,151,]),'someChar':([107,108,110,111,112,115,116,153,181,200,201,202,203,204,205,206,207,208,209,215,217,221,259,279,291,],[152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'writingAux':([108,],[160,]),'writingFinal':([108,215,217,],[161,247,249,]),'writingRecursive':([108,215,217,],[162,248,250,]),'writingString':([108,215,217,],[163,163,163,]),'readingAux':([109,],[166,]),'readingFinal':([109,219,],[167,253,]),'readingRecursive':([109,219,],[168,252,]),'callAux':([110,221,],[170,254,]),'callRecursive':([110,221,],[173,173,]),'callFinal':([110,221,],[174,174,]),'varAuxLoc':([123,275,294,301,],[183,282,297,297,]),'oneVarLoc':([123,275,294,301,],[184,184,184,184,]),'sameTypeLoc':([123,275,294,301,],[185,185,185,185,]),'newTypeLoc':([123,275,294,301,],[186,186,186,186,]),'sameTypeParamFinal':([230,],[262,]),'sameTypeParamRecursive':([230,277,],[263,287,]),'sameTypeFinalLoc':([276,295,],[284,300,]),'sameTypeRecursiveLoc':([276,295,],[285,299,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON programVer1','program',4,'p_program','analizadorSintactico.py',50),
  ('program -> PROGRAM ID SEMICOLON programVer2','program',4,'p_program','analizadorSintactico.py',51),
  ('program -> PROGRAM ID SEMICOLON programVer3','program',4,'p_program','analizadorSintactico.py',52),
  ('programVer1 -> variables functions principal','programVer1',3,'p_programVer1','analizadorSintactico.py',58),
  ('programVer2 -> variables principal','programVer2',2,'p_programVer2','analizadorSintactico.py',64),
  ('programVer2 -> functions principal','programVer2',2,'p_programVer2','analizadorSintactico.py',65),
  ('programVer3 -> principal','programVer3',1,'p_programVer3','analizadorSintactico.py',71),
  ('variables -> VARS varAux','variables',2,'p_variables','analizadorSintactico.py',77),
  ('varAux -> oneVar','varAux',1,'p_varAux','analizadorSintactico.py',83),
  ('varAux -> sameType','varAux',1,'p_varAux','analizadorSintactico.py',84),
  ('varAux -> newType','varAux',1,'p_varAux','analizadorSintactico.py',85),
  ('oneVar -> typeVar COLON identifierVar SEMICOLON','oneVar',4,'p_oneVar','analizadorSintactico.py',91),
  ('sameType -> typeVar COLON identifierVar COMA sameTypeFinal','sameType',5,'p_sameType','analizadorSintactico.py',97),
  ('sameType -> typeVar COLON identifierVar COMA sameTypeRecursive','sameType',5,'p_sameType','analizadorSintactico.py',98),
  ('sameTypeFinal -> identifierVar SEMICOLON','sameTypeFinal',2,'p_sameTypeFinal','analizadorSintactico.py',104),
  ('sameTypeRecursive -> identifierVar COMA sameTypeRecursive','sameTypeRecursive',3,'p_sameTypeRecursive','analizadorSintactico.py',110),
  ('sameTypeRecursive -> identifierVar COMA sameTypeFinal','sameTypeRecursive',3,'p_sameTypeRecursive','analizadorSintactico.py',111),
  ('sameTypeRecursive -> identifierVar SEMICOLON varAux','sameTypeRecursive',3,'p_sameTypeRecursive','analizadorSintactico.py',112),
  ('newType -> typeVar COLON identifierVar SEMICOLON varAux','newType',5,'p_newType','analizadorSintactico.py',118),
  ('functions -> funcAux','functions',1,'p_functions','analizadorSintactico.py',124),
  ('functions -> recursiveFunc','functions',1,'p_functions','analizadorSintactico.py',125),
  ('recursiveFunc -> funcAux functions','recursiveFunc',2,'p_recursiveFunc','analizadorSintactico.py',131),
  ('funcAux -> FUNCTION typeFunction ID LPAREN withParameters','funcAux',5,'p_funcAux','analizadorSintactico.py',137),
  ('funcAux -> FUNCTION typeFunction ID LPAREN RPAREN funcVer1','funcAux',6,'p_funcAux','analizadorSintactico.py',138),
  ('funcAux -> FUNCTION typeFunction ID LPAREN RPAREN funcVer2','funcAux',6,'p_funcAux','analizadorSintactico.py',139),
  ('typeFunction -> INT','typeFunction',1,'p_typeFunction','analizadorSintactico.py',145),
  ('typeFunction -> FLOAT','typeFunction',1,'p_typeFunction','analizadorSintactico.py',146),
  ('typeFunction -> CHAR','typeFunction',1,'p_typeFunction','analizadorSintactico.py',147),
  ('typeFunction -> VOID','typeFunction',1,'p_typeFunction','analizadorSintactico.py',148),
  ('withParameters -> parameters RPAREN funcVer1','withParameters',3,'p_withParameters','analizadorSintactico.py',154),
  ('withParameters -> parameters RPAREN funcVer2','withParameters',3,'p_withParameters','analizadorSintactico.py',155),
  ('funcVer1 -> variablesLoc block','funcVer1',2,'p_funcVer1','analizadorSintactico.py',161),
  ('funcVer2 -> block','funcVer2',1,'p_funcVer2','analizadorSintactico.py',167),
  ('variablesLoc -> VARS varAuxLoc','variablesLoc',2,'p_variablesLoc','analizadorSintactico.py',173),
  ('varAuxLoc -> oneVarLoc','varAuxLoc',1,'p_varAuxLoc','analizadorSintactico.py',179),
  ('varAuxLoc -> sameTypeLoc','varAuxLoc',1,'p_varAuxLoc','analizadorSintactico.py',180),
  ('varAuxLoc -> newTypeLoc','varAuxLoc',1,'p_varAuxLoc','analizadorSintactico.py',181),
  ('oneVarLoc -> typeVar COLON identifier SEMICOLON','oneVarLoc',4,'p_oneVarLoc','analizadorSintactico.py',187),
  ('sameTypeLoc -> typeVar COLON identifier COMA sameTypeFinalLoc','sameTypeLoc',5,'p_sameTypeLoc','analizadorSintactico.py',193),
  ('sameTypeLoc -> typeVar COLON identifier COMA sameTypeRecursiveLoc','sameTypeLoc',5,'p_sameTypeLoc','analizadorSintactico.py',194),
  ('sameTypeFinalLoc -> identifier SEMICOLON','sameTypeFinalLoc',2,'p_sameTypeFinalLoc','analizadorSintactico.py',200),
  ('sameTypeRecursiveLoc -> identifier COMA sameTypeRecursiveLoc','sameTypeRecursiveLoc',3,'p_sameTypeRecursiveLoc','analizadorSintactico.py',206),
  ('sameTypeRecursiveLoc -> identifier COMA sameTypeFinalLoc','sameTypeRecursiveLoc',3,'p_sameTypeRecursiveLoc','analizadorSintactico.py',207),
  ('sameTypeRecursiveLoc -> identifier SEMICOLON varAuxLoc','sameTypeRecursiveLoc',3,'p_sameTypeRecursiveLoc','analizadorSintactico.py',208),
  ('newTypeLoc -> typeVar COLON identifier SEMICOLON varAuxLoc','newTypeLoc',5,'p_newTypeLoc','analizadorSintactico.py',214),
  ('parameters -> oneParam','parameters',1,'p_parameters','analizadorSintactico.py',220),
  ('parameters -> sameTypeParam','parameters',1,'p_parameters','analizadorSintactico.py',221),
  ('parameters -> newParam','parameters',1,'p_parameters','analizadorSintactico.py',222),
  ('oneParam -> typeVar COLON identifierVar','oneParam',3,'p_oneParam','analizadorSintactico.py',228),
  ('sameTypeParam -> typeVar COLON identifierVar COMA sameTypeParamFinal','sameTypeParam',5,'p_sameTypeParam','analizadorSintactico.py',234),
  ('sameTypeParam -> typeVar COLON identifierVar COMA sameTypeParamRecursive','sameTypeParam',5,'p_sameTypeParam','analizadorSintactico.py',235),
  ('sameTypeParamFinal -> identifierVar','sameTypeParamFinal',1,'p_sameTypeParamFinal','analizadorSintactico.py',241),
  ('sameTypeParamRecursive -> identifierVar COMA sameTypeParamRecursive','sameTypeParamRecursive',3,'p_sameTypeParamRecursive','analizadorSintactico.py',247),
  ('sameTypeParamRecursive -> identifierVar COMA sameTypeFinal','sameTypeParamRecursive',3,'p_sameTypeParamRecursive','analizadorSintactico.py',248),
  ('sameTypeParamRecursive -> identifier SEMICOLON parameters','sameTypeParamRecursive',3,'p_sameTypeParamRecursive','analizadorSintactico.py',249),
  ('newParam -> typeVar COLON identifierVar SEMICOLON parameters','newParam',5,'p_newParam','analizadorSintactico.py',255),
  ('identifierVar -> identLonely','identifierVar',1,'p_identifierVar','analizadorSintactico.py',261),
  ('identifierVar -> identArrayVar','identifierVar',1,'p_identifierVar','analizadorSintactico.py',262),
  ('identArrayVar -> ID LSBRACK expressionVar RSBRACK','identArrayVar',4,'p_identArrayVar','analizadorSintactico.py',268),
  ('typeVar -> INT','typeVar',1,'p_typeVar','analizadorSintactico.py',274),
  ('typeVar -> FLOAT','typeVar',1,'p_typeVar','analizadorSintactico.py',275),
  ('typeVar -> CHAR','typeVar',1,'p_typeVar','analizadorSintactico.py',276),
  ('principal -> MAIN LPAREN RPAREN block','principal',4,'p_principal','analizadorSintactico.py',282),
  ('block -> LBRACK blockAux','block',2,'p_block','analizadorSintactico.py',288),
  ('blockAux -> statute RBRACK','blockAux',2,'p_blockAux','analizadorSintactico.py',294),
  ('blockAux -> blockRecursive','blockAux',1,'p_blockAux','analizadorSintactico.py',295),
  ('blockAux -> blockFinal','blockAux',1,'p_blockAux','analizadorSintactico.py',296),
  ('blockFinal -> RBRACK','blockFinal',1,'p_blockFinal','analizadorSintactico.py',302),
  ('blockRecursive -> statute blockAux','blockRecursive',2,'p_blockRecursive','analizadorSintactico.py',308),
  ('statute -> assignment SEMICOLON','statute',2,'p_statute','analizadorSintactico.py',314),
  ('statute -> ifStatement','statute',1,'p_statute','analizadorSintactico.py',315),
  ('statute -> writing SEMICOLON','statute',2,'p_statute','analizadorSintactico.py',316),
  ('statute -> reading SEMICOLON','statute',2,'p_statute','analizadorSintactico.py',317),
  ('statute -> loop','statute',1,'p_statute','analizadorSintactico.py',318),
  ('statute -> functionCall SEMICOLON','statute',2,'p_statute','analizadorSintactico.py',319),
  ('statute -> returnStatement SEMICOLON','statute',2,'p_statute','analizadorSintactico.py',320),
  ('statute -> regressionFunc SEMICOLON','statute',2,'p_statute','analizadorSintactico.py',321),
  ('statute -> plotXYFunc SEMICOLON','statute',2,'p_statute','analizadorSintactico.py',322),
  ('assignment -> identifier ASSIGN expression','assignment',3,'p_assignment','analizadorSintactico.py',328),
  ('returnStatement -> RETURN LPAREN expression RPAREN','returnStatement',4,'p_returnStatement','analizadorSintactico.py',334),
  ('ifStatement -> shortCondition','ifStatement',1,'p_ifStatement','analizadorSintactico.py',340),
  ('ifStatement -> longCondition','ifStatement',1,'p_ifStatement','analizadorSintactico.py',341),
  ('shortCondition -> IF LPAREN expression RPAREN THEN block','shortCondition',6,'p_shortCondition','analizadorSintactico.py',347),
  ('longCondition -> IF LPAREN expression RPAREN THEN block ELSE block','longCondition',8,'p_longCondition','analizadorSintactico.py',353),
  ('plotXYFunc -> PLOTXY LPAREN ID COMA ID RPAREN','plotXYFunc',6,'p_plotXYFunc','analizadorSintactico.py',359),
  ('regressionFunc -> REGRESSION LPAREN ID COMA ID RPAREN','regressionFunc',6,'p_regressionFunc','analizadorSintactico.py',365),
  ('writing -> WRITE LPAREN writingAux','writing',3,'p_writing','analizadorSintactico.py',371),
  ('writingAux -> writingFinal','writingAux',1,'p_writingAux','analizadorSintactico.py',377),
  ('writingAux -> writingRecursive','writingAux',1,'p_writingAux','analizadorSintactico.py',378),
  ('writingFinal -> writingString RPAREN','writingFinal',2,'p_writingFinal','analizadorSintactico.py',384),
  ('writingFinal -> expression RPAREN','writingFinal',2,'p_writingFinal','analizadorSintactico.py',385),
  ('writingString -> CTE_STRING','writingString',1,'p_writingString','analizadorSintactico.py',391),
  ('writingRecursive -> writingString COMA writingFinal','writingRecursive',3,'p_writingRecursive','analizadorSintactico.py',397),
  ('writingRecursive -> expression COMA writingFinal','writingRecursive',3,'p_writingRecursive','analizadorSintactico.py',398),
  ('writingRecursive -> writingString COMA writingRecursive','writingRecursive',3,'p_writingRecursive','analizadorSintactico.py',399),
  ('writingRecursive -> expression COMA writingRecursive','writingRecursive',3,'p_writingRecursive','analizadorSintactico.py',400),
  ('reading -> READ LPAREN readingAux','reading',3,'p_reading','analizadorSintactico.py',406),
  ('readingAux -> readingFinal','readingAux',1,'p_readingAux','analizadorSintactico.py',412),
  ('readingAux -> readingRecursive','readingAux',1,'p_readingAux','analizadorSintactico.py',413),
  ('readingFinal -> identifier RPAREN','readingFinal',2,'p_readingFinal','analizadorSintactico.py',419),
  ('readingRecursive -> identifier COMA readingRecursive','readingRecursive',3,'p_readingRecursive','analizadorSintactico.py',425),
  ('readingRecursive -> identifier COMA readingFinal','readingRecursive',3,'p_readingRecursive','analizadorSintactico.py',426),
  ('loop -> conditional','loop',1,'p_loop','analizadorSintactico.py',432),
  ('loop -> nonconditional','loop',1,'p_loop','analizadorSintactico.py',433),
  ('conditional -> WHILE LPAREN expression RPAREN block','conditional',5,'p_conditional','analizadorSintactico.py',439),
  ('nonconditional -> FOR identifier ASSIGN expression TO expression DO block','nonconditional',8,'p_nonconditional','analizadorSintactico.py',445),
  ('functionCall -> ID LPAREN callAux','functionCall',3,'p_functionCall','analizadorSintactico.py',451),
  ('callAux -> expression RPAREN','callAux',2,'p_callAux','analizadorSintactico.py',457),
  ('callAux -> callRecursive','callAux',1,'p_callAux','analizadorSintactico.py',458),
  ('callAux -> callFinal','callAux',1,'p_callAux','analizadorSintactico.py',459),
  ('callRecursive -> expression COMA callAux','callRecursive',3,'p_callRecursive','analizadorSintactico.py',465),
  ('callFinal -> RPAREN','callFinal',1,'p_callFinal','analizadorSintactico.py',471),
  ('expression -> term','expression',1,'p_expression','analizadorSintactico.py',477),
  ('expression -> expressionOperation','expression',1,'p_expression','analizadorSintactico.py',478),
  ('expressionOperation -> term PLUS expression','expressionOperation',3,'p_expressionOperation','analizadorSintactico.py',484),
  ('expressionOperation -> term MINUS expression','expressionOperation',3,'p_expressionOperation','analizadorSintactico.py',485),
  ('term -> factor','term',1,'p_term','analizadorSintactico.py',491),
  ('term -> termOperation','term',1,'p_term','analizadorSintactico.py',492),
  ('termOperation -> factor TIMES term','termOperation',3,'p_termOperation','analizadorSintactico.py',498),
  ('termOperation -> factor DIVIDE term','termOperation',3,'p_termOperation','analizadorSintactico.py',499),
  ('factor -> idioms','factor',1,'p_factor','analizadorSintactico.py',505),
  ('factor -> factorOperation','factor',1,'p_factor','analizadorSintactico.py',506),
  ('factorOperation -> idioms GTHAN factor','factorOperation',3,'p_factorOperation','analizadorSintactico.py',512),
  ('factorOperation -> idioms LTHAN factor','factorOperation',3,'p_factorOperation','analizadorSintactico.py',513),
  ('factorOperation -> idioms EQUAL factor','factorOperation',3,'p_factorOperation','analizadorSintactico.py',514),
  ('factorOperation -> idioms DIFF factor','factorOperation',3,'p_factorOperation','analizadorSintactico.py',515),
  ('idioms -> auction','idioms',1,'p_idioms','analizadorSintactico.py',521),
  ('idioms -> idiomsOperation','idioms',1,'p_idioms','analizadorSintactico.py',522),
  ('idiomsOperation -> auction OR idioms','idiomsOperation',3,'p_idiomsOperation','analizadorSintactico.py',528),
  ('idiomsOperation -> auction AND idioms','idiomsOperation',3,'p_idiomsOperation','analizadorSintactico.py',529),
  ('auction -> constant','auction',1,'p_auction','analizadorSintactico.py',535),
  ('auction -> otherExpression','auction',1,'p_auction','analizadorSintactico.py',536),
  ('auction -> identifier','auction',1,'p_auction','analizadorSintactico.py',537),
  ('auction -> averageFunc','auction',1,'p_auction','analizadorSintactico.py',538),
  ('auction -> modeFunc','auction',1,'p_auction','analizadorSintactico.py',539),
  ('auction -> varianceFunc','auction',1,'p_auction','analizadorSintactico.py',540),
  ('auction -> functionCall','auction',1,'p_auction','analizadorSintactico.py',541),
  ('constant -> someInt','constant',1,'p_constant','analizadorSintactico.py',547),
  ('constant -> someFloat','constant',1,'p_constant','analizadorSintactico.py',548),
  ('constant -> someChar','constant',1,'p_constant','analizadorSintactico.py',549),
  ('someInt -> CTE_INT','someInt',1,'p_someInt','analizadorSintactico.py',555),
  ('someFloat -> CTE_FLOAT','someFloat',1,'p_someFloat','analizadorSintactico.py',561),
  ('someChar -> CTE_CHAR','someChar',1,'p_someChar','analizadorSintactico.py',567),
  ('otherExpression -> LPAREN expression RPAREN','otherExpression',3,'p_otherExpression','analizadorSintactico.py',573),
  ('identifier -> identLonely','identifier',1,'p_identifier','analizadorSintactico.py',579),
  ('identifier -> identArray','identifier',1,'p_identifier','analizadorSintactico.py',580),
  ('identLonely -> ID','identLonely',1,'p_identLonely','analizadorSintactico.py',586),
  ('identArray -> ID LSBRACK expression RSBRACK','identArray',4,'p_identArray','analizadorSintactico.py',592),
  ('averageFunc -> AVERAGE LPAREN ID RPAREN','averageFunc',4,'p_averageFunc','analizadorSintactico.py',598),
  ('modeFunc -> MODE LPAREN ID RPAREN','modeFunc',4,'p_modeFunc','analizadorSintactico.py',604),
  ('varianceFunc -> VARIANCE LPAREN ID RPAREN','varianceFunc',4,'p_varianceFunc','analizadorSintactico.py',610),
  ('expressionVar -> termVar','expressionVar',1,'p_expressionVar','analizadorSintactico.py',616),
  ('expressionVar -> expressionOperationVar','expressionVar',1,'p_expressionVar','analizadorSintactico.py',617),
  ('expressionOperationVar -> termVar PLUS expressionVar','expressionOperationVar',3,'p_expressionOperationVar','analizadorSintactico.py',623),
  ('expressionOperationVar -> termVar MINUS expressionVar','expressionOperationVar',3,'p_expressionOperationVar','analizadorSintactico.py',624),
  ('termVar -> auctionVar','termVar',1,'p_termVar','analizadorSintactico.py',630),
  ('termVar -> termOperationVar','termVar',1,'p_termVar','analizadorSintactico.py',631),
  ('termOperationVar -> auctionVar TIMES termVar','termOperationVar',3,'p_termOperationVar','analizadorSintactico.py',637),
  ('termOperationVar -> auctionVar DIVIDE termVar','termOperationVar',3,'p_termOperationVar','analizadorSintactico.py',638),
  ('auctionVar -> constantVar','auctionVar',1,'p_auctionVar','analizadorSintactico.py',644),
  ('auctionVar -> otherExpressionVar','auctionVar',1,'p_auctionVar','analizadorSintactico.py',645),
  ('constantVar -> CTE_INT','constantVar',1,'p_constantVar','analizadorSintactico.py',651),
  ('otherExpressionVar -> LPAREN expressionVar RPAREN','otherExpressionVar',3,'p_otherExpressionVar','analizadorSintactico.py',657),
]
