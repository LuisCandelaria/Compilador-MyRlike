Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON programVer1
Rule 2     program -> PROGRAM ID SEMICOLON programVer2
Rule 3     program -> PROGRAM ID SEMICOLON programVer3
Rule 4     programVer1 -> variables functions principal
Rule 5     programVer2 -> variables principal
Rule 6     programVer2 -> functions principal
Rule 7     programVer3 -> principal
Rule 8     variables -> VARS varAux
Rule 9     varAux -> oneVar
Rule 10    varAux -> sameType
Rule 11    varAux -> newType
Rule 12    oneVar -> typeVar COLON identifierVar SEMICOLON
Rule 13    sameType -> typeVar COLON identifierVar COMA sameTypeFinal
Rule 14    sameType -> typeVar COLON identifierVar COMA sameTypeRecursive
Rule 15    sameTypeFinal -> identifierVar SEMICOLON
Rule 16    sameTypeRecursive -> identifierVar COMA sameTypeRecursive
Rule 17    sameTypeRecursive -> identifierVar COMA sameTypeFinal
Rule 18    sameTypeRecursive -> identifierVar SEMICOLON varAux
Rule 19    newType -> typeVar COLON identifierVar SEMICOLON varAux
Rule 20    functions -> funcAux
Rule 21    functions -> recursiveFunc
Rule 22    recursiveFunc -> funcAux functions
Rule 23    funcAux -> FUNCTION typeFunction ID LPAREN withParameters
Rule 24    funcAux -> FUNCTION typeFunction ID emptyPar funcVer1
Rule 25    funcAux -> FUNCTION typeFunction ID emptyPar funcVer2
Rule 26    emptyPar -> LPAREN RPAREN
Rule 27    typeFunction -> INT
Rule 28    typeFunction -> FLOAT
Rule 29    typeFunction -> CHAR
Rule 30    typeFunction -> VOID
Rule 31    withParameters -> parameters RPAREN funcVer1
Rule 32    withParameters -> parameters RPAREN funcVer2
Rule 33    funcVer1 -> variablesLoc block
Rule 34    funcVer2 -> block
Rule 35    variablesLoc -> VARS varAuxLoc
Rule 36    varAuxLoc -> oneVarLoc
Rule 37    varAuxLoc -> sameTypeLoc
Rule 38    varAuxLoc -> newTypeLoc
Rule 39    oneVarLoc -> typeVar COLON identifier SEMICOLON
Rule 40    sameTypeLoc -> typeVar COLON identifier COMA sameTypeFinalLoc
Rule 41    sameTypeLoc -> typeVar COLON identifier COMA sameTypeRecursiveLoc
Rule 42    sameTypeFinalLoc -> identifier SEMICOLON
Rule 43    sameTypeRecursiveLoc -> identifier COMA sameTypeRecursiveLoc
Rule 44    sameTypeRecursiveLoc -> identifier COMA sameTypeFinalLoc
Rule 45    sameTypeRecursiveLoc -> identifier SEMICOLON varAuxLoc
Rule 46    newTypeLoc -> typeVar COLON identifier SEMICOLON varAuxLoc
Rule 47    parameters -> oneParam
Rule 48    parameters -> sameTypeParam
Rule 49    parameters -> newParam
Rule 50    oneParam -> typeVar COLON identifierVar
Rule 51    sameTypeParam -> typeVar COLON identifierVar COMA sameTypeParamFinal
Rule 52    sameTypeParam -> typeVar COLON identifierVar COMA sameTypeParamRecursive
Rule 53    sameTypeParamFinal -> identifierVar
Rule 54    sameTypeParamRecursive -> identifierVar COMA sameTypeParamRecursive
Rule 55    sameTypeParamRecursive -> identifierVar COMA sameTypeParamFinal
Rule 56    sameTypeParamRecursive -> identifierVar SEMICOLON parameters
Rule 57    newParam -> typeVar COLON identifierVar SEMICOLON parameters
Rule 58    identifierVar -> identLonely
Rule 59    identifierVar -> identArrayVar
Rule 60    identArrayVar -> ID LSBRACK expressionVar RSBRACK
Rule 61    typeVar -> INT
Rule 62    typeVar -> FLOAT
Rule 63    typeVar -> CHAR
Rule 64    principal -> MAIN LPAREN RPAREN block
Rule 65    block -> LBRACK blockAux
Rule 66    blockAux -> statute RBRACK
Rule 67    blockAux -> blockRecursive
Rule 68    blockAux -> blockFinal
Rule 69    blockFinal -> RBRACK
Rule 70    blockRecursive -> statute blockAux
Rule 71    statute -> assignment SEMICOLON
Rule 72    statute -> ifStatement
Rule 73    statute -> writing SEMICOLON
Rule 74    statute -> reading SEMICOLON
Rule 75    statute -> loop
Rule 76    statute -> functionCall SEMICOLON
Rule 77    statute -> returnStatement SEMICOLON
Rule 78    statute -> regressionFunc SEMICOLON
Rule 79    statute -> plotXYFunc SEMICOLON
Rule 80    assignment -> identifier ASSIGN expression
Rule 81    returnStatement -> RETURN LPAREN expression RPAREN
Rule 82    ifStatement -> shortCondition
Rule 83    ifStatement -> longCondition
Rule 84    shortCondition -> IF LPAREN expression RPAREN THEN block
Rule 85    longCondition -> IF LPAREN expression RPAREN THEN block ELSE block
Rule 86    plotXYFunc -> PLOTXY LPAREN ID COMA ID RPAREN
Rule 87    regressionFunc -> REGRESSION LPAREN ID COMA ID RPAREN
Rule 88    writing -> WRITE LPAREN writingAux
Rule 89    writingAux -> writingFinal
Rule 90    writingAux -> writingRecursive
Rule 91    writingFinal -> writingString RPAREN
Rule 92    writingFinal -> expression RPAREN
Rule 93    writingString -> CTE_STRING
Rule 94    writingRecursive -> writingString COMA writingFinal
Rule 95    writingRecursive -> expression COMA writingFinal
Rule 96    writingRecursive -> writingString COMA writingRecursive
Rule 97    writingRecursive -> expression COMA writingRecursive
Rule 98    reading -> READ LPAREN readingAux
Rule 99    readingAux -> readingFinal
Rule 100   readingAux -> readingRecursive
Rule 101   readingFinal -> identifier RPAREN
Rule 102   readingRecursive -> identifier COMA readingRecursive
Rule 103   readingRecursive -> identifier COMA readingFinal
Rule 104   loop -> conditional
Rule 105   loop -> nonconditional
Rule 106   conditional -> WHILE LPAREN expression RPAREN block
Rule 107   nonconditional -> FOR assignment TO expression DO block
Rule 108   functionCall -> ID LPAREN callAux
Rule 109   callAux -> expression RPAREN
Rule 110   callAux -> callRecursive
Rule 111   callAux -> callFinal
Rule 112   callRecursive -> expression COMA callAux
Rule 113   callFinal -> RPAREN
Rule 114   expression -> term
Rule 115   expression -> expressionOperation
Rule 116   expressionOperation -> term PLUS expression
Rule 117   expressionOperation -> term MINUS expression
Rule 118   term -> factor
Rule 119   term -> termOperation
Rule 120   termOperation -> factor TIMES term
Rule 121   termOperation -> factor DIVIDE term
Rule 122   factor -> idioms
Rule 123   factor -> factorOperation
Rule 124   factorOperation -> idioms GTHAN factor
Rule 125   factorOperation -> idioms LTHAN factor
Rule 126   factorOperation -> idioms EQUAL factor
Rule 127   factorOperation -> idioms DIFF factor
Rule 128   idioms -> auction
Rule 129   idioms -> idiomsOperation
Rule 130   idiomsOperation -> auction OR idioms
Rule 131   idiomsOperation -> auction AND idioms
Rule 132   auction -> constant
Rule 133   auction -> otherExpression
Rule 134   auction -> identifier
Rule 135   auction -> averageFunc
Rule 136   auction -> modeFunc
Rule 137   auction -> varianceFunc
Rule 138   auction -> functionCall
Rule 139   constant -> someInt
Rule 140   constant -> someFloat
Rule 141   constant -> someChar
Rule 142   someInt -> CTE_INT
Rule 143   someFloat -> CTE_FLOAT
Rule 144   someChar -> CTE_CHAR
Rule 145   otherExpression -> LPAREN expression RPAREN
Rule 146   identifier -> identLonely
Rule 147   identifier -> identArray
Rule 148   identLonely -> ID
Rule 149   identArray -> ID LSBRACK expression RSBRACK
Rule 150   averageFunc -> AVERAGE LPAREN ID RPAREN
Rule 151   modeFunc -> MODE LPAREN ID RPAREN
Rule 152   varianceFunc -> VARIANCE LPAREN ID RPAREN
Rule 153   expressionVar -> termVar
Rule 154   expressionVar -> expressionOperationVar
Rule 155   expressionOperationVar -> termVar PLUS expressionVar
Rule 156   expressionOperationVar -> termVar MINUS expressionVar
Rule 157   termVar -> auctionVar
Rule 158   termVar -> termOperationVar
Rule 159   termOperationVar -> auctionVar TIMES termVar
Rule 160   termOperationVar -> auctionVar DIVIDE termVar
Rule 161   auctionVar -> constantVar
Rule 162   auctionVar -> otherExpressionVar
Rule 163   constantVar -> CTE_INT
Rule 164   otherExpressionVar -> LPAREN expressionVar RPAREN

Terminals, with rules where they appear

AND                  : 131
ASSIGN               : 80
AVERAGE              : 150
CHAR                 : 29 63
COLON                : 12 13 14 19 39 40 41 46 50 51 52 57
COMA                 : 13 14 16 17 40 41 43 44 51 52 54 55 86 87 94 95 96 97 102 103 112
CTE_CHAR             : 144
CTE_FLOAT            : 143
CTE_INT              : 142 163
CTE_STRING           : 93
DIFF                 : 127
DIVIDE               : 121 160
DO                   : 107
ELSE                 : 85
EQUAL                : 126
FLOAT                : 28 62
FOR                  : 107
FUNCTION             : 23 24 25
GTHAN                : 124
ID                   : 1 2 3 23 24 25 60 86 86 87 87 108 148 149 150 151 152
IF                   : 84 85
INT                  : 27 61
LBRACK               : 65
LPAREN               : 23 26 64 81 84 85 86 87 88 98 106 108 145 150 151 152 164
LSBRACK              : 60 149
LTHAN                : 125
MAIN                 : 64
MINUS                : 117 156
MODE                 : 151
OR                   : 130
PLOTXY               : 86
PLUS                 : 116 155
PROGRAM              : 1 2 3
RBRACK               : 66 69
READ                 : 98
REGRESSION           : 87
RETURN               : 81
RPAREN               : 26 31 32 64 81 84 85 86 87 91 92 101 106 109 113 145 150 151 152 164
RSBRACK              : 60 149
SEMICOLON            : 1 2 3 12 15 18 19 39 42 45 46 56 57 71 73 74 76 77 78 79
THEN                 : 84 85
TIMES                : 120 159
TO                   : 107
VARIANCE             : 152
VARS                 : 8 35
VOID                 : 30
WHILE                : 106
WRITE                : 88
error                : 

Nonterminals, with rules where they appear

assignment           : 71 107
auction              : 128 130 131
auctionVar           : 157 159 160
averageFunc          : 135
block                : 33 34 64 84 85 85 106 107
blockAux             : 65 70
blockFinal           : 68
blockRecursive       : 67
callAux              : 108 112
callFinal            : 111
callRecursive        : 110
conditional          : 104
constant             : 132
constantVar          : 161
emptyPar             : 24 25
expression           : 80 81 84 85 92 95 97 106 107 109 112 116 117 145 149
expressionOperation  : 115
expressionOperationVar : 154
expressionVar        : 60 155 156 164
factor               : 118 120 121 124 125 126 127
factorOperation      : 123
funcAux              : 20 22
funcVer1             : 24 31
funcVer2             : 25 32
functionCall         : 76 138
functions            : 4 6 22
identArray           : 147
identArrayVar        : 59
identLonely          : 58 146
identifier           : 39 40 41 42 43 44 45 46 80 101 102 103 134
identifierVar        : 12 13 14 15 16 17 18 19 50 51 52 53 54 55 56 57
idioms               : 122 124 125 126 127 130 131
idiomsOperation      : 129
ifStatement          : 72
longCondition        : 83
loop                 : 75
modeFunc             : 136
newParam             : 49
newType              : 11
newTypeLoc           : 38
nonconditional       : 105
oneParam             : 47
oneVar               : 9
oneVarLoc            : 36
otherExpression      : 133
otherExpressionVar   : 162
parameters           : 31 32 56 57
plotXYFunc           : 79
principal            : 4 5 6 7
program              : 0
programVer1          : 1
programVer2          : 2
programVer3          : 3
reading              : 74
readingAux           : 98
readingFinal         : 99 103
readingRecursive     : 100 102
recursiveFunc        : 21
regressionFunc       : 78
returnStatement      : 77
sameType             : 10
sameTypeFinal        : 13 17
sameTypeFinalLoc     : 40 44
sameTypeLoc          : 37
sameTypeParam        : 48
sameTypeParamFinal   : 51 55
sameTypeParamRecursive : 52 54
sameTypeRecursive    : 14 16
sameTypeRecursiveLoc : 41 43
shortCondition       : 82
someChar             : 141
someFloat            : 140
someInt              : 139
statute              : 66 70
term                 : 114 116 117 120 121
termOperation        : 119
termOperationVar     : 158
termVar              : 153 155 156 159 160
typeFunction         : 23 24 25
typeVar              : 12 13 14 19 39 40 41 46 50 51 52 57
varAux               : 8 18 19
varAuxLoc            : 35 45 46
variables            : 4 5
variablesLoc         : 33
varianceFunc         : 137
withParameters       : 23
writing              : 73
writingAux           : 88
writingFinal         : 89 94 95
writingRecursive     : 90 96 97
writingString        : 91 94 96

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON programVer1
    (2) program -> . PROGRAM ID SEMICOLON programVer2
    (3) program -> . PROGRAM ID SEMICOLON programVer3

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON programVer1
    (2) program -> PROGRAM . ID SEMICOLON programVer2
    (3) program -> PROGRAM . ID SEMICOLON programVer3

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON programVer1
    (2) program -> PROGRAM ID . SEMICOLON programVer2
    (3) program -> PROGRAM ID . SEMICOLON programVer3

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . programVer1
    (2) program -> PROGRAM ID SEMICOLON . programVer2
    (3) program -> PROGRAM ID SEMICOLON . programVer3
    (4) programVer1 -> . variables functions principal
    (5) programVer2 -> . variables principal
    (6) programVer2 -> . functions principal
    (7) programVer3 -> . principal
    (8) variables -> . VARS varAux
    (20) functions -> . funcAux
    (21) functions -> . recursiveFunc
    (64) principal -> . MAIN LPAREN RPAREN block
    (23) funcAux -> . FUNCTION typeFunction ID LPAREN withParameters
    (24) funcAux -> . FUNCTION typeFunction ID emptyPar funcVer1
    (25) funcAux -> . FUNCTION typeFunction ID emptyPar funcVer2
    (22) recursiveFunc -> . funcAux functions

    VARS            shift and go to state 11
    MAIN            shift and go to state 14
    FUNCTION        shift and go to state 15

    programVer1                    shift and go to state 5
    programVer2                    shift and go to state 6
    programVer3                    shift and go to state 7
    variables                      shift and go to state 8
    functions                      shift and go to state 9
    principal                      shift and go to state 10
    funcAux                        shift and go to state 12
    recursiveFunc                  shift and go to state 13

state 5

    (1) program -> PROGRAM ID SEMICOLON programVer1 .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON programVer1 .)


state 6

    (2) program -> PROGRAM ID SEMICOLON programVer2 .

    $end            reduce using rule 2 (program -> PROGRAM ID SEMICOLON programVer2 .)


state 7

    (3) program -> PROGRAM ID SEMICOLON programVer3 .

    $end            reduce using rule 3 (program -> PROGRAM ID SEMICOLON programVer3 .)


state 8

    (4) programVer1 -> variables . functions principal
    (5) programVer2 -> variables . principal
    (20) functions -> . funcAux
    (21) functions -> . recursiveFunc
    (64) principal -> . MAIN LPAREN RPAREN block
    (23) funcAux -> . FUNCTION typeFunction ID LPAREN withParameters
    (24) funcAux -> . FUNCTION typeFunction ID emptyPar funcVer1
    (25) funcAux -> . FUNCTION typeFunction ID emptyPar funcVer2
    (22) recursiveFunc -> . funcAux functions

    MAIN            shift and go to state 14
    FUNCTION        shift and go to state 15

    functions                      shift and go to state 16
    principal                      shift and go to state 17
    funcAux                        shift and go to state 12
    recursiveFunc                  shift and go to state 13

state 9

    (6) programVer2 -> functions . principal
    (64) principal -> . MAIN LPAREN RPAREN block

    MAIN            shift and go to state 14

    principal                      shift and go to state 18

state 10

    (7) programVer3 -> principal .

    $end            reduce using rule 7 (programVer3 -> principal .)


state 11

    (8) variables -> VARS . varAux
    (9) varAux -> . oneVar
    (10) varAux -> . sameType
    (11) varAux -> . newType
    (12) oneVar -> . typeVar COLON identifierVar SEMICOLON
    (13) sameType -> . typeVar COLON identifierVar COMA sameTypeFinal
    (14) sameType -> . typeVar COLON identifierVar COMA sameTypeRecursive
    (19) newType -> . typeVar COLON identifierVar SEMICOLON varAux
    (61) typeVar -> . INT
    (62) typeVar -> . FLOAT
    (63) typeVar -> . CHAR

    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    varAux                         shift and go to state 19
    oneVar                         shift and go to state 20
    sameType                       shift and go to state 21
    newType                        shift and go to state 22
    typeVar                        shift and go to state 23

state 12

    (20) functions -> funcAux .
    (22) recursiveFunc -> funcAux . functions
    (20) functions -> . funcAux
    (21) functions -> . recursiveFunc
    (23) funcAux -> . FUNCTION typeFunction ID LPAREN withParameters
    (24) funcAux -> . FUNCTION typeFunction ID emptyPar funcVer1
    (25) funcAux -> . FUNCTION typeFunction ID emptyPar funcVer2
    (22) recursiveFunc -> . funcAux functions

    MAIN            reduce using rule 20 (functions -> funcAux .)
    FUNCTION        shift and go to state 15

    funcAux                        shift and go to state 12
    functions                      shift and go to state 27
    recursiveFunc                  shift and go to state 13

state 13

    (21) functions -> recursiveFunc .

    MAIN            reduce using rule 21 (functions -> recursiveFunc .)


state 14

    (64) principal -> MAIN . LPAREN RPAREN block

    LPAREN          shift and go to state 28


state 15

    (23) funcAux -> FUNCTION . typeFunction ID LPAREN withParameters
    (24) funcAux -> FUNCTION . typeFunction ID emptyPar funcVer1
    (25) funcAux -> FUNCTION . typeFunction ID emptyPar funcVer2
    (27) typeFunction -> . INT
    (28) typeFunction -> . FLOAT
    (29) typeFunction -> . CHAR
    (30) typeFunction -> . VOID

    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    CHAR            shift and go to state 32
    VOID            shift and go to state 33

    typeFunction                   shift and go to state 29

state 16

    (4) programVer1 -> variables functions . principal
    (64) principal -> . MAIN LPAREN RPAREN block

    MAIN            shift and go to state 14

    principal                      shift and go to state 34

state 17

    (5) programVer2 -> variables principal .

    $end            reduce using rule 5 (programVer2 -> variables principal .)


state 18

    (6) programVer2 -> functions principal .

    $end            reduce using rule 6 (programVer2 -> functions principal .)


state 19

    (8) variables -> VARS varAux .

    MAIN            reduce using rule 8 (variables -> VARS varAux .)
    FUNCTION        reduce using rule 8 (variables -> VARS varAux .)


state 20

    (9) varAux -> oneVar .

    MAIN            reduce using rule 9 (varAux -> oneVar .)
    FUNCTION        reduce using rule 9 (varAux -> oneVar .)


state 21

    (10) varAux -> sameType .

    MAIN            reduce using rule 10 (varAux -> sameType .)
    FUNCTION        reduce using rule 10 (varAux -> sameType .)


state 22

    (11) varAux -> newType .

    MAIN            reduce using rule 11 (varAux -> newType .)
    FUNCTION        reduce using rule 11 (varAux -> newType .)


state 23

    (12) oneVar -> typeVar . COLON identifierVar SEMICOLON
    (13) sameType -> typeVar . COLON identifierVar COMA sameTypeFinal
    (14) sameType -> typeVar . COLON identifierVar COMA sameTypeRecursive
    (19) newType -> typeVar . COLON identifierVar SEMICOLON varAux

    COLON           shift and go to state 35


state 24

    (61) typeVar -> INT .

    COLON           reduce using rule 61 (typeVar -> INT .)


state 25

    (62) typeVar -> FLOAT .

    COLON           reduce using rule 62 (typeVar -> FLOAT .)


state 26

    (63) typeVar -> CHAR .

    COLON           reduce using rule 63 (typeVar -> CHAR .)


state 27

    (22) recursiveFunc -> funcAux functions .

    MAIN            reduce using rule 22 (recursiveFunc -> funcAux functions .)


state 28

    (64) principal -> MAIN LPAREN . RPAREN block

    RPAREN          shift and go to state 36


state 29

    (23) funcAux -> FUNCTION typeFunction . ID LPAREN withParameters
    (24) funcAux -> FUNCTION typeFunction . ID emptyPar funcVer1
    (25) funcAux -> FUNCTION typeFunction . ID emptyPar funcVer2

    ID              shift and go to state 37


state 30

    (27) typeFunction -> INT .

    ID              reduce using rule 27 (typeFunction -> INT .)


state 31

    (28) typeFunction -> FLOAT .

    ID              reduce using rule 28 (typeFunction -> FLOAT .)


state 32

    (29) typeFunction -> CHAR .

    ID              reduce using rule 29 (typeFunction -> CHAR .)


state 33

    (30) typeFunction -> VOID .

    ID              reduce using rule 30 (typeFunction -> VOID .)


state 34

    (4) programVer1 -> variables functions principal .

    $end            reduce using rule 4 (programVer1 -> variables functions principal .)


state 35

    (12) oneVar -> typeVar COLON . identifierVar SEMICOLON
    (13) sameType -> typeVar COLON . identifierVar COMA sameTypeFinal
    (14) sameType -> typeVar COLON . identifierVar COMA sameTypeRecursive
    (19) newType -> typeVar COLON . identifierVar SEMICOLON varAux
    (58) identifierVar -> . identLonely
    (59) identifierVar -> . identArrayVar
    (148) identLonely -> . ID
    (60) identArrayVar -> . ID LSBRACK expressionVar RSBRACK

    ID              shift and go to state 41

    identifierVar                  shift and go to state 38
    identLonely                    shift and go to state 39
    identArrayVar                  shift and go to state 40

state 36

    (64) principal -> MAIN LPAREN RPAREN . block
    (65) block -> . LBRACK blockAux

    LBRACK          shift and go to state 43

    block                          shift and go to state 42

state 37

    (23) funcAux -> FUNCTION typeFunction ID . LPAREN withParameters
    (24) funcAux -> FUNCTION typeFunction ID . emptyPar funcVer1
    (25) funcAux -> FUNCTION typeFunction ID . emptyPar funcVer2
    (26) emptyPar -> . LPAREN RPAREN

    LPAREN          shift and go to state 44

    emptyPar                       shift and go to state 45

state 38

    (12) oneVar -> typeVar COLON identifierVar . SEMICOLON
    (13) sameType -> typeVar COLON identifierVar . COMA sameTypeFinal
    (14) sameType -> typeVar COLON identifierVar . COMA sameTypeRecursive
    (19) newType -> typeVar COLON identifierVar . SEMICOLON varAux

    SEMICOLON       shift and go to state 46
    COMA            shift and go to state 47


state 39

    (58) identifierVar -> identLonely .

    SEMICOLON       reduce using rule 58 (identifierVar -> identLonely .)
    COMA            reduce using rule 58 (identifierVar -> identLonely .)
    RPAREN          reduce using rule 58 (identifierVar -> identLonely .)


state 40

    (59) identifierVar -> identArrayVar .

    SEMICOLON       reduce using rule 59 (identifierVar -> identArrayVar .)
    COMA            reduce using rule 59 (identifierVar -> identArrayVar .)
    RPAREN          reduce using rule 59 (identifierVar -> identArrayVar .)


state 41

    (148) identLonely -> ID .
    (60) identArrayVar -> ID . LSBRACK expressionVar RSBRACK

    SEMICOLON       reduce using rule 148 (identLonely -> ID .)
    COMA            reduce using rule 148 (identLonely -> ID .)
    RPAREN          reduce using rule 148 (identLonely -> ID .)
    LSBRACK         shift and go to state 48


state 42

    (64) principal -> MAIN LPAREN RPAREN block .

    $end            reduce using rule 64 (principal -> MAIN LPAREN RPAREN block .)


state 43

    (65) block -> LBRACK . blockAux
    (66) blockAux -> . statute RBRACK
    (67) blockAux -> . blockRecursive
    (68) blockAux -> . blockFinal
    (71) statute -> . assignment SEMICOLON
    (72) statute -> . ifStatement
    (73) statute -> . writing SEMICOLON
    (74) statute -> . reading SEMICOLON
    (75) statute -> . loop
    (76) statute -> . functionCall SEMICOLON
    (77) statute -> . returnStatement SEMICOLON
    (78) statute -> . regressionFunc SEMICOLON
    (79) statute -> . plotXYFunc SEMICOLON
    (70) blockRecursive -> . statute blockAux
    (69) blockFinal -> . RBRACK
    (80) assignment -> . identifier ASSIGN expression
    (82) ifStatement -> . shortCondition
    (83) ifStatement -> . longCondition
    (88) writing -> . WRITE LPAREN writingAux
    (98) reading -> . READ LPAREN readingAux
    (104) loop -> . conditional
    (105) loop -> . nonconditional
    (108) functionCall -> . ID LPAREN callAux
    (81) returnStatement -> . RETURN LPAREN expression RPAREN
    (87) regressionFunc -> . REGRESSION LPAREN ID COMA ID RPAREN
    (86) plotXYFunc -> . PLOTXY LPAREN ID COMA ID RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (84) shortCondition -> . IF LPAREN expression RPAREN THEN block
    (85) longCondition -> . IF LPAREN expression RPAREN THEN block ELSE block
    (106) conditional -> . WHILE LPAREN expression RPAREN block
    (107) nonconditional -> . FOR assignment TO expression DO block
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    RBRACK          shift and go to state 51
    WRITE           shift and go to state 66
    READ            shift and go to state 67
    ID              shift and go to state 70
    RETURN          shift and go to state 71
    REGRESSION      shift and go to state 72
    PLOTXY          shift and go to state 73
    IF              shift and go to state 76
    WHILE           shift and go to state 77
    FOR             shift and go to state 78

    blockAux                       shift and go to state 49
    statute                        shift and go to state 50
    blockRecursive                 shift and go to state 52
    blockFinal                     shift and go to state 53
    assignment                     shift and go to state 54
    ifStatement                    shift and go to state 55
    writing                        shift and go to state 56
    reading                        shift and go to state 57
    loop                           shift and go to state 58
    functionCall                   shift and go to state 59
    returnStatement                shift and go to state 60
    regressionFunc                 shift and go to state 61
    plotXYFunc                     shift and go to state 62
    identifier                     shift and go to state 63
    shortCondition                 shift and go to state 64
    longCondition                  shift and go to state 65
    conditional                    shift and go to state 68
    nonconditional                 shift and go to state 69
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 44

    (23) funcAux -> FUNCTION typeFunction ID LPAREN . withParameters
    (26) emptyPar -> LPAREN . RPAREN
    (31) withParameters -> . parameters RPAREN funcVer1
    (32) withParameters -> . parameters RPAREN funcVer2
    (47) parameters -> . oneParam
    (48) parameters -> . sameTypeParam
    (49) parameters -> . newParam
    (50) oneParam -> . typeVar COLON identifierVar
    (51) sameTypeParam -> . typeVar COLON identifierVar COMA sameTypeParamFinal
    (52) sameTypeParam -> . typeVar COLON identifierVar COMA sameTypeParamRecursive
    (57) newParam -> . typeVar COLON identifierVar SEMICOLON parameters
    (61) typeVar -> . INT
    (62) typeVar -> . FLOAT
    (63) typeVar -> . CHAR

    RPAREN          shift and go to state 80
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    withParameters                 shift and go to state 79
    parameters                     shift and go to state 81
    oneParam                       shift and go to state 82
    sameTypeParam                  shift and go to state 83
    newParam                       shift and go to state 84
    typeVar                        shift and go to state 85

state 45

    (24) funcAux -> FUNCTION typeFunction ID emptyPar . funcVer1
    (25) funcAux -> FUNCTION typeFunction ID emptyPar . funcVer2
    (33) funcVer1 -> . variablesLoc block
    (34) funcVer2 -> . block
    (35) variablesLoc -> . VARS varAuxLoc
    (65) block -> . LBRACK blockAux

    VARS            shift and go to state 90
    LBRACK          shift and go to state 43

    funcVer1                       shift and go to state 86
    funcVer2                       shift and go to state 87
    variablesLoc                   shift and go to state 88
    block                          shift and go to state 89

state 46

    (12) oneVar -> typeVar COLON identifierVar SEMICOLON .
    (19) newType -> typeVar COLON identifierVar SEMICOLON . varAux
    (9) varAux -> . oneVar
    (10) varAux -> . sameType
    (11) varAux -> . newType
    (12) oneVar -> . typeVar COLON identifierVar SEMICOLON
    (13) sameType -> . typeVar COLON identifierVar COMA sameTypeFinal
    (14) sameType -> . typeVar COLON identifierVar COMA sameTypeRecursive
    (19) newType -> . typeVar COLON identifierVar SEMICOLON varAux
    (61) typeVar -> . INT
    (62) typeVar -> . FLOAT
    (63) typeVar -> . CHAR

    MAIN            reduce using rule 12 (oneVar -> typeVar COLON identifierVar SEMICOLON .)
    FUNCTION        reduce using rule 12 (oneVar -> typeVar COLON identifierVar SEMICOLON .)
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    typeVar                        shift and go to state 23
    varAux                         shift and go to state 91
    oneVar                         shift and go to state 20
    sameType                       shift and go to state 21
    newType                        shift and go to state 22

state 47

    (13) sameType -> typeVar COLON identifierVar COMA . sameTypeFinal
    (14) sameType -> typeVar COLON identifierVar COMA . sameTypeRecursive
    (15) sameTypeFinal -> . identifierVar SEMICOLON
    (16) sameTypeRecursive -> . identifierVar COMA sameTypeRecursive
    (17) sameTypeRecursive -> . identifierVar COMA sameTypeFinal
    (18) sameTypeRecursive -> . identifierVar SEMICOLON varAux
    (58) identifierVar -> . identLonely
    (59) identifierVar -> . identArrayVar
    (148) identLonely -> . ID
    (60) identArrayVar -> . ID LSBRACK expressionVar RSBRACK

    ID              shift and go to state 41

    identifierVar                  shift and go to state 92
    sameTypeFinal                  shift and go to state 93
    sameTypeRecursive              shift and go to state 94
    identLonely                    shift and go to state 39
    identArrayVar                  shift and go to state 40

state 48

    (60) identArrayVar -> ID LSBRACK . expressionVar RSBRACK
    (153) expressionVar -> . termVar
    (154) expressionVar -> . expressionOperationVar
    (157) termVar -> . auctionVar
    (158) termVar -> . termOperationVar
    (155) expressionOperationVar -> . termVar PLUS expressionVar
    (156) expressionOperationVar -> . termVar MINUS expressionVar
    (161) auctionVar -> . constantVar
    (162) auctionVar -> . otherExpressionVar
    (159) termOperationVar -> . auctionVar TIMES termVar
    (160) termOperationVar -> . auctionVar DIVIDE termVar
    (163) constantVar -> . CTE_INT
    (164) otherExpressionVar -> . LPAREN expressionVar RPAREN

    CTE_INT         shift and go to state 102
    LPAREN          shift and go to state 103

    expressionVar                  shift and go to state 95
    termVar                        shift and go to state 96
    expressionOperationVar         shift and go to state 97
    auctionVar                     shift and go to state 98
    termOperationVar               shift and go to state 99
    constantVar                    shift and go to state 100
    otherExpressionVar             shift and go to state 101

state 49

    (65) block -> LBRACK blockAux .

    $end            reduce using rule 65 (block -> LBRACK blockAux .)
    FUNCTION        reduce using rule 65 (block -> LBRACK blockAux .)
    MAIN            reduce using rule 65 (block -> LBRACK blockAux .)
    RBRACK          reduce using rule 65 (block -> LBRACK blockAux .)
    WRITE           reduce using rule 65 (block -> LBRACK blockAux .)
    READ            reduce using rule 65 (block -> LBRACK blockAux .)
    ID              reduce using rule 65 (block -> LBRACK blockAux .)
    RETURN          reduce using rule 65 (block -> LBRACK blockAux .)
    REGRESSION      reduce using rule 65 (block -> LBRACK blockAux .)
    PLOTXY          reduce using rule 65 (block -> LBRACK blockAux .)
    IF              reduce using rule 65 (block -> LBRACK blockAux .)
    WHILE           reduce using rule 65 (block -> LBRACK blockAux .)
    FOR             reduce using rule 65 (block -> LBRACK blockAux .)
    ELSE            reduce using rule 65 (block -> LBRACK blockAux .)


state 50

    (66) blockAux -> statute . RBRACK
    (70) blockRecursive -> statute . blockAux
    (66) blockAux -> . statute RBRACK
    (67) blockAux -> . blockRecursive
    (68) blockAux -> . blockFinal
    (71) statute -> . assignment SEMICOLON
    (72) statute -> . ifStatement
    (73) statute -> . writing SEMICOLON
    (74) statute -> . reading SEMICOLON
    (75) statute -> . loop
    (76) statute -> . functionCall SEMICOLON
    (77) statute -> . returnStatement SEMICOLON
    (78) statute -> . regressionFunc SEMICOLON
    (79) statute -> . plotXYFunc SEMICOLON
    (70) blockRecursive -> . statute blockAux
    (69) blockFinal -> . RBRACK
    (80) assignment -> . identifier ASSIGN expression
    (82) ifStatement -> . shortCondition
    (83) ifStatement -> . longCondition
    (88) writing -> . WRITE LPAREN writingAux
    (98) reading -> . READ LPAREN readingAux
    (104) loop -> . conditional
    (105) loop -> . nonconditional
    (108) functionCall -> . ID LPAREN callAux
    (81) returnStatement -> . RETURN LPAREN expression RPAREN
    (87) regressionFunc -> . REGRESSION LPAREN ID COMA ID RPAREN
    (86) plotXYFunc -> . PLOTXY LPAREN ID COMA ID RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (84) shortCondition -> . IF LPAREN expression RPAREN THEN block
    (85) longCondition -> . IF LPAREN expression RPAREN THEN block ELSE block
    (106) conditional -> . WHILE LPAREN expression RPAREN block
    (107) nonconditional -> . FOR assignment TO expression DO block
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    RBRACK          shift and go to state 104
    WRITE           shift and go to state 66
    READ            shift and go to state 67
    ID              shift and go to state 70
    RETURN          shift and go to state 71
    REGRESSION      shift and go to state 72
    PLOTXY          shift and go to state 73
    IF              shift and go to state 76
    WHILE           shift and go to state 77
    FOR             shift and go to state 78

    statute                        shift and go to state 50
    blockAux                       shift and go to state 105
    blockRecursive                 shift and go to state 52
    blockFinal                     shift and go to state 53
    assignment                     shift and go to state 54
    ifStatement                    shift and go to state 55
    writing                        shift and go to state 56
    reading                        shift and go to state 57
    loop                           shift and go to state 58
    functionCall                   shift and go to state 59
    returnStatement                shift and go to state 60
    regressionFunc                 shift and go to state 61
    plotXYFunc                     shift and go to state 62
    identifier                     shift and go to state 63
    shortCondition                 shift and go to state 64
    longCondition                  shift and go to state 65
    conditional                    shift and go to state 68
    nonconditional                 shift and go to state 69
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 51

    (69) blockFinal -> RBRACK .

    $end            reduce using rule 69 (blockFinal -> RBRACK .)
    FUNCTION        reduce using rule 69 (blockFinal -> RBRACK .)
    MAIN            reduce using rule 69 (blockFinal -> RBRACK .)
    RBRACK          reduce using rule 69 (blockFinal -> RBRACK .)
    WRITE           reduce using rule 69 (blockFinal -> RBRACK .)
    READ            reduce using rule 69 (blockFinal -> RBRACK .)
    ID              reduce using rule 69 (blockFinal -> RBRACK .)
    RETURN          reduce using rule 69 (blockFinal -> RBRACK .)
    REGRESSION      reduce using rule 69 (blockFinal -> RBRACK .)
    PLOTXY          reduce using rule 69 (blockFinal -> RBRACK .)
    IF              reduce using rule 69 (blockFinal -> RBRACK .)
    WHILE           reduce using rule 69 (blockFinal -> RBRACK .)
    FOR             reduce using rule 69 (blockFinal -> RBRACK .)
    ELSE            reduce using rule 69 (blockFinal -> RBRACK .)


state 52

    (67) blockAux -> blockRecursive .

    $end            reduce using rule 67 (blockAux -> blockRecursive .)
    FUNCTION        reduce using rule 67 (blockAux -> blockRecursive .)
    MAIN            reduce using rule 67 (blockAux -> blockRecursive .)
    RBRACK          reduce using rule 67 (blockAux -> blockRecursive .)
    WRITE           reduce using rule 67 (blockAux -> blockRecursive .)
    READ            reduce using rule 67 (blockAux -> blockRecursive .)
    ID              reduce using rule 67 (blockAux -> blockRecursive .)
    RETURN          reduce using rule 67 (blockAux -> blockRecursive .)
    REGRESSION      reduce using rule 67 (blockAux -> blockRecursive .)
    PLOTXY          reduce using rule 67 (blockAux -> blockRecursive .)
    IF              reduce using rule 67 (blockAux -> blockRecursive .)
    WHILE           reduce using rule 67 (blockAux -> blockRecursive .)
    FOR             reduce using rule 67 (blockAux -> blockRecursive .)
    ELSE            reduce using rule 67 (blockAux -> blockRecursive .)


state 53

    (68) blockAux -> blockFinal .

    $end            reduce using rule 68 (blockAux -> blockFinal .)
    FUNCTION        reduce using rule 68 (blockAux -> blockFinal .)
    MAIN            reduce using rule 68 (blockAux -> blockFinal .)
    RBRACK          reduce using rule 68 (blockAux -> blockFinal .)
    WRITE           reduce using rule 68 (blockAux -> blockFinal .)
    READ            reduce using rule 68 (blockAux -> blockFinal .)
    ID              reduce using rule 68 (blockAux -> blockFinal .)
    RETURN          reduce using rule 68 (blockAux -> blockFinal .)
    REGRESSION      reduce using rule 68 (blockAux -> blockFinal .)
    PLOTXY          reduce using rule 68 (blockAux -> blockFinal .)
    IF              reduce using rule 68 (blockAux -> blockFinal .)
    WHILE           reduce using rule 68 (blockAux -> blockFinal .)
    FOR             reduce using rule 68 (blockAux -> blockFinal .)
    ELSE            reduce using rule 68 (blockAux -> blockFinal .)


state 54

    (71) statute -> assignment . SEMICOLON

    SEMICOLON       shift and go to state 106


state 55

    (72) statute -> ifStatement .

    RBRACK          reduce using rule 72 (statute -> ifStatement .)
    WRITE           reduce using rule 72 (statute -> ifStatement .)
    READ            reduce using rule 72 (statute -> ifStatement .)
    ID              reduce using rule 72 (statute -> ifStatement .)
    RETURN          reduce using rule 72 (statute -> ifStatement .)
    REGRESSION      reduce using rule 72 (statute -> ifStatement .)
    PLOTXY          reduce using rule 72 (statute -> ifStatement .)
    IF              reduce using rule 72 (statute -> ifStatement .)
    WHILE           reduce using rule 72 (statute -> ifStatement .)
    FOR             reduce using rule 72 (statute -> ifStatement .)


state 56

    (73) statute -> writing . SEMICOLON

    SEMICOLON       shift and go to state 107


state 57

    (74) statute -> reading . SEMICOLON

    SEMICOLON       shift and go to state 108


state 58

    (75) statute -> loop .

    RBRACK          reduce using rule 75 (statute -> loop .)
    WRITE           reduce using rule 75 (statute -> loop .)
    READ            reduce using rule 75 (statute -> loop .)
    ID              reduce using rule 75 (statute -> loop .)
    RETURN          reduce using rule 75 (statute -> loop .)
    REGRESSION      reduce using rule 75 (statute -> loop .)
    PLOTXY          reduce using rule 75 (statute -> loop .)
    IF              reduce using rule 75 (statute -> loop .)
    WHILE           reduce using rule 75 (statute -> loop .)
    FOR             reduce using rule 75 (statute -> loop .)


state 59

    (76) statute -> functionCall . SEMICOLON

    SEMICOLON       shift and go to state 109


state 60

    (77) statute -> returnStatement . SEMICOLON

    SEMICOLON       shift and go to state 110


state 61

    (78) statute -> regressionFunc . SEMICOLON

    SEMICOLON       shift and go to state 111


state 62

    (79) statute -> plotXYFunc . SEMICOLON

    SEMICOLON       shift and go to state 112


state 63

    (80) assignment -> identifier . ASSIGN expression

    ASSIGN          shift and go to state 113


state 64

    (82) ifStatement -> shortCondition .

    RBRACK          reduce using rule 82 (ifStatement -> shortCondition .)
    WRITE           reduce using rule 82 (ifStatement -> shortCondition .)
    READ            reduce using rule 82 (ifStatement -> shortCondition .)
    ID              reduce using rule 82 (ifStatement -> shortCondition .)
    RETURN          reduce using rule 82 (ifStatement -> shortCondition .)
    REGRESSION      reduce using rule 82 (ifStatement -> shortCondition .)
    PLOTXY          reduce using rule 82 (ifStatement -> shortCondition .)
    IF              reduce using rule 82 (ifStatement -> shortCondition .)
    WHILE           reduce using rule 82 (ifStatement -> shortCondition .)
    FOR             reduce using rule 82 (ifStatement -> shortCondition .)


state 65

    (83) ifStatement -> longCondition .

    RBRACK          reduce using rule 83 (ifStatement -> longCondition .)
    WRITE           reduce using rule 83 (ifStatement -> longCondition .)
    READ            reduce using rule 83 (ifStatement -> longCondition .)
    ID              reduce using rule 83 (ifStatement -> longCondition .)
    RETURN          reduce using rule 83 (ifStatement -> longCondition .)
    REGRESSION      reduce using rule 83 (ifStatement -> longCondition .)
    PLOTXY          reduce using rule 83 (ifStatement -> longCondition .)
    IF              reduce using rule 83 (ifStatement -> longCondition .)
    WHILE           reduce using rule 83 (ifStatement -> longCondition .)
    FOR             reduce using rule 83 (ifStatement -> longCondition .)


state 66

    (88) writing -> WRITE . LPAREN writingAux

    LPAREN          shift and go to state 114


state 67

    (98) reading -> READ . LPAREN readingAux

    LPAREN          shift and go to state 115


state 68

    (104) loop -> conditional .

    RBRACK          reduce using rule 104 (loop -> conditional .)
    WRITE           reduce using rule 104 (loop -> conditional .)
    READ            reduce using rule 104 (loop -> conditional .)
    ID              reduce using rule 104 (loop -> conditional .)
    RETURN          reduce using rule 104 (loop -> conditional .)
    REGRESSION      reduce using rule 104 (loop -> conditional .)
    PLOTXY          reduce using rule 104 (loop -> conditional .)
    IF              reduce using rule 104 (loop -> conditional .)
    WHILE           reduce using rule 104 (loop -> conditional .)
    FOR             reduce using rule 104 (loop -> conditional .)


state 69

    (105) loop -> nonconditional .

    RBRACK          reduce using rule 105 (loop -> nonconditional .)
    WRITE           reduce using rule 105 (loop -> nonconditional .)
    READ            reduce using rule 105 (loop -> nonconditional .)
    ID              reduce using rule 105 (loop -> nonconditional .)
    RETURN          reduce using rule 105 (loop -> nonconditional .)
    REGRESSION      reduce using rule 105 (loop -> nonconditional .)
    PLOTXY          reduce using rule 105 (loop -> nonconditional .)
    IF              reduce using rule 105 (loop -> nonconditional .)
    WHILE           reduce using rule 105 (loop -> nonconditional .)
    FOR             reduce using rule 105 (loop -> nonconditional .)


state 70

    (108) functionCall -> ID . LPAREN callAux
    (148) identLonely -> ID .
    (149) identArray -> ID . LSBRACK expression RSBRACK

    LPAREN          shift and go to state 116
    ASSIGN          reduce using rule 148 (identLonely -> ID .)
    OR              reduce using rule 148 (identLonely -> ID .)
    AND             reduce using rule 148 (identLonely -> ID .)
    GTHAN           reduce using rule 148 (identLonely -> ID .)
    LTHAN           reduce using rule 148 (identLonely -> ID .)
    EQUAL           reduce using rule 148 (identLonely -> ID .)
    DIFF            reduce using rule 148 (identLonely -> ID .)
    TIMES           reduce using rule 148 (identLonely -> ID .)
    DIVIDE          reduce using rule 148 (identLonely -> ID .)
    PLUS            reduce using rule 148 (identLonely -> ID .)
    MINUS           reduce using rule 148 (identLonely -> ID .)
    SEMICOLON       reduce using rule 148 (identLonely -> ID .)
    TO              reduce using rule 148 (identLonely -> ID .)
    RPAREN          reduce using rule 148 (identLonely -> ID .)
    COMA            reduce using rule 148 (identLonely -> ID .)
    RSBRACK         reduce using rule 148 (identLonely -> ID .)
    DO              reduce using rule 148 (identLonely -> ID .)
    LSBRACK         shift and go to state 117


state 71

    (81) returnStatement -> RETURN . LPAREN expression RPAREN

    LPAREN          shift and go to state 118


state 72

    (87) regressionFunc -> REGRESSION . LPAREN ID COMA ID RPAREN

    LPAREN          shift and go to state 119


state 73

    (86) plotXYFunc -> PLOTXY . LPAREN ID COMA ID RPAREN

    LPAREN          shift and go to state 120


state 74

    (146) identifier -> identLonely .

    ASSIGN          reduce using rule 146 (identifier -> identLonely .)
    OR              reduce using rule 146 (identifier -> identLonely .)
    AND             reduce using rule 146 (identifier -> identLonely .)
    GTHAN           reduce using rule 146 (identifier -> identLonely .)
    LTHAN           reduce using rule 146 (identifier -> identLonely .)
    EQUAL           reduce using rule 146 (identifier -> identLonely .)
    DIFF            reduce using rule 146 (identifier -> identLonely .)
    TIMES           reduce using rule 146 (identifier -> identLonely .)
    DIVIDE          reduce using rule 146 (identifier -> identLonely .)
    PLUS            reduce using rule 146 (identifier -> identLonely .)
    MINUS           reduce using rule 146 (identifier -> identLonely .)
    SEMICOLON       reduce using rule 146 (identifier -> identLonely .)
    TO              reduce using rule 146 (identifier -> identLonely .)
    RPAREN          reduce using rule 146 (identifier -> identLonely .)
    COMA            reduce using rule 146 (identifier -> identLonely .)
    RSBRACK         reduce using rule 146 (identifier -> identLonely .)
    DO              reduce using rule 146 (identifier -> identLonely .)


state 75

    (147) identifier -> identArray .

    ASSIGN          reduce using rule 147 (identifier -> identArray .)
    OR              reduce using rule 147 (identifier -> identArray .)
    AND             reduce using rule 147 (identifier -> identArray .)
    GTHAN           reduce using rule 147 (identifier -> identArray .)
    LTHAN           reduce using rule 147 (identifier -> identArray .)
    EQUAL           reduce using rule 147 (identifier -> identArray .)
    DIFF            reduce using rule 147 (identifier -> identArray .)
    TIMES           reduce using rule 147 (identifier -> identArray .)
    DIVIDE          reduce using rule 147 (identifier -> identArray .)
    PLUS            reduce using rule 147 (identifier -> identArray .)
    MINUS           reduce using rule 147 (identifier -> identArray .)
    SEMICOLON       reduce using rule 147 (identifier -> identArray .)
    TO              reduce using rule 147 (identifier -> identArray .)
    RPAREN          reduce using rule 147 (identifier -> identArray .)
    COMA            reduce using rule 147 (identifier -> identArray .)
    RSBRACK         reduce using rule 147 (identifier -> identArray .)
    DO              reduce using rule 147 (identifier -> identArray .)


state 76

    (84) shortCondition -> IF . LPAREN expression RPAREN THEN block
    (85) longCondition -> IF . LPAREN expression RPAREN THEN block ELSE block

    LPAREN          shift and go to state 121


state 77

    (106) conditional -> WHILE . LPAREN expression RPAREN block

    LPAREN          shift and go to state 122


state 78

    (107) nonconditional -> FOR . assignment TO expression DO block
    (80) assignment -> . identifier ASSIGN expression
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    ID              shift and go to state 124

    assignment                     shift and go to state 123
    identifier                     shift and go to state 63
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 79

    (23) funcAux -> FUNCTION typeFunction ID LPAREN withParameters .

    FUNCTION        reduce using rule 23 (funcAux -> FUNCTION typeFunction ID LPAREN withParameters .)
    MAIN            reduce using rule 23 (funcAux -> FUNCTION typeFunction ID LPAREN withParameters .)


state 80

    (26) emptyPar -> LPAREN RPAREN .

    VARS            reduce using rule 26 (emptyPar -> LPAREN RPAREN .)
    LBRACK          reduce using rule 26 (emptyPar -> LPAREN RPAREN .)


state 81

    (31) withParameters -> parameters . RPAREN funcVer1
    (32) withParameters -> parameters . RPAREN funcVer2

    RPAREN          shift and go to state 125


state 82

    (47) parameters -> oneParam .

    RPAREN          reduce using rule 47 (parameters -> oneParam .)


state 83

    (48) parameters -> sameTypeParam .

    RPAREN          reduce using rule 48 (parameters -> sameTypeParam .)


state 84

    (49) parameters -> newParam .

    RPAREN          reduce using rule 49 (parameters -> newParam .)


state 85

    (50) oneParam -> typeVar . COLON identifierVar
    (51) sameTypeParam -> typeVar . COLON identifierVar COMA sameTypeParamFinal
    (52) sameTypeParam -> typeVar . COLON identifierVar COMA sameTypeParamRecursive
    (57) newParam -> typeVar . COLON identifierVar SEMICOLON parameters

    COLON           shift and go to state 126


state 86

    (24) funcAux -> FUNCTION typeFunction ID emptyPar funcVer1 .

    FUNCTION        reduce using rule 24 (funcAux -> FUNCTION typeFunction ID emptyPar funcVer1 .)
    MAIN            reduce using rule 24 (funcAux -> FUNCTION typeFunction ID emptyPar funcVer1 .)


state 87

    (25) funcAux -> FUNCTION typeFunction ID emptyPar funcVer2 .

    FUNCTION        reduce using rule 25 (funcAux -> FUNCTION typeFunction ID emptyPar funcVer2 .)
    MAIN            reduce using rule 25 (funcAux -> FUNCTION typeFunction ID emptyPar funcVer2 .)


state 88

    (33) funcVer1 -> variablesLoc . block
    (65) block -> . LBRACK blockAux

    LBRACK          shift and go to state 43

    block                          shift and go to state 127

state 89

    (34) funcVer2 -> block .

    FUNCTION        reduce using rule 34 (funcVer2 -> block .)
    MAIN            reduce using rule 34 (funcVer2 -> block .)


state 90

    (35) variablesLoc -> VARS . varAuxLoc
    (36) varAuxLoc -> . oneVarLoc
    (37) varAuxLoc -> . sameTypeLoc
    (38) varAuxLoc -> . newTypeLoc
    (39) oneVarLoc -> . typeVar COLON identifier SEMICOLON
    (40) sameTypeLoc -> . typeVar COLON identifier COMA sameTypeFinalLoc
    (41) sameTypeLoc -> . typeVar COLON identifier COMA sameTypeRecursiveLoc
    (46) newTypeLoc -> . typeVar COLON identifier SEMICOLON varAuxLoc
    (61) typeVar -> . INT
    (62) typeVar -> . FLOAT
    (63) typeVar -> . CHAR

    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    varAuxLoc                      shift and go to state 128
    oneVarLoc                      shift and go to state 129
    sameTypeLoc                    shift and go to state 130
    newTypeLoc                     shift and go to state 131
    typeVar                        shift and go to state 132

state 91

    (19) newType -> typeVar COLON identifierVar SEMICOLON varAux .

    MAIN            reduce using rule 19 (newType -> typeVar COLON identifierVar SEMICOLON varAux .)
    FUNCTION        reduce using rule 19 (newType -> typeVar COLON identifierVar SEMICOLON varAux .)


state 92

    (15) sameTypeFinal -> identifierVar . SEMICOLON
    (16) sameTypeRecursive -> identifierVar . COMA sameTypeRecursive
    (17) sameTypeRecursive -> identifierVar . COMA sameTypeFinal
    (18) sameTypeRecursive -> identifierVar . SEMICOLON varAux

    SEMICOLON       shift and go to state 133
    COMA            shift and go to state 134


state 93

    (13) sameType -> typeVar COLON identifierVar COMA sameTypeFinal .

    MAIN            reduce using rule 13 (sameType -> typeVar COLON identifierVar COMA sameTypeFinal .)
    FUNCTION        reduce using rule 13 (sameType -> typeVar COLON identifierVar COMA sameTypeFinal .)


state 94

    (14) sameType -> typeVar COLON identifierVar COMA sameTypeRecursive .

    MAIN            reduce using rule 14 (sameType -> typeVar COLON identifierVar COMA sameTypeRecursive .)
    FUNCTION        reduce using rule 14 (sameType -> typeVar COLON identifierVar COMA sameTypeRecursive .)


state 95

    (60) identArrayVar -> ID LSBRACK expressionVar . RSBRACK

    RSBRACK         shift and go to state 135


state 96

    (153) expressionVar -> termVar .
    (155) expressionOperationVar -> termVar . PLUS expressionVar
    (156) expressionOperationVar -> termVar . MINUS expressionVar

    RSBRACK         reduce using rule 153 (expressionVar -> termVar .)
    RPAREN          reduce using rule 153 (expressionVar -> termVar .)
    PLUS            shift and go to state 136
    MINUS           shift and go to state 137


state 97

    (154) expressionVar -> expressionOperationVar .

    RSBRACK         reduce using rule 154 (expressionVar -> expressionOperationVar .)
    RPAREN          reduce using rule 154 (expressionVar -> expressionOperationVar .)


state 98

    (157) termVar -> auctionVar .
    (159) termOperationVar -> auctionVar . TIMES termVar
    (160) termOperationVar -> auctionVar . DIVIDE termVar

    PLUS            reduce using rule 157 (termVar -> auctionVar .)
    MINUS           reduce using rule 157 (termVar -> auctionVar .)
    RSBRACK         reduce using rule 157 (termVar -> auctionVar .)
    RPAREN          reduce using rule 157 (termVar -> auctionVar .)
    TIMES           shift and go to state 138
    DIVIDE          shift and go to state 139


state 99

    (158) termVar -> termOperationVar .

    PLUS            reduce using rule 158 (termVar -> termOperationVar .)
    MINUS           reduce using rule 158 (termVar -> termOperationVar .)
    RSBRACK         reduce using rule 158 (termVar -> termOperationVar .)
    RPAREN          reduce using rule 158 (termVar -> termOperationVar .)


state 100

    (161) auctionVar -> constantVar .

    TIMES           reduce using rule 161 (auctionVar -> constantVar .)
    DIVIDE          reduce using rule 161 (auctionVar -> constantVar .)
    PLUS            reduce using rule 161 (auctionVar -> constantVar .)
    MINUS           reduce using rule 161 (auctionVar -> constantVar .)
    RSBRACK         reduce using rule 161 (auctionVar -> constantVar .)
    RPAREN          reduce using rule 161 (auctionVar -> constantVar .)


state 101

    (162) auctionVar -> otherExpressionVar .

    TIMES           reduce using rule 162 (auctionVar -> otherExpressionVar .)
    DIVIDE          reduce using rule 162 (auctionVar -> otherExpressionVar .)
    PLUS            reduce using rule 162 (auctionVar -> otherExpressionVar .)
    MINUS           reduce using rule 162 (auctionVar -> otherExpressionVar .)
    RSBRACK         reduce using rule 162 (auctionVar -> otherExpressionVar .)
    RPAREN          reduce using rule 162 (auctionVar -> otherExpressionVar .)


state 102

    (163) constantVar -> CTE_INT .

    TIMES           reduce using rule 163 (constantVar -> CTE_INT .)
    DIVIDE          reduce using rule 163 (constantVar -> CTE_INT .)
    PLUS            reduce using rule 163 (constantVar -> CTE_INT .)
    MINUS           reduce using rule 163 (constantVar -> CTE_INT .)
    RSBRACK         reduce using rule 163 (constantVar -> CTE_INT .)
    RPAREN          reduce using rule 163 (constantVar -> CTE_INT .)


state 103

    (164) otherExpressionVar -> LPAREN . expressionVar RPAREN
    (153) expressionVar -> . termVar
    (154) expressionVar -> . expressionOperationVar
    (157) termVar -> . auctionVar
    (158) termVar -> . termOperationVar
    (155) expressionOperationVar -> . termVar PLUS expressionVar
    (156) expressionOperationVar -> . termVar MINUS expressionVar
    (161) auctionVar -> . constantVar
    (162) auctionVar -> . otherExpressionVar
    (159) termOperationVar -> . auctionVar TIMES termVar
    (160) termOperationVar -> . auctionVar DIVIDE termVar
    (163) constantVar -> . CTE_INT
    (164) otherExpressionVar -> . LPAREN expressionVar RPAREN

    CTE_INT         shift and go to state 102
    LPAREN          shift and go to state 103

    expressionVar                  shift and go to state 140
    termVar                        shift and go to state 96
    expressionOperationVar         shift and go to state 97
    auctionVar                     shift and go to state 98
    termOperationVar               shift and go to state 99
    constantVar                    shift and go to state 100
    otherExpressionVar             shift and go to state 101

state 104

    (66) blockAux -> statute RBRACK .
    (69) blockFinal -> RBRACK .

  ! reduce/reduce conflict for $end resolved using rule 66 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 66 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for MAIN resolved using rule 66 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for RBRACK resolved using rule 66 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for WRITE resolved using rule 66 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for READ resolved using rule 66 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for ID resolved using rule 66 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for RETURN resolved using rule 66 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for REGRESSION resolved using rule 66 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for PLOTXY resolved using rule 66 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for IF resolved using rule 66 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for WHILE resolved using rule 66 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for FOR resolved using rule 66 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for ELSE resolved using rule 66 (blockAux -> statute RBRACK .)
    $end            reduce using rule 66 (blockAux -> statute RBRACK .)
    FUNCTION        reduce using rule 66 (blockAux -> statute RBRACK .)
    MAIN            reduce using rule 66 (blockAux -> statute RBRACK .)
    RBRACK          reduce using rule 66 (blockAux -> statute RBRACK .)
    WRITE           reduce using rule 66 (blockAux -> statute RBRACK .)
    READ            reduce using rule 66 (blockAux -> statute RBRACK .)
    ID              reduce using rule 66 (blockAux -> statute RBRACK .)
    RETURN          reduce using rule 66 (blockAux -> statute RBRACK .)
    REGRESSION      reduce using rule 66 (blockAux -> statute RBRACK .)
    PLOTXY          reduce using rule 66 (blockAux -> statute RBRACK .)
    IF              reduce using rule 66 (blockAux -> statute RBRACK .)
    WHILE           reduce using rule 66 (blockAux -> statute RBRACK .)
    FOR             reduce using rule 66 (blockAux -> statute RBRACK .)
    ELSE            reduce using rule 66 (blockAux -> statute RBRACK .)

  ! $end            [ reduce using rule 69 (blockFinal -> RBRACK .) ]
  ! FUNCTION        [ reduce using rule 69 (blockFinal -> RBRACK .) ]
  ! MAIN            [ reduce using rule 69 (blockFinal -> RBRACK .) ]
  ! RBRACK          [ reduce using rule 69 (blockFinal -> RBRACK .) ]
  ! WRITE           [ reduce using rule 69 (blockFinal -> RBRACK .) ]
  ! READ            [ reduce using rule 69 (blockFinal -> RBRACK .) ]
  ! ID              [ reduce using rule 69 (blockFinal -> RBRACK .) ]
  ! RETURN          [ reduce using rule 69 (blockFinal -> RBRACK .) ]
  ! REGRESSION      [ reduce using rule 69 (blockFinal -> RBRACK .) ]
  ! PLOTXY          [ reduce using rule 69 (blockFinal -> RBRACK .) ]
  ! IF              [ reduce using rule 69 (blockFinal -> RBRACK .) ]
  ! WHILE           [ reduce using rule 69 (blockFinal -> RBRACK .) ]
  ! FOR             [ reduce using rule 69 (blockFinal -> RBRACK .) ]
  ! ELSE            [ reduce using rule 69 (blockFinal -> RBRACK .) ]


state 105

    (70) blockRecursive -> statute blockAux .

    $end            reduce using rule 70 (blockRecursive -> statute blockAux .)
    FUNCTION        reduce using rule 70 (blockRecursive -> statute blockAux .)
    MAIN            reduce using rule 70 (blockRecursive -> statute blockAux .)
    RBRACK          reduce using rule 70 (blockRecursive -> statute blockAux .)
    WRITE           reduce using rule 70 (blockRecursive -> statute blockAux .)
    READ            reduce using rule 70 (blockRecursive -> statute blockAux .)
    ID              reduce using rule 70 (blockRecursive -> statute blockAux .)
    RETURN          reduce using rule 70 (blockRecursive -> statute blockAux .)
    REGRESSION      reduce using rule 70 (blockRecursive -> statute blockAux .)
    PLOTXY          reduce using rule 70 (blockRecursive -> statute blockAux .)
    IF              reduce using rule 70 (blockRecursive -> statute blockAux .)
    WHILE           reduce using rule 70 (blockRecursive -> statute blockAux .)
    FOR             reduce using rule 70 (blockRecursive -> statute blockAux .)
    ELSE            reduce using rule 70 (blockRecursive -> statute blockAux .)


state 106

    (71) statute -> assignment SEMICOLON .

    RBRACK          reduce using rule 71 (statute -> assignment SEMICOLON .)
    WRITE           reduce using rule 71 (statute -> assignment SEMICOLON .)
    READ            reduce using rule 71 (statute -> assignment SEMICOLON .)
    ID              reduce using rule 71 (statute -> assignment SEMICOLON .)
    RETURN          reduce using rule 71 (statute -> assignment SEMICOLON .)
    REGRESSION      reduce using rule 71 (statute -> assignment SEMICOLON .)
    PLOTXY          reduce using rule 71 (statute -> assignment SEMICOLON .)
    IF              reduce using rule 71 (statute -> assignment SEMICOLON .)
    WHILE           reduce using rule 71 (statute -> assignment SEMICOLON .)
    FOR             reduce using rule 71 (statute -> assignment SEMICOLON .)


state 107

    (73) statute -> writing SEMICOLON .

    RBRACK          reduce using rule 73 (statute -> writing SEMICOLON .)
    WRITE           reduce using rule 73 (statute -> writing SEMICOLON .)
    READ            reduce using rule 73 (statute -> writing SEMICOLON .)
    ID              reduce using rule 73 (statute -> writing SEMICOLON .)
    RETURN          reduce using rule 73 (statute -> writing SEMICOLON .)
    REGRESSION      reduce using rule 73 (statute -> writing SEMICOLON .)
    PLOTXY          reduce using rule 73 (statute -> writing SEMICOLON .)
    IF              reduce using rule 73 (statute -> writing SEMICOLON .)
    WHILE           reduce using rule 73 (statute -> writing SEMICOLON .)
    FOR             reduce using rule 73 (statute -> writing SEMICOLON .)


state 108

    (74) statute -> reading SEMICOLON .

    RBRACK          reduce using rule 74 (statute -> reading SEMICOLON .)
    WRITE           reduce using rule 74 (statute -> reading SEMICOLON .)
    READ            reduce using rule 74 (statute -> reading SEMICOLON .)
    ID              reduce using rule 74 (statute -> reading SEMICOLON .)
    RETURN          reduce using rule 74 (statute -> reading SEMICOLON .)
    REGRESSION      reduce using rule 74 (statute -> reading SEMICOLON .)
    PLOTXY          reduce using rule 74 (statute -> reading SEMICOLON .)
    IF              reduce using rule 74 (statute -> reading SEMICOLON .)
    WHILE           reduce using rule 74 (statute -> reading SEMICOLON .)
    FOR             reduce using rule 74 (statute -> reading SEMICOLON .)


state 109

    (76) statute -> functionCall SEMICOLON .

    RBRACK          reduce using rule 76 (statute -> functionCall SEMICOLON .)
    WRITE           reduce using rule 76 (statute -> functionCall SEMICOLON .)
    READ            reduce using rule 76 (statute -> functionCall SEMICOLON .)
    ID              reduce using rule 76 (statute -> functionCall SEMICOLON .)
    RETURN          reduce using rule 76 (statute -> functionCall SEMICOLON .)
    REGRESSION      reduce using rule 76 (statute -> functionCall SEMICOLON .)
    PLOTXY          reduce using rule 76 (statute -> functionCall SEMICOLON .)
    IF              reduce using rule 76 (statute -> functionCall SEMICOLON .)
    WHILE           reduce using rule 76 (statute -> functionCall SEMICOLON .)
    FOR             reduce using rule 76 (statute -> functionCall SEMICOLON .)


state 110

    (77) statute -> returnStatement SEMICOLON .

    RBRACK          reduce using rule 77 (statute -> returnStatement SEMICOLON .)
    WRITE           reduce using rule 77 (statute -> returnStatement SEMICOLON .)
    READ            reduce using rule 77 (statute -> returnStatement SEMICOLON .)
    ID              reduce using rule 77 (statute -> returnStatement SEMICOLON .)
    RETURN          reduce using rule 77 (statute -> returnStatement SEMICOLON .)
    REGRESSION      reduce using rule 77 (statute -> returnStatement SEMICOLON .)
    PLOTXY          reduce using rule 77 (statute -> returnStatement SEMICOLON .)
    IF              reduce using rule 77 (statute -> returnStatement SEMICOLON .)
    WHILE           reduce using rule 77 (statute -> returnStatement SEMICOLON .)
    FOR             reduce using rule 77 (statute -> returnStatement SEMICOLON .)


state 111

    (78) statute -> regressionFunc SEMICOLON .

    RBRACK          reduce using rule 78 (statute -> regressionFunc SEMICOLON .)
    WRITE           reduce using rule 78 (statute -> regressionFunc SEMICOLON .)
    READ            reduce using rule 78 (statute -> regressionFunc SEMICOLON .)
    ID              reduce using rule 78 (statute -> regressionFunc SEMICOLON .)
    RETURN          reduce using rule 78 (statute -> regressionFunc SEMICOLON .)
    REGRESSION      reduce using rule 78 (statute -> regressionFunc SEMICOLON .)
    PLOTXY          reduce using rule 78 (statute -> regressionFunc SEMICOLON .)
    IF              reduce using rule 78 (statute -> regressionFunc SEMICOLON .)
    WHILE           reduce using rule 78 (statute -> regressionFunc SEMICOLON .)
    FOR             reduce using rule 78 (statute -> regressionFunc SEMICOLON .)


state 112

    (79) statute -> plotXYFunc SEMICOLON .

    RBRACK          reduce using rule 79 (statute -> plotXYFunc SEMICOLON .)
    WRITE           reduce using rule 79 (statute -> plotXYFunc SEMICOLON .)
    READ            reduce using rule 79 (statute -> plotXYFunc SEMICOLON .)
    ID              reduce using rule 79 (statute -> plotXYFunc SEMICOLON .)
    RETURN          reduce using rule 79 (statute -> plotXYFunc SEMICOLON .)
    REGRESSION      reduce using rule 79 (statute -> plotXYFunc SEMICOLON .)
    PLOTXY          reduce using rule 79 (statute -> plotXYFunc SEMICOLON .)
    IF              reduce using rule 79 (statute -> plotXYFunc SEMICOLON .)
    WHILE           reduce using rule 79 (statute -> plotXYFunc SEMICOLON .)
    FOR             reduce using rule 79 (statute -> plotXYFunc SEMICOLON .)


state 113

    (80) assignment -> identifier ASSIGN . expression
    (114) expression -> . term
    (115) expression -> . expressionOperation
    (118) term -> . factor
    (119) term -> . termOperation
    (116) expressionOperation -> . term PLUS expression
    (117) expressionOperation -> . term MINUS expression
    (122) factor -> . idioms
    (123) factor -> . factorOperation
    (120) termOperation -> . factor TIMES term
    (121) termOperation -> . factor DIVIDE term
    (128) idioms -> . auction
    (129) idioms -> . idiomsOperation
    (124) factorOperation -> . idioms GTHAN factor
    (125) factorOperation -> . idioms LTHAN factor
    (126) factorOperation -> . idioms EQUAL factor
    (127) factorOperation -> . idioms DIFF factor
    (132) auction -> . constant
    (133) auction -> . otherExpression
    (134) auction -> . identifier
    (135) auction -> . averageFunc
    (136) auction -> . modeFunc
    (137) auction -> . varianceFunc
    (138) auction -> . functionCall
    (130) idiomsOperation -> . auction OR idioms
    (131) idiomsOperation -> . auction AND idioms
    (139) constant -> . someInt
    (140) constant -> . someFloat
    (141) constant -> . someChar
    (145) otherExpression -> . LPAREN expression RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (150) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (151) modeFunc -> . MODE LPAREN ID RPAREN
    (152) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (108) functionCall -> . ID LPAREN callAux
    (142) someInt -> . CTE_INT
    (143) someFloat -> . CTE_FLOAT
    (144) someChar -> . CTE_CHAR
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 160
    AVERAGE         shift and go to state 161
    MODE            shift and go to state 162
    VARIANCE        shift and go to state 163
    ID              shift and go to state 70
    CTE_INT         shift and go to state 164
    CTE_FLOAT       shift and go to state 165
    CTE_CHAR        shift and go to state 166

    identifier                     shift and go to state 141
    expression                     shift and go to state 142
    term                           shift and go to state 143
    expressionOperation            shift and go to state 144
    factor                         shift and go to state 145
    termOperation                  shift and go to state 146
    idioms                         shift and go to state 147
    factorOperation                shift and go to state 148
    auction                        shift and go to state 149
    idiomsOperation                shift and go to state 150
    constant                       shift and go to state 151
    otherExpression                shift and go to state 152
    averageFunc                    shift and go to state 153
    modeFunc                       shift and go to state 154
    varianceFunc                   shift and go to state 155
    functionCall                   shift and go to state 156
    someInt                        shift and go to state 157
    someFloat                      shift and go to state 158
    someChar                       shift and go to state 159
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 114

    (88) writing -> WRITE LPAREN . writingAux
    (89) writingAux -> . writingFinal
    (90) writingAux -> . writingRecursive
    (91) writingFinal -> . writingString RPAREN
    (92) writingFinal -> . expression RPAREN
    (94) writingRecursive -> . writingString COMA writingFinal
    (95) writingRecursive -> . expression COMA writingFinal
    (96) writingRecursive -> . writingString COMA writingRecursive
    (97) writingRecursive -> . expression COMA writingRecursive
    (93) writingString -> . CTE_STRING
    (114) expression -> . term
    (115) expression -> . expressionOperation
    (118) term -> . factor
    (119) term -> . termOperation
    (116) expressionOperation -> . term PLUS expression
    (117) expressionOperation -> . term MINUS expression
    (122) factor -> . idioms
    (123) factor -> . factorOperation
    (120) termOperation -> . factor TIMES term
    (121) termOperation -> . factor DIVIDE term
    (128) idioms -> . auction
    (129) idioms -> . idiomsOperation
    (124) factorOperation -> . idioms GTHAN factor
    (125) factorOperation -> . idioms LTHAN factor
    (126) factorOperation -> . idioms EQUAL factor
    (127) factorOperation -> . idioms DIFF factor
    (132) auction -> . constant
    (133) auction -> . otherExpression
    (134) auction -> . identifier
    (135) auction -> . averageFunc
    (136) auction -> . modeFunc
    (137) auction -> . varianceFunc
    (138) auction -> . functionCall
    (130) idiomsOperation -> . auction OR idioms
    (131) idiomsOperation -> . auction AND idioms
    (139) constant -> . someInt
    (140) constant -> . someFloat
    (141) constant -> . someChar
    (145) otherExpression -> . LPAREN expression RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (150) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (151) modeFunc -> . MODE LPAREN ID RPAREN
    (152) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (108) functionCall -> . ID LPAREN callAux
    (142) someInt -> . CTE_INT
    (143) someFloat -> . CTE_FLOAT
    (144) someChar -> . CTE_CHAR
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    CTE_STRING      shift and go to state 172
    LPAREN          shift and go to state 160
    AVERAGE         shift and go to state 161
    MODE            shift and go to state 162
    VARIANCE        shift and go to state 163
    ID              shift and go to state 70
    CTE_INT         shift and go to state 164
    CTE_FLOAT       shift and go to state 165
    CTE_CHAR        shift and go to state 166

    writingAux                     shift and go to state 167
    writingFinal                   shift and go to state 168
    writingRecursive               shift and go to state 169
    writingString                  shift and go to state 170
    expression                     shift and go to state 171
    term                           shift and go to state 143
    expressionOperation            shift and go to state 144
    factor                         shift and go to state 145
    termOperation                  shift and go to state 146
    idioms                         shift and go to state 147
    factorOperation                shift and go to state 148
    auction                        shift and go to state 149
    idiomsOperation                shift and go to state 150
    constant                       shift and go to state 151
    otherExpression                shift and go to state 152
    identifier                     shift and go to state 141
    averageFunc                    shift and go to state 153
    modeFunc                       shift and go to state 154
    varianceFunc                   shift and go to state 155
    functionCall                   shift and go to state 156
    someInt                        shift and go to state 157
    someFloat                      shift and go to state 158
    someChar                       shift and go to state 159
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 115

    (98) reading -> READ LPAREN . readingAux
    (99) readingAux -> . readingFinal
    (100) readingAux -> . readingRecursive
    (101) readingFinal -> . identifier RPAREN
    (102) readingRecursive -> . identifier COMA readingRecursive
    (103) readingRecursive -> . identifier COMA readingFinal
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    ID              shift and go to state 124

    readingAux                     shift and go to state 173
    readingFinal                   shift and go to state 174
    readingRecursive               shift and go to state 175
    identifier                     shift and go to state 176
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 116

    (108) functionCall -> ID LPAREN . callAux
    (109) callAux -> . expression RPAREN
    (110) callAux -> . callRecursive
    (111) callAux -> . callFinal
    (114) expression -> . term
    (115) expression -> . expressionOperation
    (112) callRecursive -> . expression COMA callAux
    (113) callFinal -> . RPAREN
    (118) term -> . factor
    (119) term -> . termOperation
    (116) expressionOperation -> . term PLUS expression
    (117) expressionOperation -> . term MINUS expression
    (122) factor -> . idioms
    (123) factor -> . factorOperation
    (120) termOperation -> . factor TIMES term
    (121) termOperation -> . factor DIVIDE term
    (128) idioms -> . auction
    (129) idioms -> . idiomsOperation
    (124) factorOperation -> . idioms GTHAN factor
    (125) factorOperation -> . idioms LTHAN factor
    (126) factorOperation -> . idioms EQUAL factor
    (127) factorOperation -> . idioms DIFF factor
    (132) auction -> . constant
    (133) auction -> . otherExpression
    (134) auction -> . identifier
    (135) auction -> . averageFunc
    (136) auction -> . modeFunc
    (137) auction -> . varianceFunc
    (138) auction -> . functionCall
    (130) idiomsOperation -> . auction OR idioms
    (131) idiomsOperation -> . auction AND idioms
    (139) constant -> . someInt
    (140) constant -> . someFloat
    (141) constant -> . someChar
    (145) otherExpression -> . LPAREN expression RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (150) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (151) modeFunc -> . MODE LPAREN ID RPAREN
    (152) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (108) functionCall -> . ID LPAREN callAux
    (142) someInt -> . CTE_INT
    (143) someFloat -> . CTE_FLOAT
    (144) someChar -> . CTE_CHAR
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    RPAREN          shift and go to state 179
    LPAREN          shift and go to state 160
    AVERAGE         shift and go to state 161
    MODE            shift and go to state 162
    VARIANCE        shift and go to state 163
    ID              shift and go to state 70
    CTE_INT         shift and go to state 164
    CTE_FLOAT       shift and go to state 165
    CTE_CHAR        shift and go to state 166

    callAux                        shift and go to state 177
    expression                     shift and go to state 178
    callRecursive                  shift and go to state 180
    callFinal                      shift and go to state 181
    term                           shift and go to state 143
    expressionOperation            shift and go to state 144
    factor                         shift and go to state 145
    termOperation                  shift and go to state 146
    idioms                         shift and go to state 147
    factorOperation                shift and go to state 148
    auction                        shift and go to state 149
    idiomsOperation                shift and go to state 150
    constant                       shift and go to state 151
    otherExpression                shift and go to state 152
    identifier                     shift and go to state 141
    averageFunc                    shift and go to state 153
    modeFunc                       shift and go to state 154
    varianceFunc                   shift and go to state 155
    functionCall                   shift and go to state 156
    someInt                        shift and go to state 157
    someFloat                      shift and go to state 158
    someChar                       shift and go to state 159
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 117

    (149) identArray -> ID LSBRACK . expression RSBRACK
    (114) expression -> . term
    (115) expression -> . expressionOperation
    (118) term -> . factor
    (119) term -> . termOperation
    (116) expressionOperation -> . term PLUS expression
    (117) expressionOperation -> . term MINUS expression
    (122) factor -> . idioms
    (123) factor -> . factorOperation
    (120) termOperation -> . factor TIMES term
    (121) termOperation -> . factor DIVIDE term
    (128) idioms -> . auction
    (129) idioms -> . idiomsOperation
    (124) factorOperation -> . idioms GTHAN factor
    (125) factorOperation -> . idioms LTHAN factor
    (126) factorOperation -> . idioms EQUAL factor
    (127) factorOperation -> . idioms DIFF factor
    (132) auction -> . constant
    (133) auction -> . otherExpression
    (134) auction -> . identifier
    (135) auction -> . averageFunc
    (136) auction -> . modeFunc
    (137) auction -> . varianceFunc
    (138) auction -> . functionCall
    (130) idiomsOperation -> . auction OR idioms
    (131) idiomsOperation -> . auction AND idioms
    (139) constant -> . someInt
    (140) constant -> . someFloat
    (141) constant -> . someChar
    (145) otherExpression -> . LPAREN expression RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (150) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (151) modeFunc -> . MODE LPAREN ID RPAREN
    (152) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (108) functionCall -> . ID LPAREN callAux
    (142) someInt -> . CTE_INT
    (143) someFloat -> . CTE_FLOAT
    (144) someChar -> . CTE_CHAR
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 160
    AVERAGE         shift and go to state 161
    MODE            shift and go to state 162
    VARIANCE        shift and go to state 163
    ID              shift and go to state 70
    CTE_INT         shift and go to state 164
    CTE_FLOAT       shift and go to state 165
    CTE_CHAR        shift and go to state 166

    expression                     shift and go to state 182
    term                           shift and go to state 143
    expressionOperation            shift and go to state 144
    factor                         shift and go to state 145
    termOperation                  shift and go to state 146
    idioms                         shift and go to state 147
    factorOperation                shift and go to state 148
    auction                        shift and go to state 149
    idiomsOperation                shift and go to state 150
    constant                       shift and go to state 151
    otherExpression                shift and go to state 152
    identifier                     shift and go to state 141
    averageFunc                    shift and go to state 153
    modeFunc                       shift and go to state 154
    varianceFunc                   shift and go to state 155
    functionCall                   shift and go to state 156
    someInt                        shift and go to state 157
    someFloat                      shift and go to state 158
    someChar                       shift and go to state 159
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 118

    (81) returnStatement -> RETURN LPAREN . expression RPAREN
    (114) expression -> . term
    (115) expression -> . expressionOperation
    (118) term -> . factor
    (119) term -> . termOperation
    (116) expressionOperation -> . term PLUS expression
    (117) expressionOperation -> . term MINUS expression
    (122) factor -> . idioms
    (123) factor -> . factorOperation
    (120) termOperation -> . factor TIMES term
    (121) termOperation -> . factor DIVIDE term
    (128) idioms -> . auction
    (129) idioms -> . idiomsOperation
    (124) factorOperation -> . idioms GTHAN factor
    (125) factorOperation -> . idioms LTHAN factor
    (126) factorOperation -> . idioms EQUAL factor
    (127) factorOperation -> . idioms DIFF factor
    (132) auction -> . constant
    (133) auction -> . otherExpression
    (134) auction -> . identifier
    (135) auction -> . averageFunc
    (136) auction -> . modeFunc
    (137) auction -> . varianceFunc
    (138) auction -> . functionCall
    (130) idiomsOperation -> . auction OR idioms
    (131) idiomsOperation -> . auction AND idioms
    (139) constant -> . someInt
    (140) constant -> . someFloat
    (141) constant -> . someChar
    (145) otherExpression -> . LPAREN expression RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (150) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (151) modeFunc -> . MODE LPAREN ID RPAREN
    (152) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (108) functionCall -> . ID LPAREN callAux
    (142) someInt -> . CTE_INT
    (143) someFloat -> . CTE_FLOAT
    (144) someChar -> . CTE_CHAR
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 160
    AVERAGE         shift and go to state 161
    MODE            shift and go to state 162
    VARIANCE        shift and go to state 163
    ID              shift and go to state 70
    CTE_INT         shift and go to state 164
    CTE_FLOAT       shift and go to state 165
    CTE_CHAR        shift and go to state 166

    expression                     shift and go to state 183
    term                           shift and go to state 143
    expressionOperation            shift and go to state 144
    factor                         shift and go to state 145
    termOperation                  shift and go to state 146
    idioms                         shift and go to state 147
    factorOperation                shift and go to state 148
    auction                        shift and go to state 149
    idiomsOperation                shift and go to state 150
    constant                       shift and go to state 151
    otherExpression                shift and go to state 152
    identifier                     shift and go to state 141
    averageFunc                    shift and go to state 153
    modeFunc                       shift and go to state 154
    varianceFunc                   shift and go to state 155
    functionCall                   shift and go to state 156
    someInt                        shift and go to state 157
    someFloat                      shift and go to state 158
    someChar                       shift and go to state 159
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 119

    (87) regressionFunc -> REGRESSION LPAREN . ID COMA ID RPAREN

    ID              shift and go to state 184


state 120

    (86) plotXYFunc -> PLOTXY LPAREN . ID COMA ID RPAREN

    ID              shift and go to state 185


state 121

    (84) shortCondition -> IF LPAREN . expression RPAREN THEN block
    (85) longCondition -> IF LPAREN . expression RPAREN THEN block ELSE block
    (114) expression -> . term
    (115) expression -> . expressionOperation
    (118) term -> . factor
    (119) term -> . termOperation
    (116) expressionOperation -> . term PLUS expression
    (117) expressionOperation -> . term MINUS expression
    (122) factor -> . idioms
    (123) factor -> . factorOperation
    (120) termOperation -> . factor TIMES term
    (121) termOperation -> . factor DIVIDE term
    (128) idioms -> . auction
    (129) idioms -> . idiomsOperation
    (124) factorOperation -> . idioms GTHAN factor
    (125) factorOperation -> . idioms LTHAN factor
    (126) factorOperation -> . idioms EQUAL factor
    (127) factorOperation -> . idioms DIFF factor
    (132) auction -> . constant
    (133) auction -> . otherExpression
    (134) auction -> . identifier
    (135) auction -> . averageFunc
    (136) auction -> . modeFunc
    (137) auction -> . varianceFunc
    (138) auction -> . functionCall
    (130) idiomsOperation -> . auction OR idioms
    (131) idiomsOperation -> . auction AND idioms
    (139) constant -> . someInt
    (140) constant -> . someFloat
    (141) constant -> . someChar
    (145) otherExpression -> . LPAREN expression RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (150) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (151) modeFunc -> . MODE LPAREN ID RPAREN
    (152) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (108) functionCall -> . ID LPAREN callAux
    (142) someInt -> . CTE_INT
    (143) someFloat -> . CTE_FLOAT
    (144) someChar -> . CTE_CHAR
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 160
    AVERAGE         shift and go to state 161
    MODE            shift and go to state 162
    VARIANCE        shift and go to state 163
    ID              shift and go to state 70
    CTE_INT         shift and go to state 164
    CTE_FLOAT       shift and go to state 165
    CTE_CHAR        shift and go to state 166

    expression                     shift and go to state 186
    term                           shift and go to state 143
    expressionOperation            shift and go to state 144
    factor                         shift and go to state 145
    termOperation                  shift and go to state 146
    idioms                         shift and go to state 147
    factorOperation                shift and go to state 148
    auction                        shift and go to state 149
    idiomsOperation                shift and go to state 150
    constant                       shift and go to state 151
    otherExpression                shift and go to state 152
    identifier                     shift and go to state 141
    averageFunc                    shift and go to state 153
    modeFunc                       shift and go to state 154
    varianceFunc                   shift and go to state 155
    functionCall                   shift and go to state 156
    someInt                        shift and go to state 157
    someFloat                      shift and go to state 158
    someChar                       shift and go to state 159
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 122

    (106) conditional -> WHILE LPAREN . expression RPAREN block
    (114) expression -> . term
    (115) expression -> . expressionOperation
    (118) term -> . factor
    (119) term -> . termOperation
    (116) expressionOperation -> . term PLUS expression
    (117) expressionOperation -> . term MINUS expression
    (122) factor -> . idioms
    (123) factor -> . factorOperation
    (120) termOperation -> . factor TIMES term
    (121) termOperation -> . factor DIVIDE term
    (128) idioms -> . auction
    (129) idioms -> . idiomsOperation
    (124) factorOperation -> . idioms GTHAN factor
    (125) factorOperation -> . idioms LTHAN factor
    (126) factorOperation -> . idioms EQUAL factor
    (127) factorOperation -> . idioms DIFF factor
    (132) auction -> . constant
    (133) auction -> . otherExpression
    (134) auction -> . identifier
    (135) auction -> . averageFunc
    (136) auction -> . modeFunc
    (137) auction -> . varianceFunc
    (138) auction -> . functionCall
    (130) idiomsOperation -> . auction OR idioms
    (131) idiomsOperation -> . auction AND idioms
    (139) constant -> . someInt
    (140) constant -> . someFloat
    (141) constant -> . someChar
    (145) otherExpression -> . LPAREN expression RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (150) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (151) modeFunc -> . MODE LPAREN ID RPAREN
    (152) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (108) functionCall -> . ID LPAREN callAux
    (142) someInt -> . CTE_INT
    (143) someFloat -> . CTE_FLOAT
    (144) someChar -> . CTE_CHAR
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 160
    AVERAGE         shift and go to state 161
    MODE            shift and go to state 162
    VARIANCE        shift and go to state 163
    ID              shift and go to state 70
    CTE_INT         shift and go to state 164
    CTE_FLOAT       shift and go to state 165
    CTE_CHAR        shift and go to state 166

    expression                     shift and go to state 187
    term                           shift and go to state 143
    expressionOperation            shift and go to state 144
    factor                         shift and go to state 145
    termOperation                  shift and go to state 146
    idioms                         shift and go to state 147
    factorOperation                shift and go to state 148
    auction                        shift and go to state 149
    idiomsOperation                shift and go to state 150
    constant                       shift and go to state 151
    otherExpression                shift and go to state 152
    identifier                     shift and go to state 141
    averageFunc                    shift and go to state 153
    modeFunc                       shift and go to state 154
    varianceFunc                   shift and go to state 155
    functionCall                   shift and go to state 156
    someInt                        shift and go to state 157
    someFloat                      shift and go to state 158
    someChar                       shift and go to state 159
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 123

    (107) nonconditional -> FOR assignment . TO expression DO block

    TO              shift and go to state 188


state 124

    (148) identLonely -> ID .
    (149) identArray -> ID . LSBRACK expression RSBRACK

    ASSIGN          reduce using rule 148 (identLonely -> ID .)
    RPAREN          reduce using rule 148 (identLonely -> ID .)
    COMA            reduce using rule 148 (identLonely -> ID .)
    SEMICOLON       reduce using rule 148 (identLonely -> ID .)
    LSBRACK         shift and go to state 117


state 125

    (31) withParameters -> parameters RPAREN . funcVer1
    (32) withParameters -> parameters RPAREN . funcVer2
    (33) funcVer1 -> . variablesLoc block
    (34) funcVer2 -> . block
    (35) variablesLoc -> . VARS varAuxLoc
    (65) block -> . LBRACK blockAux

    VARS            shift and go to state 90
    LBRACK          shift and go to state 43

    funcVer1                       shift and go to state 189
    funcVer2                       shift and go to state 190
    variablesLoc                   shift and go to state 88
    block                          shift and go to state 89

state 126

    (50) oneParam -> typeVar COLON . identifierVar
    (51) sameTypeParam -> typeVar COLON . identifierVar COMA sameTypeParamFinal
    (52) sameTypeParam -> typeVar COLON . identifierVar COMA sameTypeParamRecursive
    (57) newParam -> typeVar COLON . identifierVar SEMICOLON parameters
    (58) identifierVar -> . identLonely
    (59) identifierVar -> . identArrayVar
    (148) identLonely -> . ID
    (60) identArrayVar -> . ID LSBRACK expressionVar RSBRACK

    ID              shift and go to state 41

    identifierVar                  shift and go to state 191
    identLonely                    shift and go to state 39
    identArrayVar                  shift and go to state 40

state 127

    (33) funcVer1 -> variablesLoc block .

    FUNCTION        reduce using rule 33 (funcVer1 -> variablesLoc block .)
    MAIN            reduce using rule 33 (funcVer1 -> variablesLoc block .)


state 128

    (35) variablesLoc -> VARS varAuxLoc .

    LBRACK          reduce using rule 35 (variablesLoc -> VARS varAuxLoc .)


state 129

    (36) varAuxLoc -> oneVarLoc .

    LBRACK          reduce using rule 36 (varAuxLoc -> oneVarLoc .)


state 130

    (37) varAuxLoc -> sameTypeLoc .

    LBRACK          reduce using rule 37 (varAuxLoc -> sameTypeLoc .)


state 131

    (38) varAuxLoc -> newTypeLoc .

    LBRACK          reduce using rule 38 (varAuxLoc -> newTypeLoc .)


state 132

    (39) oneVarLoc -> typeVar . COLON identifier SEMICOLON
    (40) sameTypeLoc -> typeVar . COLON identifier COMA sameTypeFinalLoc
    (41) sameTypeLoc -> typeVar . COLON identifier COMA sameTypeRecursiveLoc
    (46) newTypeLoc -> typeVar . COLON identifier SEMICOLON varAuxLoc

    COLON           shift and go to state 192


state 133

    (15) sameTypeFinal -> identifierVar SEMICOLON .
    (18) sameTypeRecursive -> identifierVar SEMICOLON . varAux
    (9) varAux -> . oneVar
    (10) varAux -> . sameType
    (11) varAux -> . newType
    (12) oneVar -> . typeVar COLON identifierVar SEMICOLON
    (13) sameType -> . typeVar COLON identifierVar COMA sameTypeFinal
    (14) sameType -> . typeVar COLON identifierVar COMA sameTypeRecursive
    (19) newType -> . typeVar COLON identifierVar SEMICOLON varAux
    (61) typeVar -> . INT
    (62) typeVar -> . FLOAT
    (63) typeVar -> . CHAR

    MAIN            reduce using rule 15 (sameTypeFinal -> identifierVar SEMICOLON .)
    FUNCTION        reduce using rule 15 (sameTypeFinal -> identifierVar SEMICOLON .)
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    varAux                         shift and go to state 193
    oneVar                         shift and go to state 20
    sameType                       shift and go to state 21
    newType                        shift and go to state 22
    typeVar                        shift and go to state 23

state 134

    (16) sameTypeRecursive -> identifierVar COMA . sameTypeRecursive
    (17) sameTypeRecursive -> identifierVar COMA . sameTypeFinal
    (16) sameTypeRecursive -> . identifierVar COMA sameTypeRecursive
    (17) sameTypeRecursive -> . identifierVar COMA sameTypeFinal
    (18) sameTypeRecursive -> . identifierVar SEMICOLON varAux
    (15) sameTypeFinal -> . identifierVar SEMICOLON
    (58) identifierVar -> . identLonely
    (59) identifierVar -> . identArrayVar
    (148) identLonely -> . ID
    (60) identArrayVar -> . ID LSBRACK expressionVar RSBRACK

    ID              shift and go to state 41

    identifierVar                  shift and go to state 194
    sameTypeRecursive              shift and go to state 195
    sameTypeFinal                  shift and go to state 196
    identLonely                    shift and go to state 39
    identArrayVar                  shift and go to state 40

state 135

    (60) identArrayVar -> ID LSBRACK expressionVar RSBRACK .

    SEMICOLON       reduce using rule 60 (identArrayVar -> ID LSBRACK expressionVar RSBRACK .)
    COMA            reduce using rule 60 (identArrayVar -> ID LSBRACK expressionVar RSBRACK .)
    RPAREN          reduce using rule 60 (identArrayVar -> ID LSBRACK expressionVar RSBRACK .)


state 136

    (155) expressionOperationVar -> termVar PLUS . expressionVar
    (153) expressionVar -> . termVar
    (154) expressionVar -> . expressionOperationVar
    (157) termVar -> . auctionVar
    (158) termVar -> . termOperationVar
    (155) expressionOperationVar -> . termVar PLUS expressionVar
    (156) expressionOperationVar -> . termVar MINUS expressionVar
    (161) auctionVar -> . constantVar
    (162) auctionVar -> . otherExpressionVar
    (159) termOperationVar -> . auctionVar TIMES termVar
    (160) termOperationVar -> . auctionVar DIVIDE termVar
    (163) constantVar -> . CTE_INT
    (164) otherExpressionVar -> . LPAREN expressionVar RPAREN

    CTE_INT         shift and go to state 102
    LPAREN          shift and go to state 103

    termVar                        shift and go to state 96
    expressionVar                  shift and go to state 197
    expressionOperationVar         shift and go to state 97
    auctionVar                     shift and go to state 98
    termOperationVar               shift and go to state 99
    constantVar                    shift and go to state 100
    otherExpressionVar             shift and go to state 101

state 137

    (156) expressionOperationVar -> termVar MINUS . expressionVar
    (153) expressionVar -> . termVar
    (154) expressionVar -> . expressionOperationVar
    (157) termVar -> . auctionVar
    (158) termVar -> . termOperationVar
    (155) expressionOperationVar -> . termVar PLUS expressionVar
    (156) expressionOperationVar -> . termVar MINUS expressionVar
    (161) auctionVar -> . constantVar
    (162) auctionVar -> . otherExpressionVar
    (159) termOperationVar -> . auctionVar TIMES termVar
    (160) termOperationVar -> . auctionVar DIVIDE termVar
    (163) constantVar -> . CTE_INT
    (164) otherExpressionVar -> . LPAREN expressionVar RPAREN

    CTE_INT         shift and go to state 102
    LPAREN          shift and go to state 103

    termVar                        shift and go to state 96
    expressionVar                  shift and go to state 198
    expressionOperationVar         shift and go to state 97
    auctionVar                     shift and go to state 98
    termOperationVar               shift and go to state 99
    constantVar                    shift and go to state 100
    otherExpressionVar             shift and go to state 101

state 138

    (159) termOperationVar -> auctionVar TIMES . termVar
    (157) termVar -> . auctionVar
    (158) termVar -> . termOperationVar
    (161) auctionVar -> . constantVar
    (162) auctionVar -> . otherExpressionVar
    (159) termOperationVar -> . auctionVar TIMES termVar
    (160) termOperationVar -> . auctionVar DIVIDE termVar
    (163) constantVar -> . CTE_INT
    (164) otherExpressionVar -> . LPAREN expressionVar RPAREN

    CTE_INT         shift and go to state 102
    LPAREN          shift and go to state 103

    auctionVar                     shift and go to state 98
    termVar                        shift and go to state 199
    termOperationVar               shift and go to state 99
    constantVar                    shift and go to state 100
    otherExpressionVar             shift and go to state 101

state 139

    (160) termOperationVar -> auctionVar DIVIDE . termVar
    (157) termVar -> . auctionVar
    (158) termVar -> . termOperationVar
    (161) auctionVar -> . constantVar
    (162) auctionVar -> . otherExpressionVar
    (159) termOperationVar -> . auctionVar TIMES termVar
    (160) termOperationVar -> . auctionVar DIVIDE termVar
    (163) constantVar -> . CTE_INT
    (164) otherExpressionVar -> . LPAREN expressionVar RPAREN

    CTE_INT         shift and go to state 102
    LPAREN          shift and go to state 103

    auctionVar                     shift and go to state 98
    termVar                        shift and go to state 200
    termOperationVar               shift and go to state 99
    constantVar                    shift and go to state 100
    otherExpressionVar             shift and go to state 101

state 140

    (164) otherExpressionVar -> LPAREN expressionVar . RPAREN

    RPAREN          shift and go to state 201


state 141

    (134) auction -> identifier .

    OR              reduce using rule 134 (auction -> identifier .)
    AND             reduce using rule 134 (auction -> identifier .)
    GTHAN           reduce using rule 134 (auction -> identifier .)
    LTHAN           reduce using rule 134 (auction -> identifier .)
    EQUAL           reduce using rule 134 (auction -> identifier .)
    DIFF            reduce using rule 134 (auction -> identifier .)
    TIMES           reduce using rule 134 (auction -> identifier .)
    DIVIDE          reduce using rule 134 (auction -> identifier .)
    PLUS            reduce using rule 134 (auction -> identifier .)
    MINUS           reduce using rule 134 (auction -> identifier .)
    SEMICOLON       reduce using rule 134 (auction -> identifier .)
    TO              reduce using rule 134 (auction -> identifier .)
    RPAREN          reduce using rule 134 (auction -> identifier .)
    COMA            reduce using rule 134 (auction -> identifier .)
    RSBRACK         reduce using rule 134 (auction -> identifier .)
    DO              reduce using rule 134 (auction -> identifier .)


state 142

    (80) assignment -> identifier ASSIGN expression .

    SEMICOLON       reduce using rule 80 (assignment -> identifier ASSIGN expression .)
    TO              reduce using rule 80 (assignment -> identifier ASSIGN expression .)


state 143

    (114) expression -> term .
    (116) expressionOperation -> term . PLUS expression
    (117) expressionOperation -> term . MINUS expression

    SEMICOLON       reduce using rule 114 (expression -> term .)
    TO              reduce using rule 114 (expression -> term .)
    RPAREN          reduce using rule 114 (expression -> term .)
    COMA            reduce using rule 114 (expression -> term .)
    RSBRACK         reduce using rule 114 (expression -> term .)
    DO              reduce using rule 114 (expression -> term .)
    PLUS            shift and go to state 202
    MINUS           shift and go to state 203


state 144

    (115) expression -> expressionOperation .

    SEMICOLON       reduce using rule 115 (expression -> expressionOperation .)
    TO              reduce using rule 115 (expression -> expressionOperation .)
    RPAREN          reduce using rule 115 (expression -> expressionOperation .)
    COMA            reduce using rule 115 (expression -> expressionOperation .)
    RSBRACK         reduce using rule 115 (expression -> expressionOperation .)
    DO              reduce using rule 115 (expression -> expressionOperation .)


state 145

    (118) term -> factor .
    (120) termOperation -> factor . TIMES term
    (121) termOperation -> factor . DIVIDE term

    PLUS            reduce using rule 118 (term -> factor .)
    MINUS           reduce using rule 118 (term -> factor .)
    SEMICOLON       reduce using rule 118 (term -> factor .)
    TO              reduce using rule 118 (term -> factor .)
    RPAREN          reduce using rule 118 (term -> factor .)
    COMA            reduce using rule 118 (term -> factor .)
    RSBRACK         reduce using rule 118 (term -> factor .)
    DO              reduce using rule 118 (term -> factor .)
    TIMES           shift and go to state 204
    DIVIDE          shift and go to state 205


state 146

    (119) term -> termOperation .

    PLUS            reduce using rule 119 (term -> termOperation .)
    MINUS           reduce using rule 119 (term -> termOperation .)
    SEMICOLON       reduce using rule 119 (term -> termOperation .)
    TO              reduce using rule 119 (term -> termOperation .)
    RPAREN          reduce using rule 119 (term -> termOperation .)
    COMA            reduce using rule 119 (term -> termOperation .)
    RSBRACK         reduce using rule 119 (term -> termOperation .)
    DO              reduce using rule 119 (term -> termOperation .)


state 147

    (122) factor -> idioms .
    (124) factorOperation -> idioms . GTHAN factor
    (125) factorOperation -> idioms . LTHAN factor
    (126) factorOperation -> idioms . EQUAL factor
    (127) factorOperation -> idioms . DIFF factor

    TIMES           reduce using rule 122 (factor -> idioms .)
    DIVIDE          reduce using rule 122 (factor -> idioms .)
    PLUS            reduce using rule 122 (factor -> idioms .)
    MINUS           reduce using rule 122 (factor -> idioms .)
    SEMICOLON       reduce using rule 122 (factor -> idioms .)
    TO              reduce using rule 122 (factor -> idioms .)
    RPAREN          reduce using rule 122 (factor -> idioms .)
    COMA            reduce using rule 122 (factor -> idioms .)
    RSBRACK         reduce using rule 122 (factor -> idioms .)
    DO              reduce using rule 122 (factor -> idioms .)
    GTHAN           shift and go to state 206
    LTHAN           shift and go to state 207
    EQUAL           shift and go to state 208
    DIFF            shift and go to state 209


state 148

    (123) factor -> factorOperation .

    TIMES           reduce using rule 123 (factor -> factorOperation .)
    DIVIDE          reduce using rule 123 (factor -> factorOperation .)
    PLUS            reduce using rule 123 (factor -> factorOperation .)
    MINUS           reduce using rule 123 (factor -> factorOperation .)
    SEMICOLON       reduce using rule 123 (factor -> factorOperation .)
    TO              reduce using rule 123 (factor -> factorOperation .)
    RPAREN          reduce using rule 123 (factor -> factorOperation .)
    COMA            reduce using rule 123 (factor -> factorOperation .)
    RSBRACK         reduce using rule 123 (factor -> factorOperation .)
    DO              reduce using rule 123 (factor -> factorOperation .)


state 149

    (128) idioms -> auction .
    (130) idiomsOperation -> auction . OR idioms
    (131) idiomsOperation -> auction . AND idioms

    GTHAN           reduce using rule 128 (idioms -> auction .)
    LTHAN           reduce using rule 128 (idioms -> auction .)
    EQUAL           reduce using rule 128 (idioms -> auction .)
    DIFF            reduce using rule 128 (idioms -> auction .)
    TIMES           reduce using rule 128 (idioms -> auction .)
    DIVIDE          reduce using rule 128 (idioms -> auction .)
    PLUS            reduce using rule 128 (idioms -> auction .)
    MINUS           reduce using rule 128 (idioms -> auction .)
    SEMICOLON       reduce using rule 128 (idioms -> auction .)
    TO              reduce using rule 128 (idioms -> auction .)
    RPAREN          reduce using rule 128 (idioms -> auction .)
    COMA            reduce using rule 128 (idioms -> auction .)
    RSBRACK         reduce using rule 128 (idioms -> auction .)
    DO              reduce using rule 128 (idioms -> auction .)
    OR              shift and go to state 210
    AND             shift and go to state 211


state 150

    (129) idioms -> idiomsOperation .

    GTHAN           reduce using rule 129 (idioms -> idiomsOperation .)
    LTHAN           reduce using rule 129 (idioms -> idiomsOperation .)
    EQUAL           reduce using rule 129 (idioms -> idiomsOperation .)
    DIFF            reduce using rule 129 (idioms -> idiomsOperation .)
    TIMES           reduce using rule 129 (idioms -> idiomsOperation .)
    DIVIDE          reduce using rule 129 (idioms -> idiomsOperation .)
    PLUS            reduce using rule 129 (idioms -> idiomsOperation .)
    MINUS           reduce using rule 129 (idioms -> idiomsOperation .)
    SEMICOLON       reduce using rule 129 (idioms -> idiomsOperation .)
    TO              reduce using rule 129 (idioms -> idiomsOperation .)
    RPAREN          reduce using rule 129 (idioms -> idiomsOperation .)
    COMA            reduce using rule 129 (idioms -> idiomsOperation .)
    RSBRACK         reduce using rule 129 (idioms -> idiomsOperation .)
    DO              reduce using rule 129 (idioms -> idiomsOperation .)


state 151

    (132) auction -> constant .

    OR              reduce using rule 132 (auction -> constant .)
    AND             reduce using rule 132 (auction -> constant .)
    GTHAN           reduce using rule 132 (auction -> constant .)
    LTHAN           reduce using rule 132 (auction -> constant .)
    EQUAL           reduce using rule 132 (auction -> constant .)
    DIFF            reduce using rule 132 (auction -> constant .)
    TIMES           reduce using rule 132 (auction -> constant .)
    DIVIDE          reduce using rule 132 (auction -> constant .)
    PLUS            reduce using rule 132 (auction -> constant .)
    MINUS           reduce using rule 132 (auction -> constant .)
    SEMICOLON       reduce using rule 132 (auction -> constant .)
    TO              reduce using rule 132 (auction -> constant .)
    RPAREN          reduce using rule 132 (auction -> constant .)
    COMA            reduce using rule 132 (auction -> constant .)
    RSBRACK         reduce using rule 132 (auction -> constant .)
    DO              reduce using rule 132 (auction -> constant .)


state 152

    (133) auction -> otherExpression .

    OR              reduce using rule 133 (auction -> otherExpression .)
    AND             reduce using rule 133 (auction -> otherExpression .)
    GTHAN           reduce using rule 133 (auction -> otherExpression .)
    LTHAN           reduce using rule 133 (auction -> otherExpression .)
    EQUAL           reduce using rule 133 (auction -> otherExpression .)
    DIFF            reduce using rule 133 (auction -> otherExpression .)
    TIMES           reduce using rule 133 (auction -> otherExpression .)
    DIVIDE          reduce using rule 133 (auction -> otherExpression .)
    PLUS            reduce using rule 133 (auction -> otherExpression .)
    MINUS           reduce using rule 133 (auction -> otherExpression .)
    SEMICOLON       reduce using rule 133 (auction -> otherExpression .)
    TO              reduce using rule 133 (auction -> otherExpression .)
    RPAREN          reduce using rule 133 (auction -> otherExpression .)
    COMA            reduce using rule 133 (auction -> otherExpression .)
    RSBRACK         reduce using rule 133 (auction -> otherExpression .)
    DO              reduce using rule 133 (auction -> otherExpression .)


state 153

    (135) auction -> averageFunc .

    OR              reduce using rule 135 (auction -> averageFunc .)
    AND             reduce using rule 135 (auction -> averageFunc .)
    GTHAN           reduce using rule 135 (auction -> averageFunc .)
    LTHAN           reduce using rule 135 (auction -> averageFunc .)
    EQUAL           reduce using rule 135 (auction -> averageFunc .)
    DIFF            reduce using rule 135 (auction -> averageFunc .)
    TIMES           reduce using rule 135 (auction -> averageFunc .)
    DIVIDE          reduce using rule 135 (auction -> averageFunc .)
    PLUS            reduce using rule 135 (auction -> averageFunc .)
    MINUS           reduce using rule 135 (auction -> averageFunc .)
    SEMICOLON       reduce using rule 135 (auction -> averageFunc .)
    TO              reduce using rule 135 (auction -> averageFunc .)
    RPAREN          reduce using rule 135 (auction -> averageFunc .)
    COMA            reduce using rule 135 (auction -> averageFunc .)
    RSBRACK         reduce using rule 135 (auction -> averageFunc .)
    DO              reduce using rule 135 (auction -> averageFunc .)


state 154

    (136) auction -> modeFunc .

    OR              reduce using rule 136 (auction -> modeFunc .)
    AND             reduce using rule 136 (auction -> modeFunc .)
    GTHAN           reduce using rule 136 (auction -> modeFunc .)
    LTHAN           reduce using rule 136 (auction -> modeFunc .)
    EQUAL           reduce using rule 136 (auction -> modeFunc .)
    DIFF            reduce using rule 136 (auction -> modeFunc .)
    TIMES           reduce using rule 136 (auction -> modeFunc .)
    DIVIDE          reduce using rule 136 (auction -> modeFunc .)
    PLUS            reduce using rule 136 (auction -> modeFunc .)
    MINUS           reduce using rule 136 (auction -> modeFunc .)
    SEMICOLON       reduce using rule 136 (auction -> modeFunc .)
    TO              reduce using rule 136 (auction -> modeFunc .)
    RPAREN          reduce using rule 136 (auction -> modeFunc .)
    COMA            reduce using rule 136 (auction -> modeFunc .)
    RSBRACK         reduce using rule 136 (auction -> modeFunc .)
    DO              reduce using rule 136 (auction -> modeFunc .)


state 155

    (137) auction -> varianceFunc .

    OR              reduce using rule 137 (auction -> varianceFunc .)
    AND             reduce using rule 137 (auction -> varianceFunc .)
    GTHAN           reduce using rule 137 (auction -> varianceFunc .)
    LTHAN           reduce using rule 137 (auction -> varianceFunc .)
    EQUAL           reduce using rule 137 (auction -> varianceFunc .)
    DIFF            reduce using rule 137 (auction -> varianceFunc .)
    TIMES           reduce using rule 137 (auction -> varianceFunc .)
    DIVIDE          reduce using rule 137 (auction -> varianceFunc .)
    PLUS            reduce using rule 137 (auction -> varianceFunc .)
    MINUS           reduce using rule 137 (auction -> varianceFunc .)
    SEMICOLON       reduce using rule 137 (auction -> varianceFunc .)
    TO              reduce using rule 137 (auction -> varianceFunc .)
    RPAREN          reduce using rule 137 (auction -> varianceFunc .)
    COMA            reduce using rule 137 (auction -> varianceFunc .)
    RSBRACK         reduce using rule 137 (auction -> varianceFunc .)
    DO              reduce using rule 137 (auction -> varianceFunc .)


state 156

    (138) auction -> functionCall .

    OR              reduce using rule 138 (auction -> functionCall .)
    AND             reduce using rule 138 (auction -> functionCall .)
    GTHAN           reduce using rule 138 (auction -> functionCall .)
    LTHAN           reduce using rule 138 (auction -> functionCall .)
    EQUAL           reduce using rule 138 (auction -> functionCall .)
    DIFF            reduce using rule 138 (auction -> functionCall .)
    TIMES           reduce using rule 138 (auction -> functionCall .)
    DIVIDE          reduce using rule 138 (auction -> functionCall .)
    PLUS            reduce using rule 138 (auction -> functionCall .)
    MINUS           reduce using rule 138 (auction -> functionCall .)
    SEMICOLON       reduce using rule 138 (auction -> functionCall .)
    TO              reduce using rule 138 (auction -> functionCall .)
    RPAREN          reduce using rule 138 (auction -> functionCall .)
    COMA            reduce using rule 138 (auction -> functionCall .)
    RSBRACK         reduce using rule 138 (auction -> functionCall .)
    DO              reduce using rule 138 (auction -> functionCall .)


state 157

    (139) constant -> someInt .

    OR              reduce using rule 139 (constant -> someInt .)
    AND             reduce using rule 139 (constant -> someInt .)
    GTHAN           reduce using rule 139 (constant -> someInt .)
    LTHAN           reduce using rule 139 (constant -> someInt .)
    EQUAL           reduce using rule 139 (constant -> someInt .)
    DIFF            reduce using rule 139 (constant -> someInt .)
    TIMES           reduce using rule 139 (constant -> someInt .)
    DIVIDE          reduce using rule 139 (constant -> someInt .)
    PLUS            reduce using rule 139 (constant -> someInt .)
    MINUS           reduce using rule 139 (constant -> someInt .)
    SEMICOLON       reduce using rule 139 (constant -> someInt .)
    TO              reduce using rule 139 (constant -> someInt .)
    RPAREN          reduce using rule 139 (constant -> someInt .)
    COMA            reduce using rule 139 (constant -> someInt .)
    RSBRACK         reduce using rule 139 (constant -> someInt .)
    DO              reduce using rule 139 (constant -> someInt .)


state 158

    (140) constant -> someFloat .

    OR              reduce using rule 140 (constant -> someFloat .)
    AND             reduce using rule 140 (constant -> someFloat .)
    GTHAN           reduce using rule 140 (constant -> someFloat .)
    LTHAN           reduce using rule 140 (constant -> someFloat .)
    EQUAL           reduce using rule 140 (constant -> someFloat .)
    DIFF            reduce using rule 140 (constant -> someFloat .)
    TIMES           reduce using rule 140 (constant -> someFloat .)
    DIVIDE          reduce using rule 140 (constant -> someFloat .)
    PLUS            reduce using rule 140 (constant -> someFloat .)
    MINUS           reduce using rule 140 (constant -> someFloat .)
    SEMICOLON       reduce using rule 140 (constant -> someFloat .)
    TO              reduce using rule 140 (constant -> someFloat .)
    RPAREN          reduce using rule 140 (constant -> someFloat .)
    COMA            reduce using rule 140 (constant -> someFloat .)
    RSBRACK         reduce using rule 140 (constant -> someFloat .)
    DO              reduce using rule 140 (constant -> someFloat .)


state 159

    (141) constant -> someChar .

    OR              reduce using rule 141 (constant -> someChar .)
    AND             reduce using rule 141 (constant -> someChar .)
    GTHAN           reduce using rule 141 (constant -> someChar .)
    LTHAN           reduce using rule 141 (constant -> someChar .)
    EQUAL           reduce using rule 141 (constant -> someChar .)
    DIFF            reduce using rule 141 (constant -> someChar .)
    TIMES           reduce using rule 141 (constant -> someChar .)
    DIVIDE          reduce using rule 141 (constant -> someChar .)
    PLUS            reduce using rule 141 (constant -> someChar .)
    MINUS           reduce using rule 141 (constant -> someChar .)
    SEMICOLON       reduce using rule 141 (constant -> someChar .)
    TO              reduce using rule 141 (constant -> someChar .)
    RPAREN          reduce using rule 141 (constant -> someChar .)
    COMA            reduce using rule 141 (constant -> someChar .)
    RSBRACK         reduce using rule 141 (constant -> someChar .)
    DO              reduce using rule 141 (constant -> someChar .)


state 160

    (145) otherExpression -> LPAREN . expression RPAREN
    (114) expression -> . term
    (115) expression -> . expressionOperation
    (118) term -> . factor
    (119) term -> . termOperation
    (116) expressionOperation -> . term PLUS expression
    (117) expressionOperation -> . term MINUS expression
    (122) factor -> . idioms
    (123) factor -> . factorOperation
    (120) termOperation -> . factor TIMES term
    (121) termOperation -> . factor DIVIDE term
    (128) idioms -> . auction
    (129) idioms -> . idiomsOperation
    (124) factorOperation -> . idioms GTHAN factor
    (125) factorOperation -> . idioms LTHAN factor
    (126) factorOperation -> . idioms EQUAL factor
    (127) factorOperation -> . idioms DIFF factor
    (132) auction -> . constant
    (133) auction -> . otherExpression
    (134) auction -> . identifier
    (135) auction -> . averageFunc
    (136) auction -> . modeFunc
    (137) auction -> . varianceFunc
    (138) auction -> . functionCall
    (130) idiomsOperation -> . auction OR idioms
    (131) idiomsOperation -> . auction AND idioms
    (139) constant -> . someInt
    (140) constant -> . someFloat
    (141) constant -> . someChar
    (145) otherExpression -> . LPAREN expression RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (150) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (151) modeFunc -> . MODE LPAREN ID RPAREN
    (152) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (108) functionCall -> . ID LPAREN callAux
    (142) someInt -> . CTE_INT
    (143) someFloat -> . CTE_FLOAT
    (144) someChar -> . CTE_CHAR
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 160
    AVERAGE         shift and go to state 161
    MODE            shift and go to state 162
    VARIANCE        shift and go to state 163
    ID              shift and go to state 70
    CTE_INT         shift and go to state 164
    CTE_FLOAT       shift and go to state 165
    CTE_CHAR        shift and go to state 166

    expression                     shift and go to state 212
    term                           shift and go to state 143
    expressionOperation            shift and go to state 144
    factor                         shift and go to state 145
    termOperation                  shift and go to state 146
    idioms                         shift and go to state 147
    factorOperation                shift and go to state 148
    auction                        shift and go to state 149
    idiomsOperation                shift and go to state 150
    constant                       shift and go to state 151
    otherExpression                shift and go to state 152
    identifier                     shift and go to state 141
    averageFunc                    shift and go to state 153
    modeFunc                       shift and go to state 154
    varianceFunc                   shift and go to state 155
    functionCall                   shift and go to state 156
    someInt                        shift and go to state 157
    someFloat                      shift and go to state 158
    someChar                       shift and go to state 159
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 161

    (150) averageFunc -> AVERAGE . LPAREN ID RPAREN

    LPAREN          shift and go to state 213


state 162

    (151) modeFunc -> MODE . LPAREN ID RPAREN

    LPAREN          shift and go to state 214


state 163

    (152) varianceFunc -> VARIANCE . LPAREN ID RPAREN

    LPAREN          shift and go to state 215


state 164

    (142) someInt -> CTE_INT .

    OR              reduce using rule 142 (someInt -> CTE_INT .)
    AND             reduce using rule 142 (someInt -> CTE_INT .)
    GTHAN           reduce using rule 142 (someInt -> CTE_INT .)
    LTHAN           reduce using rule 142 (someInt -> CTE_INT .)
    EQUAL           reduce using rule 142 (someInt -> CTE_INT .)
    DIFF            reduce using rule 142 (someInt -> CTE_INT .)
    TIMES           reduce using rule 142 (someInt -> CTE_INT .)
    DIVIDE          reduce using rule 142 (someInt -> CTE_INT .)
    PLUS            reduce using rule 142 (someInt -> CTE_INT .)
    MINUS           reduce using rule 142 (someInt -> CTE_INT .)
    SEMICOLON       reduce using rule 142 (someInt -> CTE_INT .)
    TO              reduce using rule 142 (someInt -> CTE_INT .)
    RPAREN          reduce using rule 142 (someInt -> CTE_INT .)
    COMA            reduce using rule 142 (someInt -> CTE_INT .)
    RSBRACK         reduce using rule 142 (someInt -> CTE_INT .)
    DO              reduce using rule 142 (someInt -> CTE_INT .)


state 165

    (143) someFloat -> CTE_FLOAT .

    OR              reduce using rule 143 (someFloat -> CTE_FLOAT .)
    AND             reduce using rule 143 (someFloat -> CTE_FLOAT .)
    GTHAN           reduce using rule 143 (someFloat -> CTE_FLOAT .)
    LTHAN           reduce using rule 143 (someFloat -> CTE_FLOAT .)
    EQUAL           reduce using rule 143 (someFloat -> CTE_FLOAT .)
    DIFF            reduce using rule 143 (someFloat -> CTE_FLOAT .)
    TIMES           reduce using rule 143 (someFloat -> CTE_FLOAT .)
    DIVIDE          reduce using rule 143 (someFloat -> CTE_FLOAT .)
    PLUS            reduce using rule 143 (someFloat -> CTE_FLOAT .)
    MINUS           reduce using rule 143 (someFloat -> CTE_FLOAT .)
    SEMICOLON       reduce using rule 143 (someFloat -> CTE_FLOAT .)
    TO              reduce using rule 143 (someFloat -> CTE_FLOAT .)
    RPAREN          reduce using rule 143 (someFloat -> CTE_FLOAT .)
    COMA            reduce using rule 143 (someFloat -> CTE_FLOAT .)
    RSBRACK         reduce using rule 143 (someFloat -> CTE_FLOAT .)
    DO              reduce using rule 143 (someFloat -> CTE_FLOAT .)


state 166

    (144) someChar -> CTE_CHAR .

    OR              reduce using rule 144 (someChar -> CTE_CHAR .)
    AND             reduce using rule 144 (someChar -> CTE_CHAR .)
    GTHAN           reduce using rule 144 (someChar -> CTE_CHAR .)
    LTHAN           reduce using rule 144 (someChar -> CTE_CHAR .)
    EQUAL           reduce using rule 144 (someChar -> CTE_CHAR .)
    DIFF            reduce using rule 144 (someChar -> CTE_CHAR .)
    TIMES           reduce using rule 144 (someChar -> CTE_CHAR .)
    DIVIDE          reduce using rule 144 (someChar -> CTE_CHAR .)
    PLUS            reduce using rule 144 (someChar -> CTE_CHAR .)
    MINUS           reduce using rule 144 (someChar -> CTE_CHAR .)
    SEMICOLON       reduce using rule 144 (someChar -> CTE_CHAR .)
    TO              reduce using rule 144 (someChar -> CTE_CHAR .)
    RPAREN          reduce using rule 144 (someChar -> CTE_CHAR .)
    COMA            reduce using rule 144 (someChar -> CTE_CHAR .)
    RSBRACK         reduce using rule 144 (someChar -> CTE_CHAR .)
    DO              reduce using rule 144 (someChar -> CTE_CHAR .)


state 167

    (88) writing -> WRITE LPAREN writingAux .

    SEMICOLON       reduce using rule 88 (writing -> WRITE LPAREN writingAux .)


state 168

    (89) writingAux -> writingFinal .

    SEMICOLON       reduce using rule 89 (writingAux -> writingFinal .)


state 169

    (90) writingAux -> writingRecursive .

    SEMICOLON       reduce using rule 90 (writingAux -> writingRecursive .)


state 170

    (91) writingFinal -> writingString . RPAREN
    (94) writingRecursive -> writingString . COMA writingFinal
    (96) writingRecursive -> writingString . COMA writingRecursive

    RPAREN          shift and go to state 216
    COMA            shift and go to state 217


state 171

    (92) writingFinal -> expression . RPAREN
    (95) writingRecursive -> expression . COMA writingFinal
    (97) writingRecursive -> expression . COMA writingRecursive

    RPAREN          shift and go to state 218
    COMA            shift and go to state 219


state 172

    (93) writingString -> CTE_STRING .

    RPAREN          reduce using rule 93 (writingString -> CTE_STRING .)
    COMA            reduce using rule 93 (writingString -> CTE_STRING .)


state 173

    (98) reading -> READ LPAREN readingAux .

    SEMICOLON       reduce using rule 98 (reading -> READ LPAREN readingAux .)


state 174

    (99) readingAux -> readingFinal .

    SEMICOLON       reduce using rule 99 (readingAux -> readingFinal .)


state 175

    (100) readingAux -> readingRecursive .

    SEMICOLON       reduce using rule 100 (readingAux -> readingRecursive .)


state 176

    (101) readingFinal -> identifier . RPAREN
    (102) readingRecursive -> identifier . COMA readingRecursive
    (103) readingRecursive -> identifier . COMA readingFinal

    RPAREN          shift and go to state 220
    COMA            shift and go to state 221


state 177

    (108) functionCall -> ID LPAREN callAux .

    SEMICOLON       reduce using rule 108 (functionCall -> ID LPAREN callAux .)
    OR              reduce using rule 108 (functionCall -> ID LPAREN callAux .)
    AND             reduce using rule 108 (functionCall -> ID LPAREN callAux .)
    GTHAN           reduce using rule 108 (functionCall -> ID LPAREN callAux .)
    LTHAN           reduce using rule 108 (functionCall -> ID LPAREN callAux .)
    EQUAL           reduce using rule 108 (functionCall -> ID LPAREN callAux .)
    DIFF            reduce using rule 108 (functionCall -> ID LPAREN callAux .)
    TIMES           reduce using rule 108 (functionCall -> ID LPAREN callAux .)
    DIVIDE          reduce using rule 108 (functionCall -> ID LPAREN callAux .)
    PLUS            reduce using rule 108 (functionCall -> ID LPAREN callAux .)
    MINUS           reduce using rule 108 (functionCall -> ID LPAREN callAux .)
    TO              reduce using rule 108 (functionCall -> ID LPAREN callAux .)
    RPAREN          reduce using rule 108 (functionCall -> ID LPAREN callAux .)
    COMA            reduce using rule 108 (functionCall -> ID LPAREN callAux .)
    RSBRACK         reduce using rule 108 (functionCall -> ID LPAREN callAux .)
    DO              reduce using rule 108 (functionCall -> ID LPAREN callAux .)


state 178

    (109) callAux -> expression . RPAREN
    (112) callRecursive -> expression . COMA callAux

    RPAREN          shift and go to state 222
    COMA            shift and go to state 223


state 179

    (113) callFinal -> RPAREN .

    SEMICOLON       reduce using rule 113 (callFinal -> RPAREN .)
    OR              reduce using rule 113 (callFinal -> RPAREN .)
    AND             reduce using rule 113 (callFinal -> RPAREN .)
    GTHAN           reduce using rule 113 (callFinal -> RPAREN .)
    LTHAN           reduce using rule 113 (callFinal -> RPAREN .)
    EQUAL           reduce using rule 113 (callFinal -> RPAREN .)
    DIFF            reduce using rule 113 (callFinal -> RPAREN .)
    TIMES           reduce using rule 113 (callFinal -> RPAREN .)
    DIVIDE          reduce using rule 113 (callFinal -> RPAREN .)
    PLUS            reduce using rule 113 (callFinal -> RPAREN .)
    MINUS           reduce using rule 113 (callFinal -> RPAREN .)
    TO              reduce using rule 113 (callFinal -> RPAREN .)
    RPAREN          reduce using rule 113 (callFinal -> RPAREN .)
    COMA            reduce using rule 113 (callFinal -> RPAREN .)
    RSBRACK         reduce using rule 113 (callFinal -> RPAREN .)
    DO              reduce using rule 113 (callFinal -> RPAREN .)


state 180

    (110) callAux -> callRecursive .

    SEMICOLON       reduce using rule 110 (callAux -> callRecursive .)
    OR              reduce using rule 110 (callAux -> callRecursive .)
    AND             reduce using rule 110 (callAux -> callRecursive .)
    GTHAN           reduce using rule 110 (callAux -> callRecursive .)
    LTHAN           reduce using rule 110 (callAux -> callRecursive .)
    EQUAL           reduce using rule 110 (callAux -> callRecursive .)
    DIFF            reduce using rule 110 (callAux -> callRecursive .)
    TIMES           reduce using rule 110 (callAux -> callRecursive .)
    DIVIDE          reduce using rule 110 (callAux -> callRecursive .)
    PLUS            reduce using rule 110 (callAux -> callRecursive .)
    MINUS           reduce using rule 110 (callAux -> callRecursive .)
    TO              reduce using rule 110 (callAux -> callRecursive .)
    RPAREN          reduce using rule 110 (callAux -> callRecursive .)
    COMA            reduce using rule 110 (callAux -> callRecursive .)
    RSBRACK         reduce using rule 110 (callAux -> callRecursive .)
    DO              reduce using rule 110 (callAux -> callRecursive .)


state 181

    (111) callAux -> callFinal .

    SEMICOLON       reduce using rule 111 (callAux -> callFinal .)
    OR              reduce using rule 111 (callAux -> callFinal .)
    AND             reduce using rule 111 (callAux -> callFinal .)
    GTHAN           reduce using rule 111 (callAux -> callFinal .)
    LTHAN           reduce using rule 111 (callAux -> callFinal .)
    EQUAL           reduce using rule 111 (callAux -> callFinal .)
    DIFF            reduce using rule 111 (callAux -> callFinal .)
    TIMES           reduce using rule 111 (callAux -> callFinal .)
    DIVIDE          reduce using rule 111 (callAux -> callFinal .)
    PLUS            reduce using rule 111 (callAux -> callFinal .)
    MINUS           reduce using rule 111 (callAux -> callFinal .)
    TO              reduce using rule 111 (callAux -> callFinal .)
    RPAREN          reduce using rule 111 (callAux -> callFinal .)
    COMA            reduce using rule 111 (callAux -> callFinal .)
    RSBRACK         reduce using rule 111 (callAux -> callFinal .)
    DO              reduce using rule 111 (callAux -> callFinal .)


state 182

    (149) identArray -> ID LSBRACK expression . RSBRACK

    RSBRACK         shift and go to state 224


state 183

    (81) returnStatement -> RETURN LPAREN expression . RPAREN

    RPAREN          shift and go to state 225


state 184

    (87) regressionFunc -> REGRESSION LPAREN ID . COMA ID RPAREN

    COMA            shift and go to state 226


state 185

    (86) plotXYFunc -> PLOTXY LPAREN ID . COMA ID RPAREN

    COMA            shift and go to state 227


state 186

    (84) shortCondition -> IF LPAREN expression . RPAREN THEN block
    (85) longCondition -> IF LPAREN expression . RPAREN THEN block ELSE block

    RPAREN          shift and go to state 228


state 187

    (106) conditional -> WHILE LPAREN expression . RPAREN block

    RPAREN          shift and go to state 229


state 188

    (107) nonconditional -> FOR assignment TO . expression DO block
    (114) expression -> . term
    (115) expression -> . expressionOperation
    (118) term -> . factor
    (119) term -> . termOperation
    (116) expressionOperation -> . term PLUS expression
    (117) expressionOperation -> . term MINUS expression
    (122) factor -> . idioms
    (123) factor -> . factorOperation
    (120) termOperation -> . factor TIMES term
    (121) termOperation -> . factor DIVIDE term
    (128) idioms -> . auction
    (129) idioms -> . idiomsOperation
    (124) factorOperation -> . idioms GTHAN factor
    (125) factorOperation -> . idioms LTHAN factor
    (126) factorOperation -> . idioms EQUAL factor
    (127) factorOperation -> . idioms DIFF factor
    (132) auction -> . constant
    (133) auction -> . otherExpression
    (134) auction -> . identifier
    (135) auction -> . averageFunc
    (136) auction -> . modeFunc
    (137) auction -> . varianceFunc
    (138) auction -> . functionCall
    (130) idiomsOperation -> . auction OR idioms
    (131) idiomsOperation -> . auction AND idioms
    (139) constant -> . someInt
    (140) constant -> . someFloat
    (141) constant -> . someChar
    (145) otherExpression -> . LPAREN expression RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (150) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (151) modeFunc -> . MODE LPAREN ID RPAREN
    (152) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (108) functionCall -> . ID LPAREN callAux
    (142) someInt -> . CTE_INT
    (143) someFloat -> . CTE_FLOAT
    (144) someChar -> . CTE_CHAR
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 160
    AVERAGE         shift and go to state 161
    MODE            shift and go to state 162
    VARIANCE        shift and go to state 163
    ID              shift and go to state 70
    CTE_INT         shift and go to state 164
    CTE_FLOAT       shift and go to state 165
    CTE_CHAR        shift and go to state 166

    expression                     shift and go to state 230
    term                           shift and go to state 143
    expressionOperation            shift and go to state 144
    factor                         shift and go to state 145
    termOperation                  shift and go to state 146
    idioms                         shift and go to state 147
    factorOperation                shift and go to state 148
    auction                        shift and go to state 149
    idiomsOperation                shift and go to state 150
    constant                       shift and go to state 151
    otherExpression                shift and go to state 152
    identifier                     shift and go to state 141
    averageFunc                    shift and go to state 153
    modeFunc                       shift and go to state 154
    varianceFunc                   shift and go to state 155
    functionCall                   shift and go to state 156
    someInt                        shift and go to state 157
    someFloat                      shift and go to state 158
    someChar                       shift and go to state 159
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 189

    (31) withParameters -> parameters RPAREN funcVer1 .

    FUNCTION        reduce using rule 31 (withParameters -> parameters RPAREN funcVer1 .)
    MAIN            reduce using rule 31 (withParameters -> parameters RPAREN funcVer1 .)


state 190

    (32) withParameters -> parameters RPAREN funcVer2 .

    FUNCTION        reduce using rule 32 (withParameters -> parameters RPAREN funcVer2 .)
    MAIN            reduce using rule 32 (withParameters -> parameters RPAREN funcVer2 .)


state 191

    (50) oneParam -> typeVar COLON identifierVar .
    (51) sameTypeParam -> typeVar COLON identifierVar . COMA sameTypeParamFinal
    (52) sameTypeParam -> typeVar COLON identifierVar . COMA sameTypeParamRecursive
    (57) newParam -> typeVar COLON identifierVar . SEMICOLON parameters

    RPAREN          reduce using rule 50 (oneParam -> typeVar COLON identifierVar .)
    COMA            shift and go to state 231
    SEMICOLON       shift and go to state 232


state 192

    (39) oneVarLoc -> typeVar COLON . identifier SEMICOLON
    (40) sameTypeLoc -> typeVar COLON . identifier COMA sameTypeFinalLoc
    (41) sameTypeLoc -> typeVar COLON . identifier COMA sameTypeRecursiveLoc
    (46) newTypeLoc -> typeVar COLON . identifier SEMICOLON varAuxLoc
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    ID              shift and go to state 124

    identifier                     shift and go to state 233
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 193

    (18) sameTypeRecursive -> identifierVar SEMICOLON varAux .

    MAIN            reduce using rule 18 (sameTypeRecursive -> identifierVar SEMICOLON varAux .)
    FUNCTION        reduce using rule 18 (sameTypeRecursive -> identifierVar SEMICOLON varAux .)


state 194

    (16) sameTypeRecursive -> identifierVar . COMA sameTypeRecursive
    (17) sameTypeRecursive -> identifierVar . COMA sameTypeFinal
    (18) sameTypeRecursive -> identifierVar . SEMICOLON varAux
    (15) sameTypeFinal -> identifierVar . SEMICOLON

    COMA            shift and go to state 134
    SEMICOLON       shift and go to state 234


state 195

    (16) sameTypeRecursive -> identifierVar COMA sameTypeRecursive .

    MAIN            reduce using rule 16 (sameTypeRecursive -> identifierVar COMA sameTypeRecursive .)
    FUNCTION        reduce using rule 16 (sameTypeRecursive -> identifierVar COMA sameTypeRecursive .)


state 196

    (17) sameTypeRecursive -> identifierVar COMA sameTypeFinal .

    MAIN            reduce using rule 17 (sameTypeRecursive -> identifierVar COMA sameTypeFinal .)
    FUNCTION        reduce using rule 17 (sameTypeRecursive -> identifierVar COMA sameTypeFinal .)


state 197

    (155) expressionOperationVar -> termVar PLUS expressionVar .

    RSBRACK         reduce using rule 155 (expressionOperationVar -> termVar PLUS expressionVar .)
    RPAREN          reduce using rule 155 (expressionOperationVar -> termVar PLUS expressionVar .)


state 198

    (156) expressionOperationVar -> termVar MINUS expressionVar .

    RSBRACK         reduce using rule 156 (expressionOperationVar -> termVar MINUS expressionVar .)
    RPAREN          reduce using rule 156 (expressionOperationVar -> termVar MINUS expressionVar .)


state 199

    (159) termOperationVar -> auctionVar TIMES termVar .

    PLUS            reduce using rule 159 (termOperationVar -> auctionVar TIMES termVar .)
    MINUS           reduce using rule 159 (termOperationVar -> auctionVar TIMES termVar .)
    RSBRACK         reduce using rule 159 (termOperationVar -> auctionVar TIMES termVar .)
    RPAREN          reduce using rule 159 (termOperationVar -> auctionVar TIMES termVar .)


state 200

    (160) termOperationVar -> auctionVar DIVIDE termVar .

    PLUS            reduce using rule 160 (termOperationVar -> auctionVar DIVIDE termVar .)
    MINUS           reduce using rule 160 (termOperationVar -> auctionVar DIVIDE termVar .)
    RSBRACK         reduce using rule 160 (termOperationVar -> auctionVar DIVIDE termVar .)
    RPAREN          reduce using rule 160 (termOperationVar -> auctionVar DIVIDE termVar .)


state 201

    (164) otherExpressionVar -> LPAREN expressionVar RPAREN .

    TIMES           reduce using rule 164 (otherExpressionVar -> LPAREN expressionVar RPAREN .)
    DIVIDE          reduce using rule 164 (otherExpressionVar -> LPAREN expressionVar RPAREN .)
    PLUS            reduce using rule 164 (otherExpressionVar -> LPAREN expressionVar RPAREN .)
    MINUS           reduce using rule 164 (otherExpressionVar -> LPAREN expressionVar RPAREN .)
    RSBRACK         reduce using rule 164 (otherExpressionVar -> LPAREN expressionVar RPAREN .)
    RPAREN          reduce using rule 164 (otherExpressionVar -> LPAREN expressionVar RPAREN .)


state 202

    (116) expressionOperation -> term PLUS . expression
    (114) expression -> . term
    (115) expression -> . expressionOperation
    (118) term -> . factor
    (119) term -> . termOperation
    (116) expressionOperation -> . term PLUS expression
    (117) expressionOperation -> . term MINUS expression
    (122) factor -> . idioms
    (123) factor -> . factorOperation
    (120) termOperation -> . factor TIMES term
    (121) termOperation -> . factor DIVIDE term
    (128) idioms -> . auction
    (129) idioms -> . idiomsOperation
    (124) factorOperation -> . idioms GTHAN factor
    (125) factorOperation -> . idioms LTHAN factor
    (126) factorOperation -> . idioms EQUAL factor
    (127) factorOperation -> . idioms DIFF factor
    (132) auction -> . constant
    (133) auction -> . otherExpression
    (134) auction -> . identifier
    (135) auction -> . averageFunc
    (136) auction -> . modeFunc
    (137) auction -> . varianceFunc
    (138) auction -> . functionCall
    (130) idiomsOperation -> . auction OR idioms
    (131) idiomsOperation -> . auction AND idioms
    (139) constant -> . someInt
    (140) constant -> . someFloat
    (141) constant -> . someChar
    (145) otherExpression -> . LPAREN expression RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (150) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (151) modeFunc -> . MODE LPAREN ID RPAREN
    (152) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (108) functionCall -> . ID LPAREN callAux
    (142) someInt -> . CTE_INT
    (143) someFloat -> . CTE_FLOAT
    (144) someChar -> . CTE_CHAR
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 160
    AVERAGE         shift and go to state 161
    MODE            shift and go to state 162
    VARIANCE        shift and go to state 163
    ID              shift and go to state 70
    CTE_INT         shift and go to state 164
    CTE_FLOAT       shift and go to state 165
    CTE_CHAR        shift and go to state 166

    term                           shift and go to state 143
    expression                     shift and go to state 235
    expressionOperation            shift and go to state 144
    factor                         shift and go to state 145
    termOperation                  shift and go to state 146
    idioms                         shift and go to state 147
    factorOperation                shift and go to state 148
    auction                        shift and go to state 149
    idiomsOperation                shift and go to state 150
    constant                       shift and go to state 151
    otherExpression                shift and go to state 152
    identifier                     shift and go to state 141
    averageFunc                    shift and go to state 153
    modeFunc                       shift and go to state 154
    varianceFunc                   shift and go to state 155
    functionCall                   shift and go to state 156
    someInt                        shift and go to state 157
    someFloat                      shift and go to state 158
    someChar                       shift and go to state 159
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 203

    (117) expressionOperation -> term MINUS . expression
    (114) expression -> . term
    (115) expression -> . expressionOperation
    (118) term -> . factor
    (119) term -> . termOperation
    (116) expressionOperation -> . term PLUS expression
    (117) expressionOperation -> . term MINUS expression
    (122) factor -> . idioms
    (123) factor -> . factorOperation
    (120) termOperation -> . factor TIMES term
    (121) termOperation -> . factor DIVIDE term
    (128) idioms -> . auction
    (129) idioms -> . idiomsOperation
    (124) factorOperation -> . idioms GTHAN factor
    (125) factorOperation -> . idioms LTHAN factor
    (126) factorOperation -> . idioms EQUAL factor
    (127) factorOperation -> . idioms DIFF factor
    (132) auction -> . constant
    (133) auction -> . otherExpression
    (134) auction -> . identifier
    (135) auction -> . averageFunc
    (136) auction -> . modeFunc
    (137) auction -> . varianceFunc
    (138) auction -> . functionCall
    (130) idiomsOperation -> . auction OR idioms
    (131) idiomsOperation -> . auction AND idioms
    (139) constant -> . someInt
    (140) constant -> . someFloat
    (141) constant -> . someChar
    (145) otherExpression -> . LPAREN expression RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (150) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (151) modeFunc -> . MODE LPAREN ID RPAREN
    (152) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (108) functionCall -> . ID LPAREN callAux
    (142) someInt -> . CTE_INT
    (143) someFloat -> . CTE_FLOAT
    (144) someChar -> . CTE_CHAR
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 160
    AVERAGE         shift and go to state 161
    MODE            shift and go to state 162
    VARIANCE        shift and go to state 163
    ID              shift and go to state 70
    CTE_INT         shift and go to state 164
    CTE_FLOAT       shift and go to state 165
    CTE_CHAR        shift and go to state 166

    term                           shift and go to state 143
    expression                     shift and go to state 236
    expressionOperation            shift and go to state 144
    factor                         shift and go to state 145
    termOperation                  shift and go to state 146
    idioms                         shift and go to state 147
    factorOperation                shift and go to state 148
    auction                        shift and go to state 149
    idiomsOperation                shift and go to state 150
    constant                       shift and go to state 151
    otherExpression                shift and go to state 152
    identifier                     shift and go to state 141
    averageFunc                    shift and go to state 153
    modeFunc                       shift and go to state 154
    varianceFunc                   shift and go to state 155
    functionCall                   shift and go to state 156
    someInt                        shift and go to state 157
    someFloat                      shift and go to state 158
    someChar                       shift and go to state 159
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 204

    (120) termOperation -> factor TIMES . term
    (118) term -> . factor
    (119) term -> . termOperation
    (122) factor -> . idioms
    (123) factor -> . factorOperation
    (120) termOperation -> . factor TIMES term
    (121) termOperation -> . factor DIVIDE term
    (128) idioms -> . auction
    (129) idioms -> . idiomsOperation
    (124) factorOperation -> . idioms GTHAN factor
    (125) factorOperation -> . idioms LTHAN factor
    (126) factorOperation -> . idioms EQUAL factor
    (127) factorOperation -> . idioms DIFF factor
    (132) auction -> . constant
    (133) auction -> . otherExpression
    (134) auction -> . identifier
    (135) auction -> . averageFunc
    (136) auction -> . modeFunc
    (137) auction -> . varianceFunc
    (138) auction -> . functionCall
    (130) idiomsOperation -> . auction OR idioms
    (131) idiomsOperation -> . auction AND idioms
    (139) constant -> . someInt
    (140) constant -> . someFloat
    (141) constant -> . someChar
    (145) otherExpression -> . LPAREN expression RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (150) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (151) modeFunc -> . MODE LPAREN ID RPAREN
    (152) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (108) functionCall -> . ID LPAREN callAux
    (142) someInt -> . CTE_INT
    (143) someFloat -> . CTE_FLOAT
    (144) someChar -> . CTE_CHAR
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 160
    AVERAGE         shift and go to state 161
    MODE            shift and go to state 162
    VARIANCE        shift and go to state 163
    ID              shift and go to state 70
    CTE_INT         shift and go to state 164
    CTE_FLOAT       shift and go to state 165
    CTE_CHAR        shift and go to state 166

    factor                         shift and go to state 145
    term                           shift and go to state 237
    termOperation                  shift and go to state 146
    idioms                         shift and go to state 147
    factorOperation                shift and go to state 148
    auction                        shift and go to state 149
    idiomsOperation                shift and go to state 150
    constant                       shift and go to state 151
    otherExpression                shift and go to state 152
    identifier                     shift and go to state 141
    averageFunc                    shift and go to state 153
    modeFunc                       shift and go to state 154
    varianceFunc                   shift and go to state 155
    functionCall                   shift and go to state 156
    someInt                        shift and go to state 157
    someFloat                      shift and go to state 158
    someChar                       shift and go to state 159
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 205

    (121) termOperation -> factor DIVIDE . term
    (118) term -> . factor
    (119) term -> . termOperation
    (122) factor -> . idioms
    (123) factor -> . factorOperation
    (120) termOperation -> . factor TIMES term
    (121) termOperation -> . factor DIVIDE term
    (128) idioms -> . auction
    (129) idioms -> . idiomsOperation
    (124) factorOperation -> . idioms GTHAN factor
    (125) factorOperation -> . idioms LTHAN factor
    (126) factorOperation -> . idioms EQUAL factor
    (127) factorOperation -> . idioms DIFF factor
    (132) auction -> . constant
    (133) auction -> . otherExpression
    (134) auction -> . identifier
    (135) auction -> . averageFunc
    (136) auction -> . modeFunc
    (137) auction -> . varianceFunc
    (138) auction -> . functionCall
    (130) idiomsOperation -> . auction OR idioms
    (131) idiomsOperation -> . auction AND idioms
    (139) constant -> . someInt
    (140) constant -> . someFloat
    (141) constant -> . someChar
    (145) otherExpression -> . LPAREN expression RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (150) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (151) modeFunc -> . MODE LPAREN ID RPAREN
    (152) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (108) functionCall -> . ID LPAREN callAux
    (142) someInt -> . CTE_INT
    (143) someFloat -> . CTE_FLOAT
    (144) someChar -> . CTE_CHAR
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 160
    AVERAGE         shift and go to state 161
    MODE            shift and go to state 162
    VARIANCE        shift and go to state 163
    ID              shift and go to state 70
    CTE_INT         shift and go to state 164
    CTE_FLOAT       shift and go to state 165
    CTE_CHAR        shift and go to state 166

    factor                         shift and go to state 145
    term                           shift and go to state 238
    termOperation                  shift and go to state 146
    idioms                         shift and go to state 147
    factorOperation                shift and go to state 148
    auction                        shift and go to state 149
    idiomsOperation                shift and go to state 150
    constant                       shift and go to state 151
    otherExpression                shift and go to state 152
    identifier                     shift and go to state 141
    averageFunc                    shift and go to state 153
    modeFunc                       shift and go to state 154
    varianceFunc                   shift and go to state 155
    functionCall                   shift and go to state 156
    someInt                        shift and go to state 157
    someFloat                      shift and go to state 158
    someChar                       shift and go to state 159
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 206

    (124) factorOperation -> idioms GTHAN . factor
    (122) factor -> . idioms
    (123) factor -> . factorOperation
    (128) idioms -> . auction
    (129) idioms -> . idiomsOperation
    (124) factorOperation -> . idioms GTHAN factor
    (125) factorOperation -> . idioms LTHAN factor
    (126) factorOperation -> . idioms EQUAL factor
    (127) factorOperation -> . idioms DIFF factor
    (132) auction -> . constant
    (133) auction -> . otherExpression
    (134) auction -> . identifier
    (135) auction -> . averageFunc
    (136) auction -> . modeFunc
    (137) auction -> . varianceFunc
    (138) auction -> . functionCall
    (130) idiomsOperation -> . auction OR idioms
    (131) idiomsOperation -> . auction AND idioms
    (139) constant -> . someInt
    (140) constant -> . someFloat
    (141) constant -> . someChar
    (145) otherExpression -> . LPAREN expression RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (150) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (151) modeFunc -> . MODE LPAREN ID RPAREN
    (152) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (108) functionCall -> . ID LPAREN callAux
    (142) someInt -> . CTE_INT
    (143) someFloat -> . CTE_FLOAT
    (144) someChar -> . CTE_CHAR
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 160
    AVERAGE         shift and go to state 161
    MODE            shift and go to state 162
    VARIANCE        shift and go to state 163
    ID              shift and go to state 70
    CTE_INT         shift and go to state 164
    CTE_FLOAT       shift and go to state 165
    CTE_CHAR        shift and go to state 166

    idioms                         shift and go to state 147
    factor                         shift and go to state 239
    factorOperation                shift and go to state 148
    auction                        shift and go to state 149
    idiomsOperation                shift and go to state 150
    constant                       shift and go to state 151
    otherExpression                shift and go to state 152
    identifier                     shift and go to state 141
    averageFunc                    shift and go to state 153
    modeFunc                       shift and go to state 154
    varianceFunc                   shift and go to state 155
    functionCall                   shift and go to state 156
    someInt                        shift and go to state 157
    someFloat                      shift and go to state 158
    someChar                       shift and go to state 159
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 207

    (125) factorOperation -> idioms LTHAN . factor
    (122) factor -> . idioms
    (123) factor -> . factorOperation
    (128) idioms -> . auction
    (129) idioms -> . idiomsOperation
    (124) factorOperation -> . idioms GTHAN factor
    (125) factorOperation -> . idioms LTHAN factor
    (126) factorOperation -> . idioms EQUAL factor
    (127) factorOperation -> . idioms DIFF factor
    (132) auction -> . constant
    (133) auction -> . otherExpression
    (134) auction -> . identifier
    (135) auction -> . averageFunc
    (136) auction -> . modeFunc
    (137) auction -> . varianceFunc
    (138) auction -> . functionCall
    (130) idiomsOperation -> . auction OR idioms
    (131) idiomsOperation -> . auction AND idioms
    (139) constant -> . someInt
    (140) constant -> . someFloat
    (141) constant -> . someChar
    (145) otherExpression -> . LPAREN expression RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (150) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (151) modeFunc -> . MODE LPAREN ID RPAREN
    (152) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (108) functionCall -> . ID LPAREN callAux
    (142) someInt -> . CTE_INT
    (143) someFloat -> . CTE_FLOAT
    (144) someChar -> . CTE_CHAR
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 160
    AVERAGE         shift and go to state 161
    MODE            shift and go to state 162
    VARIANCE        shift and go to state 163
    ID              shift and go to state 70
    CTE_INT         shift and go to state 164
    CTE_FLOAT       shift and go to state 165
    CTE_CHAR        shift and go to state 166

    idioms                         shift and go to state 147
    factor                         shift and go to state 240
    factorOperation                shift and go to state 148
    auction                        shift and go to state 149
    idiomsOperation                shift and go to state 150
    constant                       shift and go to state 151
    otherExpression                shift and go to state 152
    identifier                     shift and go to state 141
    averageFunc                    shift and go to state 153
    modeFunc                       shift and go to state 154
    varianceFunc                   shift and go to state 155
    functionCall                   shift and go to state 156
    someInt                        shift and go to state 157
    someFloat                      shift and go to state 158
    someChar                       shift and go to state 159
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 208

    (126) factorOperation -> idioms EQUAL . factor
    (122) factor -> . idioms
    (123) factor -> . factorOperation
    (128) idioms -> . auction
    (129) idioms -> . idiomsOperation
    (124) factorOperation -> . idioms GTHAN factor
    (125) factorOperation -> . idioms LTHAN factor
    (126) factorOperation -> . idioms EQUAL factor
    (127) factorOperation -> . idioms DIFF factor
    (132) auction -> . constant
    (133) auction -> . otherExpression
    (134) auction -> . identifier
    (135) auction -> . averageFunc
    (136) auction -> . modeFunc
    (137) auction -> . varianceFunc
    (138) auction -> . functionCall
    (130) idiomsOperation -> . auction OR idioms
    (131) idiomsOperation -> . auction AND idioms
    (139) constant -> . someInt
    (140) constant -> . someFloat
    (141) constant -> . someChar
    (145) otherExpression -> . LPAREN expression RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (150) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (151) modeFunc -> . MODE LPAREN ID RPAREN
    (152) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (108) functionCall -> . ID LPAREN callAux
    (142) someInt -> . CTE_INT
    (143) someFloat -> . CTE_FLOAT
    (144) someChar -> . CTE_CHAR
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 160
    AVERAGE         shift and go to state 161
    MODE            shift and go to state 162
    VARIANCE        shift and go to state 163
    ID              shift and go to state 70
    CTE_INT         shift and go to state 164
    CTE_FLOAT       shift and go to state 165
    CTE_CHAR        shift and go to state 166

    idioms                         shift and go to state 147
    factor                         shift and go to state 241
    factorOperation                shift and go to state 148
    auction                        shift and go to state 149
    idiomsOperation                shift and go to state 150
    constant                       shift and go to state 151
    otherExpression                shift and go to state 152
    identifier                     shift and go to state 141
    averageFunc                    shift and go to state 153
    modeFunc                       shift and go to state 154
    varianceFunc                   shift and go to state 155
    functionCall                   shift and go to state 156
    someInt                        shift and go to state 157
    someFloat                      shift and go to state 158
    someChar                       shift and go to state 159
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 209

    (127) factorOperation -> idioms DIFF . factor
    (122) factor -> . idioms
    (123) factor -> . factorOperation
    (128) idioms -> . auction
    (129) idioms -> . idiomsOperation
    (124) factorOperation -> . idioms GTHAN factor
    (125) factorOperation -> . idioms LTHAN factor
    (126) factorOperation -> . idioms EQUAL factor
    (127) factorOperation -> . idioms DIFF factor
    (132) auction -> . constant
    (133) auction -> . otherExpression
    (134) auction -> . identifier
    (135) auction -> . averageFunc
    (136) auction -> . modeFunc
    (137) auction -> . varianceFunc
    (138) auction -> . functionCall
    (130) idiomsOperation -> . auction OR idioms
    (131) idiomsOperation -> . auction AND idioms
    (139) constant -> . someInt
    (140) constant -> . someFloat
    (141) constant -> . someChar
    (145) otherExpression -> . LPAREN expression RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (150) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (151) modeFunc -> . MODE LPAREN ID RPAREN
    (152) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (108) functionCall -> . ID LPAREN callAux
    (142) someInt -> . CTE_INT
    (143) someFloat -> . CTE_FLOAT
    (144) someChar -> . CTE_CHAR
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 160
    AVERAGE         shift and go to state 161
    MODE            shift and go to state 162
    VARIANCE        shift and go to state 163
    ID              shift and go to state 70
    CTE_INT         shift and go to state 164
    CTE_FLOAT       shift and go to state 165
    CTE_CHAR        shift and go to state 166

    idioms                         shift and go to state 147
    factor                         shift and go to state 242
    factorOperation                shift and go to state 148
    auction                        shift and go to state 149
    idiomsOperation                shift and go to state 150
    constant                       shift and go to state 151
    otherExpression                shift and go to state 152
    identifier                     shift and go to state 141
    averageFunc                    shift and go to state 153
    modeFunc                       shift and go to state 154
    varianceFunc                   shift and go to state 155
    functionCall                   shift and go to state 156
    someInt                        shift and go to state 157
    someFloat                      shift and go to state 158
    someChar                       shift and go to state 159
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 210

    (130) idiomsOperation -> auction OR . idioms
    (128) idioms -> . auction
    (129) idioms -> . idiomsOperation
    (132) auction -> . constant
    (133) auction -> . otherExpression
    (134) auction -> . identifier
    (135) auction -> . averageFunc
    (136) auction -> . modeFunc
    (137) auction -> . varianceFunc
    (138) auction -> . functionCall
    (130) idiomsOperation -> . auction OR idioms
    (131) idiomsOperation -> . auction AND idioms
    (139) constant -> . someInt
    (140) constant -> . someFloat
    (141) constant -> . someChar
    (145) otherExpression -> . LPAREN expression RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (150) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (151) modeFunc -> . MODE LPAREN ID RPAREN
    (152) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (108) functionCall -> . ID LPAREN callAux
    (142) someInt -> . CTE_INT
    (143) someFloat -> . CTE_FLOAT
    (144) someChar -> . CTE_CHAR
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 160
    AVERAGE         shift and go to state 161
    MODE            shift and go to state 162
    VARIANCE        shift and go to state 163
    ID              shift and go to state 70
    CTE_INT         shift and go to state 164
    CTE_FLOAT       shift and go to state 165
    CTE_CHAR        shift and go to state 166

    auction                        shift and go to state 149
    idioms                         shift and go to state 243
    idiomsOperation                shift and go to state 150
    constant                       shift and go to state 151
    otherExpression                shift and go to state 152
    identifier                     shift and go to state 141
    averageFunc                    shift and go to state 153
    modeFunc                       shift and go to state 154
    varianceFunc                   shift and go to state 155
    functionCall                   shift and go to state 156
    someInt                        shift and go to state 157
    someFloat                      shift and go to state 158
    someChar                       shift and go to state 159
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 211

    (131) idiomsOperation -> auction AND . idioms
    (128) idioms -> . auction
    (129) idioms -> . idiomsOperation
    (132) auction -> . constant
    (133) auction -> . otherExpression
    (134) auction -> . identifier
    (135) auction -> . averageFunc
    (136) auction -> . modeFunc
    (137) auction -> . varianceFunc
    (138) auction -> . functionCall
    (130) idiomsOperation -> . auction OR idioms
    (131) idiomsOperation -> . auction AND idioms
    (139) constant -> . someInt
    (140) constant -> . someFloat
    (141) constant -> . someChar
    (145) otherExpression -> . LPAREN expression RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (150) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (151) modeFunc -> . MODE LPAREN ID RPAREN
    (152) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (108) functionCall -> . ID LPAREN callAux
    (142) someInt -> . CTE_INT
    (143) someFloat -> . CTE_FLOAT
    (144) someChar -> . CTE_CHAR
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 160
    AVERAGE         shift and go to state 161
    MODE            shift and go to state 162
    VARIANCE        shift and go to state 163
    ID              shift and go to state 70
    CTE_INT         shift and go to state 164
    CTE_FLOAT       shift and go to state 165
    CTE_CHAR        shift and go to state 166

    auction                        shift and go to state 149
    idioms                         shift and go to state 244
    idiomsOperation                shift and go to state 150
    constant                       shift and go to state 151
    otherExpression                shift and go to state 152
    identifier                     shift and go to state 141
    averageFunc                    shift and go to state 153
    modeFunc                       shift and go to state 154
    varianceFunc                   shift and go to state 155
    functionCall                   shift and go to state 156
    someInt                        shift and go to state 157
    someFloat                      shift and go to state 158
    someChar                       shift and go to state 159
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 212

    (145) otherExpression -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 245


state 213

    (150) averageFunc -> AVERAGE LPAREN . ID RPAREN

    ID              shift and go to state 246


state 214

    (151) modeFunc -> MODE LPAREN . ID RPAREN

    ID              shift and go to state 247


state 215

    (152) varianceFunc -> VARIANCE LPAREN . ID RPAREN

    ID              shift and go to state 248


state 216

    (91) writingFinal -> writingString RPAREN .

    SEMICOLON       reduce using rule 91 (writingFinal -> writingString RPAREN .)


state 217

    (94) writingRecursive -> writingString COMA . writingFinal
    (96) writingRecursive -> writingString COMA . writingRecursive
    (91) writingFinal -> . writingString RPAREN
    (92) writingFinal -> . expression RPAREN
    (94) writingRecursive -> . writingString COMA writingFinal
    (95) writingRecursive -> . expression COMA writingFinal
    (96) writingRecursive -> . writingString COMA writingRecursive
    (97) writingRecursive -> . expression COMA writingRecursive
    (93) writingString -> . CTE_STRING
    (114) expression -> . term
    (115) expression -> . expressionOperation
    (118) term -> . factor
    (119) term -> . termOperation
    (116) expressionOperation -> . term PLUS expression
    (117) expressionOperation -> . term MINUS expression
    (122) factor -> . idioms
    (123) factor -> . factorOperation
    (120) termOperation -> . factor TIMES term
    (121) termOperation -> . factor DIVIDE term
    (128) idioms -> . auction
    (129) idioms -> . idiomsOperation
    (124) factorOperation -> . idioms GTHAN factor
    (125) factorOperation -> . idioms LTHAN factor
    (126) factorOperation -> . idioms EQUAL factor
    (127) factorOperation -> . idioms DIFF factor
    (132) auction -> . constant
    (133) auction -> . otherExpression
    (134) auction -> . identifier
    (135) auction -> . averageFunc
    (136) auction -> . modeFunc
    (137) auction -> . varianceFunc
    (138) auction -> . functionCall
    (130) idiomsOperation -> . auction OR idioms
    (131) idiomsOperation -> . auction AND idioms
    (139) constant -> . someInt
    (140) constant -> . someFloat
    (141) constant -> . someChar
    (145) otherExpression -> . LPAREN expression RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (150) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (151) modeFunc -> . MODE LPAREN ID RPAREN
    (152) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (108) functionCall -> . ID LPAREN callAux
    (142) someInt -> . CTE_INT
    (143) someFloat -> . CTE_FLOAT
    (144) someChar -> . CTE_CHAR
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    CTE_STRING      shift and go to state 172
    LPAREN          shift and go to state 160
    AVERAGE         shift and go to state 161
    MODE            shift and go to state 162
    VARIANCE        shift and go to state 163
    ID              shift and go to state 70
    CTE_INT         shift and go to state 164
    CTE_FLOAT       shift and go to state 165
    CTE_CHAR        shift and go to state 166

    writingString                  shift and go to state 170
    writingFinal                   shift and go to state 249
    writingRecursive               shift and go to state 250
    expression                     shift and go to state 171
    term                           shift and go to state 143
    expressionOperation            shift and go to state 144
    factor                         shift and go to state 145
    termOperation                  shift and go to state 146
    idioms                         shift and go to state 147
    factorOperation                shift and go to state 148
    auction                        shift and go to state 149
    idiomsOperation                shift and go to state 150
    constant                       shift and go to state 151
    otherExpression                shift and go to state 152
    identifier                     shift and go to state 141
    averageFunc                    shift and go to state 153
    modeFunc                       shift and go to state 154
    varianceFunc                   shift and go to state 155
    functionCall                   shift and go to state 156
    someInt                        shift and go to state 157
    someFloat                      shift and go to state 158
    someChar                       shift and go to state 159
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 218

    (92) writingFinal -> expression RPAREN .

    SEMICOLON       reduce using rule 92 (writingFinal -> expression RPAREN .)


state 219

    (95) writingRecursive -> expression COMA . writingFinal
    (97) writingRecursive -> expression COMA . writingRecursive
    (91) writingFinal -> . writingString RPAREN
    (92) writingFinal -> . expression RPAREN
    (94) writingRecursive -> . writingString COMA writingFinal
    (95) writingRecursive -> . expression COMA writingFinal
    (96) writingRecursive -> . writingString COMA writingRecursive
    (97) writingRecursive -> . expression COMA writingRecursive
    (93) writingString -> . CTE_STRING
    (114) expression -> . term
    (115) expression -> . expressionOperation
    (118) term -> . factor
    (119) term -> . termOperation
    (116) expressionOperation -> . term PLUS expression
    (117) expressionOperation -> . term MINUS expression
    (122) factor -> . idioms
    (123) factor -> . factorOperation
    (120) termOperation -> . factor TIMES term
    (121) termOperation -> . factor DIVIDE term
    (128) idioms -> . auction
    (129) idioms -> . idiomsOperation
    (124) factorOperation -> . idioms GTHAN factor
    (125) factorOperation -> . idioms LTHAN factor
    (126) factorOperation -> . idioms EQUAL factor
    (127) factorOperation -> . idioms DIFF factor
    (132) auction -> . constant
    (133) auction -> . otherExpression
    (134) auction -> . identifier
    (135) auction -> . averageFunc
    (136) auction -> . modeFunc
    (137) auction -> . varianceFunc
    (138) auction -> . functionCall
    (130) idiomsOperation -> . auction OR idioms
    (131) idiomsOperation -> . auction AND idioms
    (139) constant -> . someInt
    (140) constant -> . someFloat
    (141) constant -> . someChar
    (145) otherExpression -> . LPAREN expression RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (150) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (151) modeFunc -> . MODE LPAREN ID RPAREN
    (152) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (108) functionCall -> . ID LPAREN callAux
    (142) someInt -> . CTE_INT
    (143) someFloat -> . CTE_FLOAT
    (144) someChar -> . CTE_CHAR
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    CTE_STRING      shift and go to state 172
    LPAREN          shift and go to state 160
    AVERAGE         shift and go to state 161
    MODE            shift and go to state 162
    VARIANCE        shift and go to state 163
    ID              shift and go to state 70
    CTE_INT         shift and go to state 164
    CTE_FLOAT       shift and go to state 165
    CTE_CHAR        shift and go to state 166

    expression                     shift and go to state 171
    writingFinal                   shift and go to state 251
    writingRecursive               shift and go to state 252
    writingString                  shift and go to state 170
    term                           shift and go to state 143
    expressionOperation            shift and go to state 144
    factor                         shift and go to state 145
    termOperation                  shift and go to state 146
    idioms                         shift and go to state 147
    factorOperation                shift and go to state 148
    auction                        shift and go to state 149
    idiomsOperation                shift and go to state 150
    constant                       shift and go to state 151
    otherExpression                shift and go to state 152
    identifier                     shift and go to state 141
    averageFunc                    shift and go to state 153
    modeFunc                       shift and go to state 154
    varianceFunc                   shift and go to state 155
    functionCall                   shift and go to state 156
    someInt                        shift and go to state 157
    someFloat                      shift and go to state 158
    someChar                       shift and go to state 159
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 220

    (101) readingFinal -> identifier RPAREN .

    SEMICOLON       reduce using rule 101 (readingFinal -> identifier RPAREN .)


state 221

    (102) readingRecursive -> identifier COMA . readingRecursive
    (103) readingRecursive -> identifier COMA . readingFinal
    (102) readingRecursive -> . identifier COMA readingRecursive
    (103) readingRecursive -> . identifier COMA readingFinal
    (101) readingFinal -> . identifier RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    ID              shift and go to state 124

    identifier                     shift and go to state 253
    readingRecursive               shift and go to state 254
    readingFinal                   shift and go to state 255
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 222

    (109) callAux -> expression RPAREN .

    SEMICOLON       reduce using rule 109 (callAux -> expression RPAREN .)
    OR              reduce using rule 109 (callAux -> expression RPAREN .)
    AND             reduce using rule 109 (callAux -> expression RPAREN .)
    GTHAN           reduce using rule 109 (callAux -> expression RPAREN .)
    LTHAN           reduce using rule 109 (callAux -> expression RPAREN .)
    EQUAL           reduce using rule 109 (callAux -> expression RPAREN .)
    DIFF            reduce using rule 109 (callAux -> expression RPAREN .)
    TIMES           reduce using rule 109 (callAux -> expression RPAREN .)
    DIVIDE          reduce using rule 109 (callAux -> expression RPAREN .)
    PLUS            reduce using rule 109 (callAux -> expression RPAREN .)
    MINUS           reduce using rule 109 (callAux -> expression RPAREN .)
    TO              reduce using rule 109 (callAux -> expression RPAREN .)
    RPAREN          reduce using rule 109 (callAux -> expression RPAREN .)
    COMA            reduce using rule 109 (callAux -> expression RPAREN .)
    RSBRACK         reduce using rule 109 (callAux -> expression RPAREN .)
    DO              reduce using rule 109 (callAux -> expression RPAREN .)


state 223

    (112) callRecursive -> expression COMA . callAux
    (109) callAux -> . expression RPAREN
    (110) callAux -> . callRecursive
    (111) callAux -> . callFinal
    (114) expression -> . term
    (115) expression -> . expressionOperation
    (112) callRecursive -> . expression COMA callAux
    (113) callFinal -> . RPAREN
    (118) term -> . factor
    (119) term -> . termOperation
    (116) expressionOperation -> . term PLUS expression
    (117) expressionOperation -> . term MINUS expression
    (122) factor -> . idioms
    (123) factor -> . factorOperation
    (120) termOperation -> . factor TIMES term
    (121) termOperation -> . factor DIVIDE term
    (128) idioms -> . auction
    (129) idioms -> . idiomsOperation
    (124) factorOperation -> . idioms GTHAN factor
    (125) factorOperation -> . idioms LTHAN factor
    (126) factorOperation -> . idioms EQUAL factor
    (127) factorOperation -> . idioms DIFF factor
    (132) auction -> . constant
    (133) auction -> . otherExpression
    (134) auction -> . identifier
    (135) auction -> . averageFunc
    (136) auction -> . modeFunc
    (137) auction -> . varianceFunc
    (138) auction -> . functionCall
    (130) idiomsOperation -> . auction OR idioms
    (131) idiomsOperation -> . auction AND idioms
    (139) constant -> . someInt
    (140) constant -> . someFloat
    (141) constant -> . someChar
    (145) otherExpression -> . LPAREN expression RPAREN
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (150) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (151) modeFunc -> . MODE LPAREN ID RPAREN
    (152) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (108) functionCall -> . ID LPAREN callAux
    (142) someInt -> . CTE_INT
    (143) someFloat -> . CTE_FLOAT
    (144) someChar -> . CTE_CHAR
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    RPAREN          shift and go to state 179
    LPAREN          shift and go to state 160
    AVERAGE         shift and go to state 161
    MODE            shift and go to state 162
    VARIANCE        shift and go to state 163
    ID              shift and go to state 70
    CTE_INT         shift and go to state 164
    CTE_FLOAT       shift and go to state 165
    CTE_CHAR        shift and go to state 166

    expression                     shift and go to state 178
    callAux                        shift and go to state 256
    callRecursive                  shift and go to state 180
    callFinal                      shift and go to state 181
    term                           shift and go to state 143
    expressionOperation            shift and go to state 144
    factor                         shift and go to state 145
    termOperation                  shift and go to state 146
    idioms                         shift and go to state 147
    factorOperation                shift and go to state 148
    auction                        shift and go to state 149
    idiomsOperation                shift and go to state 150
    constant                       shift and go to state 151
    otherExpression                shift and go to state 152
    identifier                     shift and go to state 141
    averageFunc                    shift and go to state 153
    modeFunc                       shift and go to state 154
    varianceFunc                   shift and go to state 155
    functionCall                   shift and go to state 156
    someInt                        shift and go to state 157
    someFloat                      shift and go to state 158
    someChar                       shift and go to state 159
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 224

    (149) identArray -> ID LSBRACK expression RSBRACK .

    ASSIGN          reduce using rule 149 (identArray -> ID LSBRACK expression RSBRACK .)
    OR              reduce using rule 149 (identArray -> ID LSBRACK expression RSBRACK .)
    AND             reduce using rule 149 (identArray -> ID LSBRACK expression RSBRACK .)
    GTHAN           reduce using rule 149 (identArray -> ID LSBRACK expression RSBRACK .)
    LTHAN           reduce using rule 149 (identArray -> ID LSBRACK expression RSBRACK .)
    EQUAL           reduce using rule 149 (identArray -> ID LSBRACK expression RSBRACK .)
    DIFF            reduce using rule 149 (identArray -> ID LSBRACK expression RSBRACK .)
    TIMES           reduce using rule 149 (identArray -> ID LSBRACK expression RSBRACK .)
    DIVIDE          reduce using rule 149 (identArray -> ID LSBRACK expression RSBRACK .)
    PLUS            reduce using rule 149 (identArray -> ID LSBRACK expression RSBRACK .)
    MINUS           reduce using rule 149 (identArray -> ID LSBRACK expression RSBRACK .)
    SEMICOLON       reduce using rule 149 (identArray -> ID LSBRACK expression RSBRACK .)
    TO              reduce using rule 149 (identArray -> ID LSBRACK expression RSBRACK .)
    RPAREN          reduce using rule 149 (identArray -> ID LSBRACK expression RSBRACK .)
    COMA            reduce using rule 149 (identArray -> ID LSBRACK expression RSBRACK .)
    RSBRACK         reduce using rule 149 (identArray -> ID LSBRACK expression RSBRACK .)
    DO              reduce using rule 149 (identArray -> ID LSBRACK expression RSBRACK .)


state 225

    (81) returnStatement -> RETURN LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 81 (returnStatement -> RETURN LPAREN expression RPAREN .)


state 226

    (87) regressionFunc -> REGRESSION LPAREN ID COMA . ID RPAREN

    ID              shift and go to state 257


state 227

    (86) plotXYFunc -> PLOTXY LPAREN ID COMA . ID RPAREN

    ID              shift and go to state 258


state 228

    (84) shortCondition -> IF LPAREN expression RPAREN . THEN block
    (85) longCondition -> IF LPAREN expression RPAREN . THEN block ELSE block

    THEN            shift and go to state 259


state 229

    (106) conditional -> WHILE LPAREN expression RPAREN . block
    (65) block -> . LBRACK blockAux

    LBRACK          shift and go to state 43

    block                          shift and go to state 260

state 230

    (107) nonconditional -> FOR assignment TO expression . DO block

    DO              shift and go to state 261


state 231

    (51) sameTypeParam -> typeVar COLON identifierVar COMA . sameTypeParamFinal
    (52) sameTypeParam -> typeVar COLON identifierVar COMA . sameTypeParamRecursive
    (53) sameTypeParamFinal -> . identifierVar
    (54) sameTypeParamRecursive -> . identifierVar COMA sameTypeParamRecursive
    (55) sameTypeParamRecursive -> . identifierVar COMA sameTypeParamFinal
    (56) sameTypeParamRecursive -> . identifierVar SEMICOLON parameters
    (58) identifierVar -> . identLonely
    (59) identifierVar -> . identArrayVar
    (148) identLonely -> . ID
    (60) identArrayVar -> . ID LSBRACK expressionVar RSBRACK

    ID              shift and go to state 41

    identifierVar                  shift and go to state 262
    sameTypeParamFinal             shift and go to state 263
    sameTypeParamRecursive         shift and go to state 264
    identLonely                    shift and go to state 39
    identArrayVar                  shift and go to state 40

state 232

    (57) newParam -> typeVar COLON identifierVar SEMICOLON . parameters
    (47) parameters -> . oneParam
    (48) parameters -> . sameTypeParam
    (49) parameters -> . newParam
    (50) oneParam -> . typeVar COLON identifierVar
    (51) sameTypeParam -> . typeVar COLON identifierVar COMA sameTypeParamFinal
    (52) sameTypeParam -> . typeVar COLON identifierVar COMA sameTypeParamRecursive
    (57) newParam -> . typeVar COLON identifierVar SEMICOLON parameters
    (61) typeVar -> . INT
    (62) typeVar -> . FLOAT
    (63) typeVar -> . CHAR

    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    typeVar                        shift and go to state 85
    parameters                     shift and go to state 265
    oneParam                       shift and go to state 82
    sameTypeParam                  shift and go to state 83
    newParam                       shift and go to state 84

state 233

    (39) oneVarLoc -> typeVar COLON identifier . SEMICOLON
    (40) sameTypeLoc -> typeVar COLON identifier . COMA sameTypeFinalLoc
    (41) sameTypeLoc -> typeVar COLON identifier . COMA sameTypeRecursiveLoc
    (46) newTypeLoc -> typeVar COLON identifier . SEMICOLON varAuxLoc

    SEMICOLON       shift and go to state 266
    COMA            shift and go to state 267


state 234

    (18) sameTypeRecursive -> identifierVar SEMICOLON . varAux
    (15) sameTypeFinal -> identifierVar SEMICOLON .
    (9) varAux -> . oneVar
    (10) varAux -> . sameType
    (11) varAux -> . newType
    (12) oneVar -> . typeVar COLON identifierVar SEMICOLON
    (13) sameType -> . typeVar COLON identifierVar COMA sameTypeFinal
    (14) sameType -> . typeVar COLON identifierVar COMA sameTypeRecursive
    (19) newType -> . typeVar COLON identifierVar SEMICOLON varAux
    (61) typeVar -> . INT
    (62) typeVar -> . FLOAT
    (63) typeVar -> . CHAR

    MAIN            reduce using rule 15 (sameTypeFinal -> identifierVar SEMICOLON .)
    FUNCTION        reduce using rule 15 (sameTypeFinal -> identifierVar SEMICOLON .)
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    varAux                         shift and go to state 193
    oneVar                         shift and go to state 20
    sameType                       shift and go to state 21
    newType                        shift and go to state 22
    typeVar                        shift and go to state 23

state 235

    (116) expressionOperation -> term PLUS expression .

    SEMICOLON       reduce using rule 116 (expressionOperation -> term PLUS expression .)
    TO              reduce using rule 116 (expressionOperation -> term PLUS expression .)
    RPAREN          reduce using rule 116 (expressionOperation -> term PLUS expression .)
    COMA            reduce using rule 116 (expressionOperation -> term PLUS expression .)
    RSBRACK         reduce using rule 116 (expressionOperation -> term PLUS expression .)
    DO              reduce using rule 116 (expressionOperation -> term PLUS expression .)


state 236

    (117) expressionOperation -> term MINUS expression .

    SEMICOLON       reduce using rule 117 (expressionOperation -> term MINUS expression .)
    TO              reduce using rule 117 (expressionOperation -> term MINUS expression .)
    RPAREN          reduce using rule 117 (expressionOperation -> term MINUS expression .)
    COMA            reduce using rule 117 (expressionOperation -> term MINUS expression .)
    RSBRACK         reduce using rule 117 (expressionOperation -> term MINUS expression .)
    DO              reduce using rule 117 (expressionOperation -> term MINUS expression .)


state 237

    (120) termOperation -> factor TIMES term .

    PLUS            reduce using rule 120 (termOperation -> factor TIMES term .)
    MINUS           reduce using rule 120 (termOperation -> factor TIMES term .)
    SEMICOLON       reduce using rule 120 (termOperation -> factor TIMES term .)
    TO              reduce using rule 120 (termOperation -> factor TIMES term .)
    RPAREN          reduce using rule 120 (termOperation -> factor TIMES term .)
    COMA            reduce using rule 120 (termOperation -> factor TIMES term .)
    RSBRACK         reduce using rule 120 (termOperation -> factor TIMES term .)
    DO              reduce using rule 120 (termOperation -> factor TIMES term .)


state 238

    (121) termOperation -> factor DIVIDE term .

    PLUS            reduce using rule 121 (termOperation -> factor DIVIDE term .)
    MINUS           reduce using rule 121 (termOperation -> factor DIVIDE term .)
    SEMICOLON       reduce using rule 121 (termOperation -> factor DIVIDE term .)
    TO              reduce using rule 121 (termOperation -> factor DIVIDE term .)
    RPAREN          reduce using rule 121 (termOperation -> factor DIVIDE term .)
    COMA            reduce using rule 121 (termOperation -> factor DIVIDE term .)
    RSBRACK         reduce using rule 121 (termOperation -> factor DIVIDE term .)
    DO              reduce using rule 121 (termOperation -> factor DIVIDE term .)


state 239

    (124) factorOperation -> idioms GTHAN factor .

    TIMES           reduce using rule 124 (factorOperation -> idioms GTHAN factor .)
    DIVIDE          reduce using rule 124 (factorOperation -> idioms GTHAN factor .)
    PLUS            reduce using rule 124 (factorOperation -> idioms GTHAN factor .)
    MINUS           reduce using rule 124 (factorOperation -> idioms GTHAN factor .)
    SEMICOLON       reduce using rule 124 (factorOperation -> idioms GTHAN factor .)
    TO              reduce using rule 124 (factorOperation -> idioms GTHAN factor .)
    RPAREN          reduce using rule 124 (factorOperation -> idioms GTHAN factor .)
    COMA            reduce using rule 124 (factorOperation -> idioms GTHAN factor .)
    RSBRACK         reduce using rule 124 (factorOperation -> idioms GTHAN factor .)
    DO              reduce using rule 124 (factorOperation -> idioms GTHAN factor .)


state 240

    (125) factorOperation -> idioms LTHAN factor .

    TIMES           reduce using rule 125 (factorOperation -> idioms LTHAN factor .)
    DIVIDE          reduce using rule 125 (factorOperation -> idioms LTHAN factor .)
    PLUS            reduce using rule 125 (factorOperation -> idioms LTHAN factor .)
    MINUS           reduce using rule 125 (factorOperation -> idioms LTHAN factor .)
    SEMICOLON       reduce using rule 125 (factorOperation -> idioms LTHAN factor .)
    TO              reduce using rule 125 (factorOperation -> idioms LTHAN factor .)
    RPAREN          reduce using rule 125 (factorOperation -> idioms LTHAN factor .)
    COMA            reduce using rule 125 (factorOperation -> idioms LTHAN factor .)
    RSBRACK         reduce using rule 125 (factorOperation -> idioms LTHAN factor .)
    DO              reduce using rule 125 (factorOperation -> idioms LTHAN factor .)


state 241

    (126) factorOperation -> idioms EQUAL factor .

    TIMES           reduce using rule 126 (factorOperation -> idioms EQUAL factor .)
    DIVIDE          reduce using rule 126 (factorOperation -> idioms EQUAL factor .)
    PLUS            reduce using rule 126 (factorOperation -> idioms EQUAL factor .)
    MINUS           reduce using rule 126 (factorOperation -> idioms EQUAL factor .)
    SEMICOLON       reduce using rule 126 (factorOperation -> idioms EQUAL factor .)
    TO              reduce using rule 126 (factorOperation -> idioms EQUAL factor .)
    RPAREN          reduce using rule 126 (factorOperation -> idioms EQUAL factor .)
    COMA            reduce using rule 126 (factorOperation -> idioms EQUAL factor .)
    RSBRACK         reduce using rule 126 (factorOperation -> idioms EQUAL factor .)
    DO              reduce using rule 126 (factorOperation -> idioms EQUAL factor .)


state 242

    (127) factorOperation -> idioms DIFF factor .

    TIMES           reduce using rule 127 (factorOperation -> idioms DIFF factor .)
    DIVIDE          reduce using rule 127 (factorOperation -> idioms DIFF factor .)
    PLUS            reduce using rule 127 (factorOperation -> idioms DIFF factor .)
    MINUS           reduce using rule 127 (factorOperation -> idioms DIFF factor .)
    SEMICOLON       reduce using rule 127 (factorOperation -> idioms DIFF factor .)
    TO              reduce using rule 127 (factorOperation -> idioms DIFF factor .)
    RPAREN          reduce using rule 127 (factorOperation -> idioms DIFF factor .)
    COMA            reduce using rule 127 (factorOperation -> idioms DIFF factor .)
    RSBRACK         reduce using rule 127 (factorOperation -> idioms DIFF factor .)
    DO              reduce using rule 127 (factorOperation -> idioms DIFF factor .)


state 243

    (130) idiomsOperation -> auction OR idioms .

    GTHAN           reduce using rule 130 (idiomsOperation -> auction OR idioms .)
    LTHAN           reduce using rule 130 (idiomsOperation -> auction OR idioms .)
    EQUAL           reduce using rule 130 (idiomsOperation -> auction OR idioms .)
    DIFF            reduce using rule 130 (idiomsOperation -> auction OR idioms .)
    TIMES           reduce using rule 130 (idiomsOperation -> auction OR idioms .)
    DIVIDE          reduce using rule 130 (idiomsOperation -> auction OR idioms .)
    PLUS            reduce using rule 130 (idiomsOperation -> auction OR idioms .)
    MINUS           reduce using rule 130 (idiomsOperation -> auction OR idioms .)
    SEMICOLON       reduce using rule 130 (idiomsOperation -> auction OR idioms .)
    TO              reduce using rule 130 (idiomsOperation -> auction OR idioms .)
    RPAREN          reduce using rule 130 (idiomsOperation -> auction OR idioms .)
    COMA            reduce using rule 130 (idiomsOperation -> auction OR idioms .)
    RSBRACK         reduce using rule 130 (idiomsOperation -> auction OR idioms .)
    DO              reduce using rule 130 (idiomsOperation -> auction OR idioms .)


state 244

    (131) idiomsOperation -> auction AND idioms .

    GTHAN           reduce using rule 131 (idiomsOperation -> auction AND idioms .)
    LTHAN           reduce using rule 131 (idiomsOperation -> auction AND idioms .)
    EQUAL           reduce using rule 131 (idiomsOperation -> auction AND idioms .)
    DIFF            reduce using rule 131 (idiomsOperation -> auction AND idioms .)
    TIMES           reduce using rule 131 (idiomsOperation -> auction AND idioms .)
    DIVIDE          reduce using rule 131 (idiomsOperation -> auction AND idioms .)
    PLUS            reduce using rule 131 (idiomsOperation -> auction AND idioms .)
    MINUS           reduce using rule 131 (idiomsOperation -> auction AND idioms .)
    SEMICOLON       reduce using rule 131 (idiomsOperation -> auction AND idioms .)
    TO              reduce using rule 131 (idiomsOperation -> auction AND idioms .)
    RPAREN          reduce using rule 131 (idiomsOperation -> auction AND idioms .)
    COMA            reduce using rule 131 (idiomsOperation -> auction AND idioms .)
    RSBRACK         reduce using rule 131 (idiomsOperation -> auction AND idioms .)
    DO              reduce using rule 131 (idiomsOperation -> auction AND idioms .)


state 245

    (145) otherExpression -> LPAREN expression RPAREN .

    OR              reduce using rule 145 (otherExpression -> LPAREN expression RPAREN .)
    AND             reduce using rule 145 (otherExpression -> LPAREN expression RPAREN .)
    GTHAN           reduce using rule 145 (otherExpression -> LPAREN expression RPAREN .)
    LTHAN           reduce using rule 145 (otherExpression -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 145 (otherExpression -> LPAREN expression RPAREN .)
    DIFF            reduce using rule 145 (otherExpression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 145 (otherExpression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 145 (otherExpression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 145 (otherExpression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 145 (otherExpression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 145 (otherExpression -> LPAREN expression RPAREN .)
    TO              reduce using rule 145 (otherExpression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 145 (otherExpression -> LPAREN expression RPAREN .)
    COMA            reduce using rule 145 (otherExpression -> LPAREN expression RPAREN .)
    RSBRACK         reduce using rule 145 (otherExpression -> LPAREN expression RPAREN .)
    DO              reduce using rule 145 (otherExpression -> LPAREN expression RPAREN .)


state 246

    (150) averageFunc -> AVERAGE LPAREN ID . RPAREN

    RPAREN          shift and go to state 268


state 247

    (151) modeFunc -> MODE LPAREN ID . RPAREN

    RPAREN          shift and go to state 269


state 248

    (152) varianceFunc -> VARIANCE LPAREN ID . RPAREN

    RPAREN          shift and go to state 270


state 249

    (94) writingRecursive -> writingString COMA writingFinal .

    SEMICOLON       reduce using rule 94 (writingRecursive -> writingString COMA writingFinal .)


state 250

    (96) writingRecursive -> writingString COMA writingRecursive .

    SEMICOLON       reduce using rule 96 (writingRecursive -> writingString COMA writingRecursive .)


state 251

    (95) writingRecursive -> expression COMA writingFinal .

    SEMICOLON       reduce using rule 95 (writingRecursive -> expression COMA writingFinal .)


state 252

    (97) writingRecursive -> expression COMA writingRecursive .

    SEMICOLON       reduce using rule 97 (writingRecursive -> expression COMA writingRecursive .)


state 253

    (102) readingRecursive -> identifier . COMA readingRecursive
    (103) readingRecursive -> identifier . COMA readingFinal
    (101) readingFinal -> identifier . RPAREN

    COMA            shift and go to state 221
    RPAREN          shift and go to state 220


state 254

    (102) readingRecursive -> identifier COMA readingRecursive .

    SEMICOLON       reduce using rule 102 (readingRecursive -> identifier COMA readingRecursive .)


state 255

    (103) readingRecursive -> identifier COMA readingFinal .

    SEMICOLON       reduce using rule 103 (readingRecursive -> identifier COMA readingFinal .)


state 256

    (112) callRecursive -> expression COMA callAux .

    SEMICOLON       reduce using rule 112 (callRecursive -> expression COMA callAux .)
    OR              reduce using rule 112 (callRecursive -> expression COMA callAux .)
    AND             reduce using rule 112 (callRecursive -> expression COMA callAux .)
    GTHAN           reduce using rule 112 (callRecursive -> expression COMA callAux .)
    LTHAN           reduce using rule 112 (callRecursive -> expression COMA callAux .)
    EQUAL           reduce using rule 112 (callRecursive -> expression COMA callAux .)
    DIFF            reduce using rule 112 (callRecursive -> expression COMA callAux .)
    TIMES           reduce using rule 112 (callRecursive -> expression COMA callAux .)
    DIVIDE          reduce using rule 112 (callRecursive -> expression COMA callAux .)
    PLUS            reduce using rule 112 (callRecursive -> expression COMA callAux .)
    MINUS           reduce using rule 112 (callRecursive -> expression COMA callAux .)
    TO              reduce using rule 112 (callRecursive -> expression COMA callAux .)
    RPAREN          reduce using rule 112 (callRecursive -> expression COMA callAux .)
    COMA            reduce using rule 112 (callRecursive -> expression COMA callAux .)
    RSBRACK         reduce using rule 112 (callRecursive -> expression COMA callAux .)
    DO              reduce using rule 112 (callRecursive -> expression COMA callAux .)


state 257

    (87) regressionFunc -> REGRESSION LPAREN ID COMA ID . RPAREN

    RPAREN          shift and go to state 271


state 258

    (86) plotXYFunc -> PLOTXY LPAREN ID COMA ID . RPAREN

    RPAREN          shift and go to state 272


state 259

    (84) shortCondition -> IF LPAREN expression RPAREN THEN . block
    (85) longCondition -> IF LPAREN expression RPAREN THEN . block ELSE block
    (65) block -> . LBRACK blockAux

    LBRACK          shift and go to state 43

    block                          shift and go to state 273

state 260

    (106) conditional -> WHILE LPAREN expression RPAREN block .

    RBRACK          reduce using rule 106 (conditional -> WHILE LPAREN expression RPAREN block .)
    WRITE           reduce using rule 106 (conditional -> WHILE LPAREN expression RPAREN block .)
    READ            reduce using rule 106 (conditional -> WHILE LPAREN expression RPAREN block .)
    ID              reduce using rule 106 (conditional -> WHILE LPAREN expression RPAREN block .)
    RETURN          reduce using rule 106 (conditional -> WHILE LPAREN expression RPAREN block .)
    REGRESSION      reduce using rule 106 (conditional -> WHILE LPAREN expression RPAREN block .)
    PLOTXY          reduce using rule 106 (conditional -> WHILE LPAREN expression RPAREN block .)
    IF              reduce using rule 106 (conditional -> WHILE LPAREN expression RPAREN block .)
    WHILE           reduce using rule 106 (conditional -> WHILE LPAREN expression RPAREN block .)
    FOR             reduce using rule 106 (conditional -> WHILE LPAREN expression RPAREN block .)


state 261

    (107) nonconditional -> FOR assignment TO expression DO . block
    (65) block -> . LBRACK blockAux

    LBRACK          shift and go to state 43

    block                          shift and go to state 274

state 262

    (53) sameTypeParamFinal -> identifierVar .
    (54) sameTypeParamRecursive -> identifierVar . COMA sameTypeParamRecursive
    (55) sameTypeParamRecursive -> identifierVar . COMA sameTypeParamFinal
    (56) sameTypeParamRecursive -> identifierVar . SEMICOLON parameters

    RPAREN          reduce using rule 53 (sameTypeParamFinal -> identifierVar .)
    COMA            shift and go to state 275
    SEMICOLON       shift and go to state 276


state 263

    (51) sameTypeParam -> typeVar COLON identifierVar COMA sameTypeParamFinal .

    RPAREN          reduce using rule 51 (sameTypeParam -> typeVar COLON identifierVar COMA sameTypeParamFinal .)


state 264

    (52) sameTypeParam -> typeVar COLON identifierVar COMA sameTypeParamRecursive .

    RPAREN          reduce using rule 52 (sameTypeParam -> typeVar COLON identifierVar COMA sameTypeParamRecursive .)


state 265

    (57) newParam -> typeVar COLON identifierVar SEMICOLON parameters .

    RPAREN          reduce using rule 57 (newParam -> typeVar COLON identifierVar SEMICOLON parameters .)


state 266

    (39) oneVarLoc -> typeVar COLON identifier SEMICOLON .
    (46) newTypeLoc -> typeVar COLON identifier SEMICOLON . varAuxLoc
    (36) varAuxLoc -> . oneVarLoc
    (37) varAuxLoc -> . sameTypeLoc
    (38) varAuxLoc -> . newTypeLoc
    (39) oneVarLoc -> . typeVar COLON identifier SEMICOLON
    (40) sameTypeLoc -> . typeVar COLON identifier COMA sameTypeFinalLoc
    (41) sameTypeLoc -> . typeVar COLON identifier COMA sameTypeRecursiveLoc
    (46) newTypeLoc -> . typeVar COLON identifier SEMICOLON varAuxLoc
    (61) typeVar -> . INT
    (62) typeVar -> . FLOAT
    (63) typeVar -> . CHAR

    LBRACK          reduce using rule 39 (oneVarLoc -> typeVar COLON identifier SEMICOLON .)
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    typeVar                        shift and go to state 132
    varAuxLoc                      shift and go to state 277
    oneVarLoc                      shift and go to state 129
    sameTypeLoc                    shift and go to state 130
    newTypeLoc                     shift and go to state 131

state 267

    (40) sameTypeLoc -> typeVar COLON identifier COMA . sameTypeFinalLoc
    (41) sameTypeLoc -> typeVar COLON identifier COMA . sameTypeRecursiveLoc
    (42) sameTypeFinalLoc -> . identifier SEMICOLON
    (43) sameTypeRecursiveLoc -> . identifier COMA sameTypeRecursiveLoc
    (44) sameTypeRecursiveLoc -> . identifier COMA sameTypeFinalLoc
    (45) sameTypeRecursiveLoc -> . identifier SEMICOLON varAuxLoc
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    ID              shift and go to state 124

    identifier                     shift and go to state 278
    sameTypeFinalLoc               shift and go to state 279
    sameTypeRecursiveLoc           shift and go to state 280
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 268

    (150) averageFunc -> AVERAGE LPAREN ID RPAREN .

    OR              reduce using rule 150 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    AND             reduce using rule 150 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    GTHAN           reduce using rule 150 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    LTHAN           reduce using rule 150 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    EQUAL           reduce using rule 150 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    DIFF            reduce using rule 150 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    TIMES           reduce using rule 150 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    DIVIDE          reduce using rule 150 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    PLUS            reduce using rule 150 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    MINUS           reduce using rule 150 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    SEMICOLON       reduce using rule 150 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    TO              reduce using rule 150 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    RPAREN          reduce using rule 150 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    COMA            reduce using rule 150 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    RSBRACK         reduce using rule 150 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    DO              reduce using rule 150 (averageFunc -> AVERAGE LPAREN ID RPAREN .)


state 269

    (151) modeFunc -> MODE LPAREN ID RPAREN .

    OR              reduce using rule 151 (modeFunc -> MODE LPAREN ID RPAREN .)
    AND             reduce using rule 151 (modeFunc -> MODE LPAREN ID RPAREN .)
    GTHAN           reduce using rule 151 (modeFunc -> MODE LPAREN ID RPAREN .)
    LTHAN           reduce using rule 151 (modeFunc -> MODE LPAREN ID RPAREN .)
    EQUAL           reduce using rule 151 (modeFunc -> MODE LPAREN ID RPAREN .)
    DIFF            reduce using rule 151 (modeFunc -> MODE LPAREN ID RPAREN .)
    TIMES           reduce using rule 151 (modeFunc -> MODE LPAREN ID RPAREN .)
    DIVIDE          reduce using rule 151 (modeFunc -> MODE LPAREN ID RPAREN .)
    PLUS            reduce using rule 151 (modeFunc -> MODE LPAREN ID RPAREN .)
    MINUS           reduce using rule 151 (modeFunc -> MODE LPAREN ID RPAREN .)
    SEMICOLON       reduce using rule 151 (modeFunc -> MODE LPAREN ID RPAREN .)
    TO              reduce using rule 151 (modeFunc -> MODE LPAREN ID RPAREN .)
    RPAREN          reduce using rule 151 (modeFunc -> MODE LPAREN ID RPAREN .)
    COMA            reduce using rule 151 (modeFunc -> MODE LPAREN ID RPAREN .)
    RSBRACK         reduce using rule 151 (modeFunc -> MODE LPAREN ID RPAREN .)
    DO              reduce using rule 151 (modeFunc -> MODE LPAREN ID RPAREN .)


state 270

    (152) varianceFunc -> VARIANCE LPAREN ID RPAREN .

    OR              reduce using rule 152 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    AND             reduce using rule 152 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    GTHAN           reduce using rule 152 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    LTHAN           reduce using rule 152 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    EQUAL           reduce using rule 152 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    DIFF            reduce using rule 152 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    TIMES           reduce using rule 152 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    DIVIDE          reduce using rule 152 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    PLUS            reduce using rule 152 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    MINUS           reduce using rule 152 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    SEMICOLON       reduce using rule 152 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    TO              reduce using rule 152 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    RPAREN          reduce using rule 152 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    COMA            reduce using rule 152 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    RSBRACK         reduce using rule 152 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    DO              reduce using rule 152 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)


state 271

    (87) regressionFunc -> REGRESSION LPAREN ID COMA ID RPAREN .

    SEMICOLON       reduce using rule 87 (regressionFunc -> REGRESSION LPAREN ID COMA ID RPAREN .)


state 272

    (86) plotXYFunc -> PLOTXY LPAREN ID COMA ID RPAREN .

    SEMICOLON       reduce using rule 86 (plotXYFunc -> PLOTXY LPAREN ID COMA ID RPAREN .)


state 273

    (84) shortCondition -> IF LPAREN expression RPAREN THEN block .
    (85) longCondition -> IF LPAREN expression RPAREN THEN block . ELSE block

    RBRACK          reduce using rule 84 (shortCondition -> IF LPAREN expression RPAREN THEN block .)
    WRITE           reduce using rule 84 (shortCondition -> IF LPAREN expression RPAREN THEN block .)
    READ            reduce using rule 84 (shortCondition -> IF LPAREN expression RPAREN THEN block .)
    ID              reduce using rule 84 (shortCondition -> IF LPAREN expression RPAREN THEN block .)
    RETURN          reduce using rule 84 (shortCondition -> IF LPAREN expression RPAREN THEN block .)
    REGRESSION      reduce using rule 84 (shortCondition -> IF LPAREN expression RPAREN THEN block .)
    PLOTXY          reduce using rule 84 (shortCondition -> IF LPAREN expression RPAREN THEN block .)
    IF              reduce using rule 84 (shortCondition -> IF LPAREN expression RPAREN THEN block .)
    WHILE           reduce using rule 84 (shortCondition -> IF LPAREN expression RPAREN THEN block .)
    FOR             reduce using rule 84 (shortCondition -> IF LPAREN expression RPAREN THEN block .)
    ELSE            shift and go to state 281


state 274

    (107) nonconditional -> FOR assignment TO expression DO block .

    RBRACK          reduce using rule 107 (nonconditional -> FOR assignment TO expression DO block .)
    WRITE           reduce using rule 107 (nonconditional -> FOR assignment TO expression DO block .)
    READ            reduce using rule 107 (nonconditional -> FOR assignment TO expression DO block .)
    ID              reduce using rule 107 (nonconditional -> FOR assignment TO expression DO block .)
    RETURN          reduce using rule 107 (nonconditional -> FOR assignment TO expression DO block .)
    REGRESSION      reduce using rule 107 (nonconditional -> FOR assignment TO expression DO block .)
    PLOTXY          reduce using rule 107 (nonconditional -> FOR assignment TO expression DO block .)
    IF              reduce using rule 107 (nonconditional -> FOR assignment TO expression DO block .)
    WHILE           reduce using rule 107 (nonconditional -> FOR assignment TO expression DO block .)
    FOR             reduce using rule 107 (nonconditional -> FOR assignment TO expression DO block .)


state 275

    (54) sameTypeParamRecursive -> identifierVar COMA . sameTypeParamRecursive
    (55) sameTypeParamRecursive -> identifierVar COMA . sameTypeParamFinal
    (54) sameTypeParamRecursive -> . identifierVar COMA sameTypeParamRecursive
    (55) sameTypeParamRecursive -> . identifierVar COMA sameTypeParamFinal
    (56) sameTypeParamRecursive -> . identifierVar SEMICOLON parameters
    (53) sameTypeParamFinal -> . identifierVar
    (58) identifierVar -> . identLonely
    (59) identifierVar -> . identArrayVar
    (148) identLonely -> . ID
    (60) identArrayVar -> . ID LSBRACK expressionVar RSBRACK

    ID              shift and go to state 41

    identifierVar                  shift and go to state 282
    sameTypeParamRecursive         shift and go to state 283
    sameTypeParamFinal             shift and go to state 284
    identLonely                    shift and go to state 39
    identArrayVar                  shift and go to state 40

state 276

    (56) sameTypeParamRecursive -> identifierVar SEMICOLON . parameters
    (47) parameters -> . oneParam
    (48) parameters -> . sameTypeParam
    (49) parameters -> . newParam
    (50) oneParam -> . typeVar COLON identifierVar
    (51) sameTypeParam -> . typeVar COLON identifierVar COMA sameTypeParamFinal
    (52) sameTypeParam -> . typeVar COLON identifierVar COMA sameTypeParamRecursive
    (57) newParam -> . typeVar COLON identifierVar SEMICOLON parameters
    (61) typeVar -> . INT
    (62) typeVar -> . FLOAT
    (63) typeVar -> . CHAR

    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    parameters                     shift and go to state 285
    oneParam                       shift and go to state 82
    sameTypeParam                  shift and go to state 83
    newParam                       shift and go to state 84
    typeVar                        shift and go to state 85

state 277

    (46) newTypeLoc -> typeVar COLON identifier SEMICOLON varAuxLoc .

    LBRACK          reduce using rule 46 (newTypeLoc -> typeVar COLON identifier SEMICOLON varAuxLoc .)


state 278

    (42) sameTypeFinalLoc -> identifier . SEMICOLON
    (43) sameTypeRecursiveLoc -> identifier . COMA sameTypeRecursiveLoc
    (44) sameTypeRecursiveLoc -> identifier . COMA sameTypeFinalLoc
    (45) sameTypeRecursiveLoc -> identifier . SEMICOLON varAuxLoc

    SEMICOLON       shift and go to state 286
    COMA            shift and go to state 287


state 279

    (40) sameTypeLoc -> typeVar COLON identifier COMA sameTypeFinalLoc .

    LBRACK          reduce using rule 40 (sameTypeLoc -> typeVar COLON identifier COMA sameTypeFinalLoc .)


state 280

    (41) sameTypeLoc -> typeVar COLON identifier COMA sameTypeRecursiveLoc .

    LBRACK          reduce using rule 41 (sameTypeLoc -> typeVar COLON identifier COMA sameTypeRecursiveLoc .)


state 281

    (85) longCondition -> IF LPAREN expression RPAREN THEN block ELSE . block
    (65) block -> . LBRACK blockAux

    LBRACK          shift and go to state 43

    block                          shift and go to state 288

state 282

    (54) sameTypeParamRecursive -> identifierVar . COMA sameTypeParamRecursive
    (55) sameTypeParamRecursive -> identifierVar . COMA sameTypeParamFinal
    (56) sameTypeParamRecursive -> identifierVar . SEMICOLON parameters
    (53) sameTypeParamFinal -> identifierVar .

    COMA            shift and go to state 275
    SEMICOLON       shift and go to state 276
    RPAREN          reduce using rule 53 (sameTypeParamFinal -> identifierVar .)


state 283

    (54) sameTypeParamRecursive -> identifierVar COMA sameTypeParamRecursive .

    RPAREN          reduce using rule 54 (sameTypeParamRecursive -> identifierVar COMA sameTypeParamRecursive .)


state 284

    (55) sameTypeParamRecursive -> identifierVar COMA sameTypeParamFinal .

    RPAREN          reduce using rule 55 (sameTypeParamRecursive -> identifierVar COMA sameTypeParamFinal .)


state 285

    (56) sameTypeParamRecursive -> identifierVar SEMICOLON parameters .

    RPAREN          reduce using rule 56 (sameTypeParamRecursive -> identifierVar SEMICOLON parameters .)


state 286

    (42) sameTypeFinalLoc -> identifier SEMICOLON .
    (45) sameTypeRecursiveLoc -> identifier SEMICOLON . varAuxLoc
    (36) varAuxLoc -> . oneVarLoc
    (37) varAuxLoc -> . sameTypeLoc
    (38) varAuxLoc -> . newTypeLoc
    (39) oneVarLoc -> . typeVar COLON identifier SEMICOLON
    (40) sameTypeLoc -> . typeVar COLON identifier COMA sameTypeFinalLoc
    (41) sameTypeLoc -> . typeVar COLON identifier COMA sameTypeRecursiveLoc
    (46) newTypeLoc -> . typeVar COLON identifier SEMICOLON varAuxLoc
    (61) typeVar -> . INT
    (62) typeVar -> . FLOAT
    (63) typeVar -> . CHAR

    LBRACK          reduce using rule 42 (sameTypeFinalLoc -> identifier SEMICOLON .)
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    varAuxLoc                      shift and go to state 289
    oneVarLoc                      shift and go to state 129
    sameTypeLoc                    shift and go to state 130
    newTypeLoc                     shift and go to state 131
    typeVar                        shift and go to state 132

state 287

    (43) sameTypeRecursiveLoc -> identifier COMA . sameTypeRecursiveLoc
    (44) sameTypeRecursiveLoc -> identifier COMA . sameTypeFinalLoc
    (43) sameTypeRecursiveLoc -> . identifier COMA sameTypeRecursiveLoc
    (44) sameTypeRecursiveLoc -> . identifier COMA sameTypeFinalLoc
    (45) sameTypeRecursiveLoc -> . identifier SEMICOLON varAuxLoc
    (42) sameTypeFinalLoc -> . identifier SEMICOLON
    (146) identifier -> . identLonely
    (147) identifier -> . identArray
    (148) identLonely -> . ID
    (149) identArray -> . ID LSBRACK expression RSBRACK

    ID              shift and go to state 124

    identifier                     shift and go to state 290
    sameTypeRecursiveLoc           shift and go to state 291
    sameTypeFinalLoc               shift and go to state 292
    identLonely                    shift and go to state 74
    identArray                     shift and go to state 75

state 288

    (85) longCondition -> IF LPAREN expression RPAREN THEN block ELSE block .

    RBRACK          reduce using rule 85 (longCondition -> IF LPAREN expression RPAREN THEN block ELSE block .)
    WRITE           reduce using rule 85 (longCondition -> IF LPAREN expression RPAREN THEN block ELSE block .)
    READ            reduce using rule 85 (longCondition -> IF LPAREN expression RPAREN THEN block ELSE block .)
    ID              reduce using rule 85 (longCondition -> IF LPAREN expression RPAREN THEN block ELSE block .)
    RETURN          reduce using rule 85 (longCondition -> IF LPAREN expression RPAREN THEN block ELSE block .)
    REGRESSION      reduce using rule 85 (longCondition -> IF LPAREN expression RPAREN THEN block ELSE block .)
    PLOTXY          reduce using rule 85 (longCondition -> IF LPAREN expression RPAREN THEN block ELSE block .)
    IF              reduce using rule 85 (longCondition -> IF LPAREN expression RPAREN THEN block ELSE block .)
    WHILE           reduce using rule 85 (longCondition -> IF LPAREN expression RPAREN THEN block ELSE block .)
    FOR             reduce using rule 85 (longCondition -> IF LPAREN expression RPAREN THEN block ELSE block .)


state 289

    (45) sameTypeRecursiveLoc -> identifier SEMICOLON varAuxLoc .

    LBRACK          reduce using rule 45 (sameTypeRecursiveLoc -> identifier SEMICOLON varAuxLoc .)


state 290

    (43) sameTypeRecursiveLoc -> identifier . COMA sameTypeRecursiveLoc
    (44) sameTypeRecursiveLoc -> identifier . COMA sameTypeFinalLoc
    (45) sameTypeRecursiveLoc -> identifier . SEMICOLON varAuxLoc
    (42) sameTypeFinalLoc -> identifier . SEMICOLON

    COMA            shift and go to state 287
    SEMICOLON       shift and go to state 293


state 291

    (43) sameTypeRecursiveLoc -> identifier COMA sameTypeRecursiveLoc .

    LBRACK          reduce using rule 43 (sameTypeRecursiveLoc -> identifier COMA sameTypeRecursiveLoc .)


state 292

    (44) sameTypeRecursiveLoc -> identifier COMA sameTypeFinalLoc .

    LBRACK          reduce using rule 44 (sameTypeRecursiveLoc -> identifier COMA sameTypeFinalLoc .)


state 293

    (45) sameTypeRecursiveLoc -> identifier SEMICOLON . varAuxLoc
    (42) sameTypeFinalLoc -> identifier SEMICOLON .
    (36) varAuxLoc -> . oneVarLoc
    (37) varAuxLoc -> . sameTypeLoc
    (38) varAuxLoc -> . newTypeLoc
    (39) oneVarLoc -> . typeVar COLON identifier SEMICOLON
    (40) sameTypeLoc -> . typeVar COLON identifier COMA sameTypeFinalLoc
    (41) sameTypeLoc -> . typeVar COLON identifier COMA sameTypeRecursiveLoc
    (46) newTypeLoc -> . typeVar COLON identifier SEMICOLON varAuxLoc
    (61) typeVar -> . INT
    (62) typeVar -> . FLOAT
    (63) typeVar -> . CHAR

    LBRACK          reduce using rule 42 (sameTypeFinalLoc -> identifier SEMICOLON .)
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    varAuxLoc                      shift and go to state 289
    oneVarLoc                      shift and go to state 129
    sameTypeLoc                    shift and go to state 130
    newTypeLoc                     shift and go to state 131
    typeVar                        shift and go to state 132
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 104 resolved using rule (blockAux -> statute RBRACK)
WARNING: rejected rule (blockFinal -> RBRACK) in state 104
