Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON programVer1
Rule 2     program -> PROGRAM ID SEMICOLON programVer2
Rule 3     program -> PROGRAM ID SEMICOLON programVer3
Rule 4     programVer1 -> variables functions principal
Rule 5     programVer2 -> variables principal
Rule 6     programVer2 -> functions principal
Rule 7     programVer3 -> principal
Rule 8     variables -> VARS varAux
Rule 9     varAux -> oneVar
Rule 10    varAux -> sameType
Rule 11    varAux -> newType
Rule 12    oneVar -> typeVar COLON identifierVar SEMICOLON
Rule 13    sameType -> typeVar COLON identifierVar COMA sameTypeFinal
Rule 14    sameType -> typeVar COLON identifierVar COMA sameTypeRecursive
Rule 15    sameTypeFinal -> identifierVar SEMICOLON
Rule 16    sameTypeRecursive -> identifierVar COMA sameTypeRecursive
Rule 17    sameTypeRecursive -> identifierVar COMA sameTypeFinal
Rule 18    sameTypeRecursive -> identifierVar SEMICOLON varAux
Rule 19    newType -> typeVar COLON identifierVar SEMICOLON varAux
Rule 20    functions -> funcAux
Rule 21    functions -> recursiveFunc
Rule 22    recursiveFunc -> funcAux functions
Rule 23    funcAux -> FUNCTION typeFunction ID LPAREN withParameters
Rule 24    funcAux -> FUNCTION typeFunction ID LPAREN RPAREN funcVer1
Rule 25    funcAux -> FUNCTION typeFunction ID LPAREN RPAREN funcVer2
Rule 26    typeFunction -> INT
Rule 27    typeFunction -> FLOAT
Rule 28    typeFunction -> CHAR
Rule 29    typeFunction -> VOID
Rule 30    withParameters -> parameters RPAREN funcVer1
Rule 31    withParameters -> parameters RPAREN funcVer2
Rule 32    funcVer1 -> variablesLoc block
Rule 33    funcVer2 -> block
Rule 34    variablesLoc -> VARS varAuxLoc
Rule 35    varAuxLoc -> oneVarLoc
Rule 36    varAuxLoc -> sameTypeLoc
Rule 37    varAuxLoc -> newTypeLoc
Rule 38    oneVarLoc -> typeVar COLON identifier SEMICOLON
Rule 39    sameTypeLoc -> typeVar COLON identifier COMA sameTypeFinalLoc
Rule 40    sameTypeLoc -> typeVar COLON identifier COMA sameTypeRecursiveLoc
Rule 41    sameTypeFinalLoc -> identifier SEMICOLON
Rule 42    sameTypeRecursiveLoc -> identifier COMA sameTypeRecursiveLoc
Rule 43    sameTypeRecursiveLoc -> identifier COMA sameTypeFinalLoc
Rule 44    sameTypeRecursiveLoc -> identifier SEMICOLON varAuxLoc
Rule 45    newTypeLoc -> typeVar COLON identifier SEMICOLON varAuxLoc
Rule 46    parameters -> oneParam
Rule 47    parameters -> sameTypeParam
Rule 48    parameters -> newParam
Rule 49    oneParam -> typeVar COLON identifierVar
Rule 50    sameTypeParam -> typeVar COLON identifierVar COMA sameTypeParamFinal
Rule 51    sameTypeParam -> typeVar COLON identifierVar COMA sameTypeParamRecursive
Rule 52    sameTypeParamFinal -> identifierVar
Rule 53    sameTypeParamRecursive -> identifierVar COMA sameTypeParamRecursive
Rule 54    sameTypeParamRecursive -> identifierVar COMA sameTypeFinal
Rule 55    sameTypeParamRecursive -> identifier SEMICOLON parameters
Rule 56    newParam -> typeVar COLON identifierVar SEMICOLON parameters
Rule 57    identifierVar -> identLonely
Rule 58    identifierVar -> identArrayVar
Rule 59    identArrayVar -> ID LSBRACK expressionVar RSBRACK
Rule 60    typeVar -> INT
Rule 61    typeVar -> FLOAT
Rule 62    typeVar -> CHAR
Rule 63    principal -> MAIN LPAREN RPAREN block
Rule 64    block -> LBRACK blockAux
Rule 65    blockAux -> statute RBRACK
Rule 66    blockAux -> blockRecursive
Rule 67    blockAux -> blockFinal
Rule 68    blockFinal -> RBRACK
Rule 69    blockRecursive -> statute blockAux
Rule 70    statute -> assignment SEMICOLON
Rule 71    statute -> ifStatement
Rule 72    statute -> writing SEMICOLON
Rule 73    statute -> reading SEMICOLON
Rule 74    statute -> loop
Rule 75    statute -> functionCall SEMICOLON
Rule 76    statute -> returnStatement SEMICOLON
Rule 77    statute -> regressionFunc SEMICOLON
Rule 78    statute -> plotXYFunc SEMICOLON
Rule 79    assignment -> identifier ASSIGN expression
Rule 80    returnStatement -> RETURN LPAREN expression RPAREN
Rule 81    ifStatement -> shortCondition
Rule 82    ifStatement -> longCondition
Rule 83    shortCondition -> IF LPAREN expression RPAREN THEN block
Rule 84    longCondition -> IF LPAREN expression RPAREN THEN block ELSE block
Rule 85    plotXYFunc -> PLOTXY LPAREN ID COMA ID RPAREN
Rule 86    regressionFunc -> REGRESSION LPAREN ID COMA ID RPAREN
Rule 87    writing -> WRITE LPAREN writingAux
Rule 88    writingAux -> writingFinal
Rule 89    writingAux -> writingRecursive
Rule 90    writingFinal -> writingString RPAREN
Rule 91    writingFinal -> expression RPAREN
Rule 92    writingString -> CTE_STRING
Rule 93    writingRecursive -> writingString COMA writingFinal
Rule 94    writingRecursive -> expression COMA writingFinal
Rule 95    writingRecursive -> writingString COMA writingRecursive
Rule 96    writingRecursive -> expression COMA writingRecursive
Rule 97    reading -> READ LPAREN readingAux
Rule 98    readingAux -> readingFinal
Rule 99    readingAux -> readingRecursive
Rule 100   readingFinal -> identifier RPAREN
Rule 101   readingRecursive -> identifier COMA readingRecursive
Rule 102   readingRecursive -> identifier COMA readingFinal
Rule 103   loop -> conditional
Rule 104   loop -> nonconditional
Rule 105   conditional -> WHILE LPAREN expression RPAREN block
Rule 106   nonconditional -> FOR identifier ASSIGN expression TO expression DO block
Rule 107   functionCall -> ID LPAREN callAux
Rule 108   callAux -> expression RPAREN
Rule 109   callAux -> callRecursive
Rule 110   callAux -> callFinal
Rule 111   callRecursive -> expression COMA callAux
Rule 112   callFinal -> RPAREN
Rule 113   expression -> term
Rule 114   expression -> expressionOperation
Rule 115   expressionOperation -> term PLUS expression
Rule 116   expressionOperation -> term MINUS expression
Rule 117   term -> factor
Rule 118   term -> termOperation
Rule 119   termOperation -> factor TIMES term
Rule 120   termOperation -> factor DIVIDE term
Rule 121   factor -> idioms
Rule 122   factor -> factorOperation
Rule 123   factorOperation -> idioms GTHAN factor
Rule 124   factorOperation -> idioms LTHAN factor
Rule 125   factorOperation -> idioms EQUAL factor
Rule 126   factorOperation -> idioms DIFF factor
Rule 127   idioms -> auction
Rule 128   idioms -> idiomsOperation
Rule 129   idiomsOperation -> auction OR idioms
Rule 130   idiomsOperation -> auction AND idioms
Rule 131   auction -> constant
Rule 132   auction -> otherExpression
Rule 133   auction -> identifier
Rule 134   auction -> averageFunc
Rule 135   auction -> modeFunc
Rule 136   auction -> varianceFunc
Rule 137   auction -> functionCall
Rule 138   constant -> someInt
Rule 139   constant -> someFloat
Rule 140   constant -> someChar
Rule 141   someInt -> CTE_INT
Rule 142   someFloat -> CTE_FLOAT
Rule 143   someChar -> CTE_CHAR
Rule 144   otherExpression -> LPAREN expression RPAREN
Rule 145   identifier -> identLonely
Rule 146   identifier -> identArray
Rule 147   identLonely -> ID
Rule 148   identArray -> ID LSBRACK expression RSBRACK
Rule 149   averageFunc -> AVERAGE LPAREN ID RPAREN
Rule 150   modeFunc -> MODE LPAREN ID RPAREN
Rule 151   varianceFunc -> VARIANCE LPAREN ID RPAREN
Rule 152   expressionVar -> termVar
Rule 153   expressionVar -> expressionOperationVar
Rule 154   expressionOperationVar -> termVar PLUS expressionVar
Rule 155   expressionOperationVar -> termVar MINUS expressionVar
Rule 156   termVar -> auctionVar
Rule 157   termVar -> termOperationVar
Rule 158   termOperationVar -> auctionVar TIMES termVar
Rule 159   termOperationVar -> auctionVar DIVIDE termVar
Rule 160   auctionVar -> constantVar
Rule 161   auctionVar -> otherExpressionVar
Rule 162   constantVar -> CTE_INT
Rule 163   otherExpressionVar -> LPAREN expressionVar RPAREN

Terminals, with rules where they appear

AND                  : 130
ASSIGN               : 79 106
AVERAGE              : 149
CHAR                 : 28 62
COLON                : 12 13 14 19 38 39 40 45 49 50 51 56
COMA                 : 13 14 16 17 39 40 42 43 50 51 53 54 85 86 93 94 95 96 101 102 111
CTE_CHAR             : 143
CTE_FLOAT            : 142
CTE_INT              : 141 162
CTE_STRING           : 92
DIFF                 : 126
DIVIDE               : 120 159
DO                   : 106
ELSE                 : 84
EQUAL                : 125
FLOAT                : 27 61
FOR                  : 106
FUNCTION             : 23 24 25
GTHAN                : 123
ID                   : 1 2 3 23 24 25 59 85 85 86 86 107 147 148 149 150 151
IF                   : 83 84
INT                  : 26 60
LBRACK               : 64
LPAREN               : 23 24 25 63 80 83 84 85 86 87 97 105 107 144 149 150 151 163
LSBRACK              : 59 148
LTHAN                : 124
MAIN                 : 63
MINUS                : 116 155
MODE                 : 150
OR                   : 129
PLOTXY               : 85
PLUS                 : 115 154
PROGRAM              : 1 2 3
RBRACK               : 65 68
READ                 : 97
REGRESSION           : 86
RETURN               : 80
RPAREN               : 24 25 30 31 63 80 83 84 85 86 90 91 100 105 108 112 144 149 150 151 163
RSBRACK              : 59 148
SEMICOLON            : 1 2 3 12 15 18 19 38 41 44 45 55 56 70 72 73 75 76 77 78
THEN                 : 83 84
TIMES                : 119 158
TO                   : 106
VARIANCE             : 151
VARS                 : 8 34
VOID                 : 29
WHILE                : 105
WRITE                : 87
error                : 

Nonterminals, with rules where they appear

assignment           : 70
auction              : 127 129 130
auctionVar           : 156 158 159
averageFunc          : 134
block                : 32 33 63 83 84 84 105 106
blockAux             : 64 69
blockFinal           : 67
blockRecursive       : 66
callAux              : 107 111
callFinal            : 110
callRecursive        : 109
conditional          : 103
constant             : 131
constantVar          : 160
expression           : 79 80 83 84 91 94 96 105 106 106 108 111 115 116 144 148
expressionOperation  : 114
expressionOperationVar : 153
expressionVar        : 59 154 155 163
factor               : 117 119 120 123 124 125 126
factorOperation      : 122
funcAux              : 20 22
funcVer1             : 24 30
funcVer2             : 25 31
functionCall         : 75 137
functions            : 4 6 22
identArray           : 146
identArrayVar        : 58
identLonely          : 57 145
identifier           : 38 39 40 41 42 43 44 45 55 79 100 101 102 106 133
identifierVar        : 12 13 14 15 16 17 18 19 49 50 51 52 53 54 56
idioms               : 121 123 124 125 126 129 130
idiomsOperation      : 128
ifStatement          : 71
longCondition        : 82
loop                 : 74
modeFunc             : 135
newParam             : 48
newType              : 11
newTypeLoc           : 37
nonconditional       : 104
oneParam             : 46
oneVar               : 9
oneVarLoc            : 35
otherExpression      : 132
otherExpressionVar   : 161
parameters           : 30 31 55 56
plotXYFunc           : 78
principal            : 4 5 6 7
program              : 0
programVer1          : 1
programVer2          : 2
programVer3          : 3
reading              : 73
readingAux           : 97
readingFinal         : 98 102
readingRecursive     : 99 101
recursiveFunc        : 21
regressionFunc       : 77
returnStatement      : 76
sameType             : 10
sameTypeFinal        : 13 17 54
sameTypeFinalLoc     : 39 43
sameTypeLoc          : 36
sameTypeParam        : 47
sameTypeParamFinal   : 50
sameTypeParamRecursive : 51 53
sameTypeRecursive    : 14 16
sameTypeRecursiveLoc : 40 42
shortCondition       : 81
someChar             : 140
someFloat            : 139
someInt              : 138
statute              : 65 69
term                 : 113 115 116 119 120
termOperation        : 118
termOperationVar     : 157
termVar              : 152 154 155 158 159
typeFunction         : 23 24 25
typeVar              : 12 13 14 19 38 39 40 45 49 50 51 56
varAux               : 8 18 19
varAuxLoc            : 34 44 45
variables            : 4 5
variablesLoc         : 32
varianceFunc         : 136
withParameters       : 23
writing              : 72
writingAux           : 87
writingFinal         : 88 93 94
writingRecursive     : 89 95 96
writingString        : 90 93 95

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON programVer1
    (2) program -> . PROGRAM ID SEMICOLON programVer2
    (3) program -> . PROGRAM ID SEMICOLON programVer3

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON programVer1
    (2) program -> PROGRAM . ID SEMICOLON programVer2
    (3) program -> PROGRAM . ID SEMICOLON programVer3

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON programVer1
    (2) program -> PROGRAM ID . SEMICOLON programVer2
    (3) program -> PROGRAM ID . SEMICOLON programVer3

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . programVer1
    (2) program -> PROGRAM ID SEMICOLON . programVer2
    (3) program -> PROGRAM ID SEMICOLON . programVer3
    (4) programVer1 -> . variables functions principal
    (5) programVer2 -> . variables principal
    (6) programVer2 -> . functions principal
    (7) programVer3 -> . principal
    (8) variables -> . VARS varAux
    (20) functions -> . funcAux
    (21) functions -> . recursiveFunc
    (63) principal -> . MAIN LPAREN RPAREN block
    (23) funcAux -> . FUNCTION typeFunction ID LPAREN withParameters
    (24) funcAux -> . FUNCTION typeFunction ID LPAREN RPAREN funcVer1
    (25) funcAux -> . FUNCTION typeFunction ID LPAREN RPAREN funcVer2
    (22) recursiveFunc -> . funcAux functions

    VARS            shift and go to state 11
    MAIN            shift and go to state 14
    FUNCTION        shift and go to state 15

    programVer1                    shift and go to state 5
    programVer2                    shift and go to state 6
    programVer3                    shift and go to state 7
    variables                      shift and go to state 8
    functions                      shift and go to state 9
    principal                      shift and go to state 10
    funcAux                        shift and go to state 12
    recursiveFunc                  shift and go to state 13

state 5

    (1) program -> PROGRAM ID SEMICOLON programVer1 .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON programVer1 .)


state 6

    (2) program -> PROGRAM ID SEMICOLON programVer2 .

    $end            reduce using rule 2 (program -> PROGRAM ID SEMICOLON programVer2 .)


state 7

    (3) program -> PROGRAM ID SEMICOLON programVer3 .

    $end            reduce using rule 3 (program -> PROGRAM ID SEMICOLON programVer3 .)


state 8

    (4) programVer1 -> variables . functions principal
    (5) programVer2 -> variables . principal
    (20) functions -> . funcAux
    (21) functions -> . recursiveFunc
    (63) principal -> . MAIN LPAREN RPAREN block
    (23) funcAux -> . FUNCTION typeFunction ID LPAREN withParameters
    (24) funcAux -> . FUNCTION typeFunction ID LPAREN RPAREN funcVer1
    (25) funcAux -> . FUNCTION typeFunction ID LPAREN RPAREN funcVer2
    (22) recursiveFunc -> . funcAux functions

    MAIN            shift and go to state 14
    FUNCTION        shift and go to state 15

    functions                      shift and go to state 16
    principal                      shift and go to state 17
    funcAux                        shift and go to state 12
    recursiveFunc                  shift and go to state 13

state 9

    (6) programVer2 -> functions . principal
    (63) principal -> . MAIN LPAREN RPAREN block

    MAIN            shift and go to state 14

    principal                      shift and go to state 18

state 10

    (7) programVer3 -> principal .

    $end            reduce using rule 7 (programVer3 -> principal .)


state 11

    (8) variables -> VARS . varAux
    (9) varAux -> . oneVar
    (10) varAux -> . sameType
    (11) varAux -> . newType
    (12) oneVar -> . typeVar COLON identifierVar SEMICOLON
    (13) sameType -> . typeVar COLON identifierVar COMA sameTypeFinal
    (14) sameType -> . typeVar COLON identifierVar COMA sameTypeRecursive
    (19) newType -> . typeVar COLON identifierVar SEMICOLON varAux
    (60) typeVar -> . INT
    (61) typeVar -> . FLOAT
    (62) typeVar -> . CHAR

    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    varAux                         shift and go to state 19
    oneVar                         shift and go to state 20
    sameType                       shift and go to state 21
    newType                        shift and go to state 22
    typeVar                        shift and go to state 23

state 12

    (20) functions -> funcAux .
    (22) recursiveFunc -> funcAux . functions
    (20) functions -> . funcAux
    (21) functions -> . recursiveFunc
    (23) funcAux -> . FUNCTION typeFunction ID LPAREN withParameters
    (24) funcAux -> . FUNCTION typeFunction ID LPAREN RPAREN funcVer1
    (25) funcAux -> . FUNCTION typeFunction ID LPAREN RPAREN funcVer2
    (22) recursiveFunc -> . funcAux functions

    MAIN            reduce using rule 20 (functions -> funcAux .)
    FUNCTION        shift and go to state 15

    funcAux                        shift and go to state 12
    functions                      shift and go to state 27
    recursiveFunc                  shift and go to state 13

state 13

    (21) functions -> recursiveFunc .

    MAIN            reduce using rule 21 (functions -> recursiveFunc .)


state 14

    (63) principal -> MAIN . LPAREN RPAREN block

    LPAREN          shift and go to state 28


state 15

    (23) funcAux -> FUNCTION . typeFunction ID LPAREN withParameters
    (24) funcAux -> FUNCTION . typeFunction ID LPAREN RPAREN funcVer1
    (25) funcAux -> FUNCTION . typeFunction ID LPAREN RPAREN funcVer2
    (26) typeFunction -> . INT
    (27) typeFunction -> . FLOAT
    (28) typeFunction -> . CHAR
    (29) typeFunction -> . VOID

    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    CHAR            shift and go to state 32
    VOID            shift and go to state 33

    typeFunction                   shift and go to state 29

state 16

    (4) programVer1 -> variables functions . principal
    (63) principal -> . MAIN LPAREN RPAREN block

    MAIN            shift and go to state 14

    principal                      shift and go to state 34

state 17

    (5) programVer2 -> variables principal .

    $end            reduce using rule 5 (programVer2 -> variables principal .)


state 18

    (6) programVer2 -> functions principal .

    $end            reduce using rule 6 (programVer2 -> functions principal .)


state 19

    (8) variables -> VARS varAux .

    MAIN            reduce using rule 8 (variables -> VARS varAux .)
    FUNCTION        reduce using rule 8 (variables -> VARS varAux .)


state 20

    (9) varAux -> oneVar .

    MAIN            reduce using rule 9 (varAux -> oneVar .)
    FUNCTION        reduce using rule 9 (varAux -> oneVar .)


state 21

    (10) varAux -> sameType .

    MAIN            reduce using rule 10 (varAux -> sameType .)
    FUNCTION        reduce using rule 10 (varAux -> sameType .)


state 22

    (11) varAux -> newType .

    MAIN            reduce using rule 11 (varAux -> newType .)
    FUNCTION        reduce using rule 11 (varAux -> newType .)


state 23

    (12) oneVar -> typeVar . COLON identifierVar SEMICOLON
    (13) sameType -> typeVar . COLON identifierVar COMA sameTypeFinal
    (14) sameType -> typeVar . COLON identifierVar COMA sameTypeRecursive
    (19) newType -> typeVar . COLON identifierVar SEMICOLON varAux

    COLON           shift and go to state 35


state 24

    (60) typeVar -> INT .

    COLON           reduce using rule 60 (typeVar -> INT .)


state 25

    (61) typeVar -> FLOAT .

    COLON           reduce using rule 61 (typeVar -> FLOAT .)


state 26

    (62) typeVar -> CHAR .

    COLON           reduce using rule 62 (typeVar -> CHAR .)


state 27

    (22) recursiveFunc -> funcAux functions .

    MAIN            reduce using rule 22 (recursiveFunc -> funcAux functions .)


state 28

    (63) principal -> MAIN LPAREN . RPAREN block

    RPAREN          shift and go to state 36


state 29

    (23) funcAux -> FUNCTION typeFunction . ID LPAREN withParameters
    (24) funcAux -> FUNCTION typeFunction . ID LPAREN RPAREN funcVer1
    (25) funcAux -> FUNCTION typeFunction . ID LPAREN RPAREN funcVer2

    ID              shift and go to state 37


state 30

    (26) typeFunction -> INT .

    ID              reduce using rule 26 (typeFunction -> INT .)


state 31

    (27) typeFunction -> FLOAT .

    ID              reduce using rule 27 (typeFunction -> FLOAT .)


state 32

    (28) typeFunction -> CHAR .

    ID              reduce using rule 28 (typeFunction -> CHAR .)


state 33

    (29) typeFunction -> VOID .

    ID              reduce using rule 29 (typeFunction -> VOID .)


state 34

    (4) programVer1 -> variables functions principal .

    $end            reduce using rule 4 (programVer1 -> variables functions principal .)


state 35

    (12) oneVar -> typeVar COLON . identifierVar SEMICOLON
    (13) sameType -> typeVar COLON . identifierVar COMA sameTypeFinal
    (14) sameType -> typeVar COLON . identifierVar COMA sameTypeRecursive
    (19) newType -> typeVar COLON . identifierVar SEMICOLON varAux
    (57) identifierVar -> . identLonely
    (58) identifierVar -> . identArrayVar
    (147) identLonely -> . ID
    (59) identArrayVar -> . ID LSBRACK expressionVar RSBRACK

    ID              shift and go to state 41

    identifierVar                  shift and go to state 38
    identLonely                    shift and go to state 39
    identArrayVar                  shift and go to state 40

state 36

    (63) principal -> MAIN LPAREN RPAREN . block
    (64) block -> . LBRACK blockAux

    LBRACK          shift and go to state 43

    block                          shift and go to state 42

state 37

    (23) funcAux -> FUNCTION typeFunction ID . LPAREN withParameters
    (24) funcAux -> FUNCTION typeFunction ID . LPAREN RPAREN funcVer1
    (25) funcAux -> FUNCTION typeFunction ID . LPAREN RPAREN funcVer2

    LPAREN          shift and go to state 44


state 38

    (12) oneVar -> typeVar COLON identifierVar . SEMICOLON
    (13) sameType -> typeVar COLON identifierVar . COMA sameTypeFinal
    (14) sameType -> typeVar COLON identifierVar . COMA sameTypeRecursive
    (19) newType -> typeVar COLON identifierVar . SEMICOLON varAux

    SEMICOLON       shift and go to state 45
    COMA            shift and go to state 46


state 39

    (57) identifierVar -> identLonely .

    SEMICOLON       reduce using rule 57 (identifierVar -> identLonely .)
    COMA            reduce using rule 57 (identifierVar -> identLonely .)
    RPAREN          reduce using rule 57 (identifierVar -> identLonely .)


state 40

    (58) identifierVar -> identArrayVar .

    SEMICOLON       reduce using rule 58 (identifierVar -> identArrayVar .)
    COMA            reduce using rule 58 (identifierVar -> identArrayVar .)
    RPAREN          reduce using rule 58 (identifierVar -> identArrayVar .)


state 41

    (147) identLonely -> ID .
    (59) identArrayVar -> ID . LSBRACK expressionVar RSBRACK

    SEMICOLON       reduce using rule 147 (identLonely -> ID .)
    COMA            reduce using rule 147 (identLonely -> ID .)
    RPAREN          reduce using rule 147 (identLonely -> ID .)
    LSBRACK         shift and go to state 47


state 42

    (63) principal -> MAIN LPAREN RPAREN block .

    $end            reduce using rule 63 (principal -> MAIN LPAREN RPAREN block .)


state 43

    (64) block -> LBRACK . blockAux
    (65) blockAux -> . statute RBRACK
    (66) blockAux -> . blockRecursive
    (67) blockAux -> . blockFinal
    (70) statute -> . assignment SEMICOLON
    (71) statute -> . ifStatement
    (72) statute -> . writing SEMICOLON
    (73) statute -> . reading SEMICOLON
    (74) statute -> . loop
    (75) statute -> . functionCall SEMICOLON
    (76) statute -> . returnStatement SEMICOLON
    (77) statute -> . regressionFunc SEMICOLON
    (78) statute -> . plotXYFunc SEMICOLON
    (69) blockRecursive -> . statute blockAux
    (68) blockFinal -> . RBRACK
    (79) assignment -> . identifier ASSIGN expression
    (81) ifStatement -> . shortCondition
    (82) ifStatement -> . longCondition
    (87) writing -> . WRITE LPAREN writingAux
    (97) reading -> . READ LPAREN readingAux
    (103) loop -> . conditional
    (104) loop -> . nonconditional
    (107) functionCall -> . ID LPAREN callAux
    (80) returnStatement -> . RETURN LPAREN expression RPAREN
    (86) regressionFunc -> . REGRESSION LPAREN ID COMA ID RPAREN
    (85) plotXYFunc -> . PLOTXY LPAREN ID COMA ID RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (83) shortCondition -> . IF LPAREN expression RPAREN THEN block
    (84) longCondition -> . IF LPAREN expression RPAREN THEN block ELSE block
    (105) conditional -> . WHILE LPAREN expression RPAREN block
    (106) nonconditional -> . FOR identifier ASSIGN expression TO expression DO block
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    RBRACK          shift and go to state 50
    WRITE           shift and go to state 65
    READ            shift and go to state 66
    ID              shift and go to state 69
    RETURN          shift and go to state 70
    REGRESSION      shift and go to state 71
    PLOTXY          shift and go to state 72
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FOR             shift and go to state 77

    blockAux                       shift and go to state 48
    statute                        shift and go to state 49
    blockRecursive                 shift and go to state 51
    blockFinal                     shift and go to state 52
    assignment                     shift and go to state 53
    ifStatement                    shift and go to state 54
    writing                        shift and go to state 55
    reading                        shift and go to state 56
    loop                           shift and go to state 57
    functionCall                   shift and go to state 58
    returnStatement                shift and go to state 59
    regressionFunc                 shift and go to state 60
    plotXYFunc                     shift and go to state 61
    identifier                     shift and go to state 62
    shortCondition                 shift and go to state 63
    longCondition                  shift and go to state 64
    conditional                    shift and go to state 67
    nonconditional                 shift and go to state 68
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 44

    (23) funcAux -> FUNCTION typeFunction ID LPAREN . withParameters
    (24) funcAux -> FUNCTION typeFunction ID LPAREN . RPAREN funcVer1
    (25) funcAux -> FUNCTION typeFunction ID LPAREN . RPAREN funcVer2
    (30) withParameters -> . parameters RPAREN funcVer1
    (31) withParameters -> . parameters RPAREN funcVer2
    (46) parameters -> . oneParam
    (47) parameters -> . sameTypeParam
    (48) parameters -> . newParam
    (49) oneParam -> . typeVar COLON identifierVar
    (50) sameTypeParam -> . typeVar COLON identifierVar COMA sameTypeParamFinal
    (51) sameTypeParam -> . typeVar COLON identifierVar COMA sameTypeParamRecursive
    (56) newParam -> . typeVar COLON identifierVar SEMICOLON parameters
    (60) typeVar -> . INT
    (61) typeVar -> . FLOAT
    (62) typeVar -> . CHAR

    RPAREN          shift and go to state 79
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    withParameters                 shift and go to state 78
    parameters                     shift and go to state 80
    oneParam                       shift and go to state 81
    sameTypeParam                  shift and go to state 82
    newParam                       shift and go to state 83
    typeVar                        shift and go to state 84

state 45

    (12) oneVar -> typeVar COLON identifierVar SEMICOLON .
    (19) newType -> typeVar COLON identifierVar SEMICOLON . varAux
    (9) varAux -> . oneVar
    (10) varAux -> . sameType
    (11) varAux -> . newType
    (12) oneVar -> . typeVar COLON identifierVar SEMICOLON
    (13) sameType -> . typeVar COLON identifierVar COMA sameTypeFinal
    (14) sameType -> . typeVar COLON identifierVar COMA sameTypeRecursive
    (19) newType -> . typeVar COLON identifierVar SEMICOLON varAux
    (60) typeVar -> . INT
    (61) typeVar -> . FLOAT
    (62) typeVar -> . CHAR

    MAIN            reduce using rule 12 (oneVar -> typeVar COLON identifierVar SEMICOLON .)
    FUNCTION        reduce using rule 12 (oneVar -> typeVar COLON identifierVar SEMICOLON .)
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    typeVar                        shift and go to state 23
    varAux                         shift and go to state 85
    oneVar                         shift and go to state 20
    sameType                       shift and go to state 21
    newType                        shift and go to state 22

state 46

    (13) sameType -> typeVar COLON identifierVar COMA . sameTypeFinal
    (14) sameType -> typeVar COLON identifierVar COMA . sameTypeRecursive
    (15) sameTypeFinal -> . identifierVar SEMICOLON
    (16) sameTypeRecursive -> . identifierVar COMA sameTypeRecursive
    (17) sameTypeRecursive -> . identifierVar COMA sameTypeFinal
    (18) sameTypeRecursive -> . identifierVar SEMICOLON varAux
    (57) identifierVar -> . identLonely
    (58) identifierVar -> . identArrayVar
    (147) identLonely -> . ID
    (59) identArrayVar -> . ID LSBRACK expressionVar RSBRACK

    ID              shift and go to state 41

    identifierVar                  shift and go to state 86
    sameTypeFinal                  shift and go to state 87
    sameTypeRecursive              shift and go to state 88
    identLonely                    shift and go to state 39
    identArrayVar                  shift and go to state 40

state 47

    (59) identArrayVar -> ID LSBRACK . expressionVar RSBRACK
    (152) expressionVar -> . termVar
    (153) expressionVar -> . expressionOperationVar
    (156) termVar -> . auctionVar
    (157) termVar -> . termOperationVar
    (154) expressionOperationVar -> . termVar PLUS expressionVar
    (155) expressionOperationVar -> . termVar MINUS expressionVar
    (160) auctionVar -> . constantVar
    (161) auctionVar -> . otherExpressionVar
    (158) termOperationVar -> . auctionVar TIMES termVar
    (159) termOperationVar -> . auctionVar DIVIDE termVar
    (162) constantVar -> . CTE_INT
    (163) otherExpressionVar -> . LPAREN expressionVar RPAREN

    CTE_INT         shift and go to state 96
    LPAREN          shift and go to state 97

    expressionVar                  shift and go to state 89
    termVar                        shift and go to state 90
    expressionOperationVar         shift and go to state 91
    auctionVar                     shift and go to state 92
    termOperationVar               shift and go to state 93
    constantVar                    shift and go to state 94
    otherExpressionVar             shift and go to state 95

state 48

    (64) block -> LBRACK blockAux .

    $end            reduce using rule 64 (block -> LBRACK blockAux .)
    FUNCTION        reduce using rule 64 (block -> LBRACK blockAux .)
    MAIN            reduce using rule 64 (block -> LBRACK blockAux .)
    RBRACK          reduce using rule 64 (block -> LBRACK blockAux .)
    WRITE           reduce using rule 64 (block -> LBRACK blockAux .)
    READ            reduce using rule 64 (block -> LBRACK blockAux .)
    ID              reduce using rule 64 (block -> LBRACK blockAux .)
    RETURN          reduce using rule 64 (block -> LBRACK blockAux .)
    REGRESSION      reduce using rule 64 (block -> LBRACK blockAux .)
    PLOTXY          reduce using rule 64 (block -> LBRACK blockAux .)
    IF              reduce using rule 64 (block -> LBRACK blockAux .)
    WHILE           reduce using rule 64 (block -> LBRACK blockAux .)
    FOR             reduce using rule 64 (block -> LBRACK blockAux .)
    ELSE            reduce using rule 64 (block -> LBRACK blockAux .)


state 49

    (65) blockAux -> statute . RBRACK
    (69) blockRecursive -> statute . blockAux
    (65) blockAux -> . statute RBRACK
    (66) blockAux -> . blockRecursive
    (67) blockAux -> . blockFinal
    (70) statute -> . assignment SEMICOLON
    (71) statute -> . ifStatement
    (72) statute -> . writing SEMICOLON
    (73) statute -> . reading SEMICOLON
    (74) statute -> . loop
    (75) statute -> . functionCall SEMICOLON
    (76) statute -> . returnStatement SEMICOLON
    (77) statute -> . regressionFunc SEMICOLON
    (78) statute -> . plotXYFunc SEMICOLON
    (69) blockRecursive -> . statute blockAux
    (68) blockFinal -> . RBRACK
    (79) assignment -> . identifier ASSIGN expression
    (81) ifStatement -> . shortCondition
    (82) ifStatement -> . longCondition
    (87) writing -> . WRITE LPAREN writingAux
    (97) reading -> . READ LPAREN readingAux
    (103) loop -> . conditional
    (104) loop -> . nonconditional
    (107) functionCall -> . ID LPAREN callAux
    (80) returnStatement -> . RETURN LPAREN expression RPAREN
    (86) regressionFunc -> . REGRESSION LPAREN ID COMA ID RPAREN
    (85) plotXYFunc -> . PLOTXY LPAREN ID COMA ID RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (83) shortCondition -> . IF LPAREN expression RPAREN THEN block
    (84) longCondition -> . IF LPAREN expression RPAREN THEN block ELSE block
    (105) conditional -> . WHILE LPAREN expression RPAREN block
    (106) nonconditional -> . FOR identifier ASSIGN expression TO expression DO block
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    RBRACK          shift and go to state 98
    WRITE           shift and go to state 65
    READ            shift and go to state 66
    ID              shift and go to state 69
    RETURN          shift and go to state 70
    REGRESSION      shift and go to state 71
    PLOTXY          shift and go to state 72
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FOR             shift and go to state 77

    statute                        shift and go to state 49
    blockAux                       shift and go to state 99
    blockRecursive                 shift and go to state 51
    blockFinal                     shift and go to state 52
    assignment                     shift and go to state 53
    ifStatement                    shift and go to state 54
    writing                        shift and go to state 55
    reading                        shift and go to state 56
    loop                           shift and go to state 57
    functionCall                   shift and go to state 58
    returnStatement                shift and go to state 59
    regressionFunc                 shift and go to state 60
    plotXYFunc                     shift and go to state 61
    identifier                     shift and go to state 62
    shortCondition                 shift and go to state 63
    longCondition                  shift and go to state 64
    conditional                    shift and go to state 67
    nonconditional                 shift and go to state 68
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 50

    (68) blockFinal -> RBRACK .

    $end            reduce using rule 68 (blockFinal -> RBRACK .)
    FUNCTION        reduce using rule 68 (blockFinal -> RBRACK .)
    MAIN            reduce using rule 68 (blockFinal -> RBRACK .)
    RBRACK          reduce using rule 68 (blockFinal -> RBRACK .)
    WRITE           reduce using rule 68 (blockFinal -> RBRACK .)
    READ            reduce using rule 68 (blockFinal -> RBRACK .)
    ID              reduce using rule 68 (blockFinal -> RBRACK .)
    RETURN          reduce using rule 68 (blockFinal -> RBRACK .)
    REGRESSION      reduce using rule 68 (blockFinal -> RBRACK .)
    PLOTXY          reduce using rule 68 (blockFinal -> RBRACK .)
    IF              reduce using rule 68 (blockFinal -> RBRACK .)
    WHILE           reduce using rule 68 (blockFinal -> RBRACK .)
    FOR             reduce using rule 68 (blockFinal -> RBRACK .)
    ELSE            reduce using rule 68 (blockFinal -> RBRACK .)


state 51

    (66) blockAux -> blockRecursive .

    $end            reduce using rule 66 (blockAux -> blockRecursive .)
    FUNCTION        reduce using rule 66 (blockAux -> blockRecursive .)
    MAIN            reduce using rule 66 (blockAux -> blockRecursive .)
    RBRACK          reduce using rule 66 (blockAux -> blockRecursive .)
    WRITE           reduce using rule 66 (blockAux -> blockRecursive .)
    READ            reduce using rule 66 (blockAux -> blockRecursive .)
    ID              reduce using rule 66 (blockAux -> blockRecursive .)
    RETURN          reduce using rule 66 (blockAux -> blockRecursive .)
    REGRESSION      reduce using rule 66 (blockAux -> blockRecursive .)
    PLOTXY          reduce using rule 66 (blockAux -> blockRecursive .)
    IF              reduce using rule 66 (blockAux -> blockRecursive .)
    WHILE           reduce using rule 66 (blockAux -> blockRecursive .)
    FOR             reduce using rule 66 (blockAux -> blockRecursive .)
    ELSE            reduce using rule 66 (blockAux -> blockRecursive .)


state 52

    (67) blockAux -> blockFinal .

    $end            reduce using rule 67 (blockAux -> blockFinal .)
    FUNCTION        reduce using rule 67 (blockAux -> blockFinal .)
    MAIN            reduce using rule 67 (blockAux -> blockFinal .)
    RBRACK          reduce using rule 67 (blockAux -> blockFinal .)
    WRITE           reduce using rule 67 (blockAux -> blockFinal .)
    READ            reduce using rule 67 (blockAux -> blockFinal .)
    ID              reduce using rule 67 (blockAux -> blockFinal .)
    RETURN          reduce using rule 67 (blockAux -> blockFinal .)
    REGRESSION      reduce using rule 67 (blockAux -> blockFinal .)
    PLOTXY          reduce using rule 67 (blockAux -> blockFinal .)
    IF              reduce using rule 67 (blockAux -> blockFinal .)
    WHILE           reduce using rule 67 (blockAux -> blockFinal .)
    FOR             reduce using rule 67 (blockAux -> blockFinal .)
    ELSE            reduce using rule 67 (blockAux -> blockFinal .)


state 53

    (70) statute -> assignment . SEMICOLON

    SEMICOLON       shift and go to state 100


state 54

    (71) statute -> ifStatement .

    RBRACK          reduce using rule 71 (statute -> ifStatement .)
    WRITE           reduce using rule 71 (statute -> ifStatement .)
    READ            reduce using rule 71 (statute -> ifStatement .)
    ID              reduce using rule 71 (statute -> ifStatement .)
    RETURN          reduce using rule 71 (statute -> ifStatement .)
    REGRESSION      reduce using rule 71 (statute -> ifStatement .)
    PLOTXY          reduce using rule 71 (statute -> ifStatement .)
    IF              reduce using rule 71 (statute -> ifStatement .)
    WHILE           reduce using rule 71 (statute -> ifStatement .)
    FOR             reduce using rule 71 (statute -> ifStatement .)


state 55

    (72) statute -> writing . SEMICOLON

    SEMICOLON       shift and go to state 101


state 56

    (73) statute -> reading . SEMICOLON

    SEMICOLON       shift and go to state 102


state 57

    (74) statute -> loop .

    RBRACK          reduce using rule 74 (statute -> loop .)
    WRITE           reduce using rule 74 (statute -> loop .)
    READ            reduce using rule 74 (statute -> loop .)
    ID              reduce using rule 74 (statute -> loop .)
    RETURN          reduce using rule 74 (statute -> loop .)
    REGRESSION      reduce using rule 74 (statute -> loop .)
    PLOTXY          reduce using rule 74 (statute -> loop .)
    IF              reduce using rule 74 (statute -> loop .)
    WHILE           reduce using rule 74 (statute -> loop .)
    FOR             reduce using rule 74 (statute -> loop .)


state 58

    (75) statute -> functionCall . SEMICOLON

    SEMICOLON       shift and go to state 103


state 59

    (76) statute -> returnStatement . SEMICOLON

    SEMICOLON       shift and go to state 104


state 60

    (77) statute -> regressionFunc . SEMICOLON

    SEMICOLON       shift and go to state 105


state 61

    (78) statute -> plotXYFunc . SEMICOLON

    SEMICOLON       shift and go to state 106


state 62

    (79) assignment -> identifier . ASSIGN expression

    ASSIGN          shift and go to state 107


state 63

    (81) ifStatement -> shortCondition .

    RBRACK          reduce using rule 81 (ifStatement -> shortCondition .)
    WRITE           reduce using rule 81 (ifStatement -> shortCondition .)
    READ            reduce using rule 81 (ifStatement -> shortCondition .)
    ID              reduce using rule 81 (ifStatement -> shortCondition .)
    RETURN          reduce using rule 81 (ifStatement -> shortCondition .)
    REGRESSION      reduce using rule 81 (ifStatement -> shortCondition .)
    PLOTXY          reduce using rule 81 (ifStatement -> shortCondition .)
    IF              reduce using rule 81 (ifStatement -> shortCondition .)
    WHILE           reduce using rule 81 (ifStatement -> shortCondition .)
    FOR             reduce using rule 81 (ifStatement -> shortCondition .)


state 64

    (82) ifStatement -> longCondition .

    RBRACK          reduce using rule 82 (ifStatement -> longCondition .)
    WRITE           reduce using rule 82 (ifStatement -> longCondition .)
    READ            reduce using rule 82 (ifStatement -> longCondition .)
    ID              reduce using rule 82 (ifStatement -> longCondition .)
    RETURN          reduce using rule 82 (ifStatement -> longCondition .)
    REGRESSION      reduce using rule 82 (ifStatement -> longCondition .)
    PLOTXY          reduce using rule 82 (ifStatement -> longCondition .)
    IF              reduce using rule 82 (ifStatement -> longCondition .)
    WHILE           reduce using rule 82 (ifStatement -> longCondition .)
    FOR             reduce using rule 82 (ifStatement -> longCondition .)


state 65

    (87) writing -> WRITE . LPAREN writingAux

    LPAREN          shift and go to state 108


state 66

    (97) reading -> READ . LPAREN readingAux

    LPAREN          shift and go to state 109


state 67

    (103) loop -> conditional .

    RBRACK          reduce using rule 103 (loop -> conditional .)
    WRITE           reduce using rule 103 (loop -> conditional .)
    READ            reduce using rule 103 (loop -> conditional .)
    ID              reduce using rule 103 (loop -> conditional .)
    RETURN          reduce using rule 103 (loop -> conditional .)
    REGRESSION      reduce using rule 103 (loop -> conditional .)
    PLOTXY          reduce using rule 103 (loop -> conditional .)
    IF              reduce using rule 103 (loop -> conditional .)
    WHILE           reduce using rule 103 (loop -> conditional .)
    FOR             reduce using rule 103 (loop -> conditional .)


state 68

    (104) loop -> nonconditional .

    RBRACK          reduce using rule 104 (loop -> nonconditional .)
    WRITE           reduce using rule 104 (loop -> nonconditional .)
    READ            reduce using rule 104 (loop -> nonconditional .)
    ID              reduce using rule 104 (loop -> nonconditional .)
    RETURN          reduce using rule 104 (loop -> nonconditional .)
    REGRESSION      reduce using rule 104 (loop -> nonconditional .)
    PLOTXY          reduce using rule 104 (loop -> nonconditional .)
    IF              reduce using rule 104 (loop -> nonconditional .)
    WHILE           reduce using rule 104 (loop -> nonconditional .)
    FOR             reduce using rule 104 (loop -> nonconditional .)


state 69

    (107) functionCall -> ID . LPAREN callAux
    (147) identLonely -> ID .
    (148) identArray -> ID . LSBRACK expression RSBRACK

    LPAREN          shift and go to state 110
    ASSIGN          reduce using rule 147 (identLonely -> ID .)
    OR              reduce using rule 147 (identLonely -> ID .)
    AND             reduce using rule 147 (identLonely -> ID .)
    GTHAN           reduce using rule 147 (identLonely -> ID .)
    LTHAN           reduce using rule 147 (identLonely -> ID .)
    EQUAL           reduce using rule 147 (identLonely -> ID .)
    DIFF            reduce using rule 147 (identLonely -> ID .)
    TIMES           reduce using rule 147 (identLonely -> ID .)
    DIVIDE          reduce using rule 147 (identLonely -> ID .)
    PLUS            reduce using rule 147 (identLonely -> ID .)
    MINUS           reduce using rule 147 (identLonely -> ID .)
    SEMICOLON       reduce using rule 147 (identLonely -> ID .)
    RPAREN          reduce using rule 147 (identLonely -> ID .)
    COMA            reduce using rule 147 (identLonely -> ID .)
    RSBRACK         reduce using rule 147 (identLonely -> ID .)
    TO              reduce using rule 147 (identLonely -> ID .)
    DO              reduce using rule 147 (identLonely -> ID .)
    LSBRACK         shift and go to state 111


state 70

    (80) returnStatement -> RETURN . LPAREN expression RPAREN

    LPAREN          shift and go to state 112


state 71

    (86) regressionFunc -> REGRESSION . LPAREN ID COMA ID RPAREN

    LPAREN          shift and go to state 113


state 72

    (85) plotXYFunc -> PLOTXY . LPAREN ID COMA ID RPAREN

    LPAREN          shift and go to state 114


state 73

    (145) identifier -> identLonely .

    ASSIGN          reduce using rule 145 (identifier -> identLonely .)
    OR              reduce using rule 145 (identifier -> identLonely .)
    AND             reduce using rule 145 (identifier -> identLonely .)
    GTHAN           reduce using rule 145 (identifier -> identLonely .)
    LTHAN           reduce using rule 145 (identifier -> identLonely .)
    EQUAL           reduce using rule 145 (identifier -> identLonely .)
    DIFF            reduce using rule 145 (identifier -> identLonely .)
    TIMES           reduce using rule 145 (identifier -> identLonely .)
    DIVIDE          reduce using rule 145 (identifier -> identLonely .)
    PLUS            reduce using rule 145 (identifier -> identLonely .)
    MINUS           reduce using rule 145 (identifier -> identLonely .)
    SEMICOLON       reduce using rule 145 (identifier -> identLonely .)
    RPAREN          reduce using rule 145 (identifier -> identLonely .)
    COMA            reduce using rule 145 (identifier -> identLonely .)
    RSBRACK         reduce using rule 145 (identifier -> identLonely .)
    TO              reduce using rule 145 (identifier -> identLonely .)
    DO              reduce using rule 145 (identifier -> identLonely .)


state 74

    (146) identifier -> identArray .

    ASSIGN          reduce using rule 146 (identifier -> identArray .)
    OR              reduce using rule 146 (identifier -> identArray .)
    AND             reduce using rule 146 (identifier -> identArray .)
    GTHAN           reduce using rule 146 (identifier -> identArray .)
    LTHAN           reduce using rule 146 (identifier -> identArray .)
    EQUAL           reduce using rule 146 (identifier -> identArray .)
    DIFF            reduce using rule 146 (identifier -> identArray .)
    TIMES           reduce using rule 146 (identifier -> identArray .)
    DIVIDE          reduce using rule 146 (identifier -> identArray .)
    PLUS            reduce using rule 146 (identifier -> identArray .)
    MINUS           reduce using rule 146 (identifier -> identArray .)
    SEMICOLON       reduce using rule 146 (identifier -> identArray .)
    RPAREN          reduce using rule 146 (identifier -> identArray .)
    COMA            reduce using rule 146 (identifier -> identArray .)
    RSBRACK         reduce using rule 146 (identifier -> identArray .)
    TO              reduce using rule 146 (identifier -> identArray .)
    DO              reduce using rule 146 (identifier -> identArray .)


state 75

    (83) shortCondition -> IF . LPAREN expression RPAREN THEN block
    (84) longCondition -> IF . LPAREN expression RPAREN THEN block ELSE block

    LPAREN          shift and go to state 115


state 76

    (105) conditional -> WHILE . LPAREN expression RPAREN block

    LPAREN          shift and go to state 116


state 77

    (106) nonconditional -> FOR . identifier ASSIGN expression TO expression DO block
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    ID              shift and go to state 118

    identifier                     shift and go to state 117
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 78

    (23) funcAux -> FUNCTION typeFunction ID LPAREN withParameters .

    FUNCTION        reduce using rule 23 (funcAux -> FUNCTION typeFunction ID LPAREN withParameters .)
    MAIN            reduce using rule 23 (funcAux -> FUNCTION typeFunction ID LPAREN withParameters .)


state 79

    (24) funcAux -> FUNCTION typeFunction ID LPAREN RPAREN . funcVer1
    (25) funcAux -> FUNCTION typeFunction ID LPAREN RPAREN . funcVer2
    (32) funcVer1 -> . variablesLoc block
    (33) funcVer2 -> . block
    (34) variablesLoc -> . VARS varAuxLoc
    (64) block -> . LBRACK blockAux

    VARS            shift and go to state 123
    LBRACK          shift and go to state 43

    funcVer1                       shift and go to state 119
    funcVer2                       shift and go to state 120
    variablesLoc                   shift and go to state 121
    block                          shift and go to state 122

state 80

    (30) withParameters -> parameters . RPAREN funcVer1
    (31) withParameters -> parameters . RPAREN funcVer2

    RPAREN          shift and go to state 124


state 81

    (46) parameters -> oneParam .

    RPAREN          reduce using rule 46 (parameters -> oneParam .)


state 82

    (47) parameters -> sameTypeParam .

    RPAREN          reduce using rule 47 (parameters -> sameTypeParam .)


state 83

    (48) parameters -> newParam .

    RPAREN          reduce using rule 48 (parameters -> newParam .)


state 84

    (49) oneParam -> typeVar . COLON identifierVar
    (50) sameTypeParam -> typeVar . COLON identifierVar COMA sameTypeParamFinal
    (51) sameTypeParam -> typeVar . COLON identifierVar COMA sameTypeParamRecursive
    (56) newParam -> typeVar . COLON identifierVar SEMICOLON parameters

    COLON           shift and go to state 125


state 85

    (19) newType -> typeVar COLON identifierVar SEMICOLON varAux .

    MAIN            reduce using rule 19 (newType -> typeVar COLON identifierVar SEMICOLON varAux .)
    FUNCTION        reduce using rule 19 (newType -> typeVar COLON identifierVar SEMICOLON varAux .)


state 86

    (15) sameTypeFinal -> identifierVar . SEMICOLON
    (16) sameTypeRecursive -> identifierVar . COMA sameTypeRecursive
    (17) sameTypeRecursive -> identifierVar . COMA sameTypeFinal
    (18) sameTypeRecursive -> identifierVar . SEMICOLON varAux

    SEMICOLON       shift and go to state 126
    COMA            shift and go to state 127


state 87

    (13) sameType -> typeVar COLON identifierVar COMA sameTypeFinal .

    MAIN            reduce using rule 13 (sameType -> typeVar COLON identifierVar COMA sameTypeFinal .)
    FUNCTION        reduce using rule 13 (sameType -> typeVar COLON identifierVar COMA sameTypeFinal .)


state 88

    (14) sameType -> typeVar COLON identifierVar COMA sameTypeRecursive .

    MAIN            reduce using rule 14 (sameType -> typeVar COLON identifierVar COMA sameTypeRecursive .)
    FUNCTION        reduce using rule 14 (sameType -> typeVar COLON identifierVar COMA sameTypeRecursive .)


state 89

    (59) identArrayVar -> ID LSBRACK expressionVar . RSBRACK

    RSBRACK         shift and go to state 128


state 90

    (152) expressionVar -> termVar .
    (154) expressionOperationVar -> termVar . PLUS expressionVar
    (155) expressionOperationVar -> termVar . MINUS expressionVar

    RSBRACK         reduce using rule 152 (expressionVar -> termVar .)
    RPAREN          reduce using rule 152 (expressionVar -> termVar .)
    PLUS            shift and go to state 129
    MINUS           shift and go to state 130


state 91

    (153) expressionVar -> expressionOperationVar .

    RSBRACK         reduce using rule 153 (expressionVar -> expressionOperationVar .)
    RPAREN          reduce using rule 153 (expressionVar -> expressionOperationVar .)


state 92

    (156) termVar -> auctionVar .
    (158) termOperationVar -> auctionVar . TIMES termVar
    (159) termOperationVar -> auctionVar . DIVIDE termVar

    PLUS            reduce using rule 156 (termVar -> auctionVar .)
    MINUS           reduce using rule 156 (termVar -> auctionVar .)
    RSBRACK         reduce using rule 156 (termVar -> auctionVar .)
    RPAREN          reduce using rule 156 (termVar -> auctionVar .)
    TIMES           shift and go to state 131
    DIVIDE          shift and go to state 132


state 93

    (157) termVar -> termOperationVar .

    PLUS            reduce using rule 157 (termVar -> termOperationVar .)
    MINUS           reduce using rule 157 (termVar -> termOperationVar .)
    RSBRACK         reduce using rule 157 (termVar -> termOperationVar .)
    RPAREN          reduce using rule 157 (termVar -> termOperationVar .)


state 94

    (160) auctionVar -> constantVar .

    TIMES           reduce using rule 160 (auctionVar -> constantVar .)
    DIVIDE          reduce using rule 160 (auctionVar -> constantVar .)
    PLUS            reduce using rule 160 (auctionVar -> constantVar .)
    MINUS           reduce using rule 160 (auctionVar -> constantVar .)
    RSBRACK         reduce using rule 160 (auctionVar -> constantVar .)
    RPAREN          reduce using rule 160 (auctionVar -> constantVar .)


state 95

    (161) auctionVar -> otherExpressionVar .

    TIMES           reduce using rule 161 (auctionVar -> otherExpressionVar .)
    DIVIDE          reduce using rule 161 (auctionVar -> otherExpressionVar .)
    PLUS            reduce using rule 161 (auctionVar -> otherExpressionVar .)
    MINUS           reduce using rule 161 (auctionVar -> otherExpressionVar .)
    RSBRACK         reduce using rule 161 (auctionVar -> otherExpressionVar .)
    RPAREN          reduce using rule 161 (auctionVar -> otherExpressionVar .)


state 96

    (162) constantVar -> CTE_INT .

    TIMES           reduce using rule 162 (constantVar -> CTE_INT .)
    DIVIDE          reduce using rule 162 (constantVar -> CTE_INT .)
    PLUS            reduce using rule 162 (constantVar -> CTE_INT .)
    MINUS           reduce using rule 162 (constantVar -> CTE_INT .)
    RSBRACK         reduce using rule 162 (constantVar -> CTE_INT .)
    RPAREN          reduce using rule 162 (constantVar -> CTE_INT .)


state 97

    (163) otherExpressionVar -> LPAREN . expressionVar RPAREN
    (152) expressionVar -> . termVar
    (153) expressionVar -> . expressionOperationVar
    (156) termVar -> . auctionVar
    (157) termVar -> . termOperationVar
    (154) expressionOperationVar -> . termVar PLUS expressionVar
    (155) expressionOperationVar -> . termVar MINUS expressionVar
    (160) auctionVar -> . constantVar
    (161) auctionVar -> . otherExpressionVar
    (158) termOperationVar -> . auctionVar TIMES termVar
    (159) termOperationVar -> . auctionVar DIVIDE termVar
    (162) constantVar -> . CTE_INT
    (163) otherExpressionVar -> . LPAREN expressionVar RPAREN

    CTE_INT         shift and go to state 96
    LPAREN          shift and go to state 97

    expressionVar                  shift and go to state 133
    termVar                        shift and go to state 90
    expressionOperationVar         shift and go to state 91
    auctionVar                     shift and go to state 92
    termOperationVar               shift and go to state 93
    constantVar                    shift and go to state 94
    otherExpressionVar             shift and go to state 95

state 98

    (65) blockAux -> statute RBRACK .
    (68) blockFinal -> RBRACK .

  ! reduce/reduce conflict for $end resolved using rule 65 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for FUNCTION resolved using rule 65 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for MAIN resolved using rule 65 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for RBRACK resolved using rule 65 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for WRITE resolved using rule 65 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for READ resolved using rule 65 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for ID resolved using rule 65 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for RETURN resolved using rule 65 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for REGRESSION resolved using rule 65 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for PLOTXY resolved using rule 65 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for IF resolved using rule 65 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for WHILE resolved using rule 65 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for FOR resolved using rule 65 (blockAux -> statute RBRACK .)
  ! reduce/reduce conflict for ELSE resolved using rule 65 (blockAux -> statute RBRACK .)
    $end            reduce using rule 65 (blockAux -> statute RBRACK .)
    FUNCTION        reduce using rule 65 (blockAux -> statute RBRACK .)
    MAIN            reduce using rule 65 (blockAux -> statute RBRACK .)
    RBRACK          reduce using rule 65 (blockAux -> statute RBRACK .)
    WRITE           reduce using rule 65 (blockAux -> statute RBRACK .)
    READ            reduce using rule 65 (blockAux -> statute RBRACK .)
    ID              reduce using rule 65 (blockAux -> statute RBRACK .)
    RETURN          reduce using rule 65 (blockAux -> statute RBRACK .)
    REGRESSION      reduce using rule 65 (blockAux -> statute RBRACK .)
    PLOTXY          reduce using rule 65 (blockAux -> statute RBRACK .)
    IF              reduce using rule 65 (blockAux -> statute RBRACK .)
    WHILE           reduce using rule 65 (blockAux -> statute RBRACK .)
    FOR             reduce using rule 65 (blockAux -> statute RBRACK .)
    ELSE            reduce using rule 65 (blockAux -> statute RBRACK .)

  ! $end            [ reduce using rule 68 (blockFinal -> RBRACK .) ]
  ! FUNCTION        [ reduce using rule 68 (blockFinal -> RBRACK .) ]
  ! MAIN            [ reduce using rule 68 (blockFinal -> RBRACK .) ]
  ! RBRACK          [ reduce using rule 68 (blockFinal -> RBRACK .) ]
  ! WRITE           [ reduce using rule 68 (blockFinal -> RBRACK .) ]
  ! READ            [ reduce using rule 68 (blockFinal -> RBRACK .) ]
  ! ID              [ reduce using rule 68 (blockFinal -> RBRACK .) ]
  ! RETURN          [ reduce using rule 68 (blockFinal -> RBRACK .) ]
  ! REGRESSION      [ reduce using rule 68 (blockFinal -> RBRACK .) ]
  ! PLOTXY          [ reduce using rule 68 (blockFinal -> RBRACK .) ]
  ! IF              [ reduce using rule 68 (blockFinal -> RBRACK .) ]
  ! WHILE           [ reduce using rule 68 (blockFinal -> RBRACK .) ]
  ! FOR             [ reduce using rule 68 (blockFinal -> RBRACK .) ]
  ! ELSE            [ reduce using rule 68 (blockFinal -> RBRACK .) ]


state 99

    (69) blockRecursive -> statute blockAux .

    $end            reduce using rule 69 (blockRecursive -> statute blockAux .)
    FUNCTION        reduce using rule 69 (blockRecursive -> statute blockAux .)
    MAIN            reduce using rule 69 (blockRecursive -> statute blockAux .)
    RBRACK          reduce using rule 69 (blockRecursive -> statute blockAux .)
    WRITE           reduce using rule 69 (blockRecursive -> statute blockAux .)
    READ            reduce using rule 69 (blockRecursive -> statute blockAux .)
    ID              reduce using rule 69 (blockRecursive -> statute blockAux .)
    RETURN          reduce using rule 69 (blockRecursive -> statute blockAux .)
    REGRESSION      reduce using rule 69 (blockRecursive -> statute blockAux .)
    PLOTXY          reduce using rule 69 (blockRecursive -> statute blockAux .)
    IF              reduce using rule 69 (blockRecursive -> statute blockAux .)
    WHILE           reduce using rule 69 (blockRecursive -> statute blockAux .)
    FOR             reduce using rule 69 (blockRecursive -> statute blockAux .)
    ELSE            reduce using rule 69 (blockRecursive -> statute blockAux .)


state 100

    (70) statute -> assignment SEMICOLON .

    RBRACK          reduce using rule 70 (statute -> assignment SEMICOLON .)
    WRITE           reduce using rule 70 (statute -> assignment SEMICOLON .)
    READ            reduce using rule 70 (statute -> assignment SEMICOLON .)
    ID              reduce using rule 70 (statute -> assignment SEMICOLON .)
    RETURN          reduce using rule 70 (statute -> assignment SEMICOLON .)
    REGRESSION      reduce using rule 70 (statute -> assignment SEMICOLON .)
    PLOTXY          reduce using rule 70 (statute -> assignment SEMICOLON .)
    IF              reduce using rule 70 (statute -> assignment SEMICOLON .)
    WHILE           reduce using rule 70 (statute -> assignment SEMICOLON .)
    FOR             reduce using rule 70 (statute -> assignment SEMICOLON .)


state 101

    (72) statute -> writing SEMICOLON .

    RBRACK          reduce using rule 72 (statute -> writing SEMICOLON .)
    WRITE           reduce using rule 72 (statute -> writing SEMICOLON .)
    READ            reduce using rule 72 (statute -> writing SEMICOLON .)
    ID              reduce using rule 72 (statute -> writing SEMICOLON .)
    RETURN          reduce using rule 72 (statute -> writing SEMICOLON .)
    REGRESSION      reduce using rule 72 (statute -> writing SEMICOLON .)
    PLOTXY          reduce using rule 72 (statute -> writing SEMICOLON .)
    IF              reduce using rule 72 (statute -> writing SEMICOLON .)
    WHILE           reduce using rule 72 (statute -> writing SEMICOLON .)
    FOR             reduce using rule 72 (statute -> writing SEMICOLON .)


state 102

    (73) statute -> reading SEMICOLON .

    RBRACK          reduce using rule 73 (statute -> reading SEMICOLON .)
    WRITE           reduce using rule 73 (statute -> reading SEMICOLON .)
    READ            reduce using rule 73 (statute -> reading SEMICOLON .)
    ID              reduce using rule 73 (statute -> reading SEMICOLON .)
    RETURN          reduce using rule 73 (statute -> reading SEMICOLON .)
    REGRESSION      reduce using rule 73 (statute -> reading SEMICOLON .)
    PLOTXY          reduce using rule 73 (statute -> reading SEMICOLON .)
    IF              reduce using rule 73 (statute -> reading SEMICOLON .)
    WHILE           reduce using rule 73 (statute -> reading SEMICOLON .)
    FOR             reduce using rule 73 (statute -> reading SEMICOLON .)


state 103

    (75) statute -> functionCall SEMICOLON .

    RBRACK          reduce using rule 75 (statute -> functionCall SEMICOLON .)
    WRITE           reduce using rule 75 (statute -> functionCall SEMICOLON .)
    READ            reduce using rule 75 (statute -> functionCall SEMICOLON .)
    ID              reduce using rule 75 (statute -> functionCall SEMICOLON .)
    RETURN          reduce using rule 75 (statute -> functionCall SEMICOLON .)
    REGRESSION      reduce using rule 75 (statute -> functionCall SEMICOLON .)
    PLOTXY          reduce using rule 75 (statute -> functionCall SEMICOLON .)
    IF              reduce using rule 75 (statute -> functionCall SEMICOLON .)
    WHILE           reduce using rule 75 (statute -> functionCall SEMICOLON .)
    FOR             reduce using rule 75 (statute -> functionCall SEMICOLON .)


state 104

    (76) statute -> returnStatement SEMICOLON .

    RBRACK          reduce using rule 76 (statute -> returnStatement SEMICOLON .)
    WRITE           reduce using rule 76 (statute -> returnStatement SEMICOLON .)
    READ            reduce using rule 76 (statute -> returnStatement SEMICOLON .)
    ID              reduce using rule 76 (statute -> returnStatement SEMICOLON .)
    RETURN          reduce using rule 76 (statute -> returnStatement SEMICOLON .)
    REGRESSION      reduce using rule 76 (statute -> returnStatement SEMICOLON .)
    PLOTXY          reduce using rule 76 (statute -> returnStatement SEMICOLON .)
    IF              reduce using rule 76 (statute -> returnStatement SEMICOLON .)
    WHILE           reduce using rule 76 (statute -> returnStatement SEMICOLON .)
    FOR             reduce using rule 76 (statute -> returnStatement SEMICOLON .)


state 105

    (77) statute -> regressionFunc SEMICOLON .

    RBRACK          reduce using rule 77 (statute -> regressionFunc SEMICOLON .)
    WRITE           reduce using rule 77 (statute -> regressionFunc SEMICOLON .)
    READ            reduce using rule 77 (statute -> regressionFunc SEMICOLON .)
    ID              reduce using rule 77 (statute -> regressionFunc SEMICOLON .)
    RETURN          reduce using rule 77 (statute -> regressionFunc SEMICOLON .)
    REGRESSION      reduce using rule 77 (statute -> regressionFunc SEMICOLON .)
    PLOTXY          reduce using rule 77 (statute -> regressionFunc SEMICOLON .)
    IF              reduce using rule 77 (statute -> regressionFunc SEMICOLON .)
    WHILE           reduce using rule 77 (statute -> regressionFunc SEMICOLON .)
    FOR             reduce using rule 77 (statute -> regressionFunc SEMICOLON .)


state 106

    (78) statute -> plotXYFunc SEMICOLON .

    RBRACK          reduce using rule 78 (statute -> plotXYFunc SEMICOLON .)
    WRITE           reduce using rule 78 (statute -> plotXYFunc SEMICOLON .)
    READ            reduce using rule 78 (statute -> plotXYFunc SEMICOLON .)
    ID              reduce using rule 78 (statute -> plotXYFunc SEMICOLON .)
    RETURN          reduce using rule 78 (statute -> plotXYFunc SEMICOLON .)
    REGRESSION      reduce using rule 78 (statute -> plotXYFunc SEMICOLON .)
    PLOTXY          reduce using rule 78 (statute -> plotXYFunc SEMICOLON .)
    IF              reduce using rule 78 (statute -> plotXYFunc SEMICOLON .)
    WHILE           reduce using rule 78 (statute -> plotXYFunc SEMICOLON .)
    FOR             reduce using rule 78 (statute -> plotXYFunc SEMICOLON .)


state 107

    (79) assignment -> identifier ASSIGN . expression
    (113) expression -> . term
    (114) expression -> . expressionOperation
    (117) term -> . factor
    (118) term -> . termOperation
    (115) expressionOperation -> . term PLUS expression
    (116) expressionOperation -> . term MINUS expression
    (121) factor -> . idioms
    (122) factor -> . factorOperation
    (119) termOperation -> . factor TIMES term
    (120) termOperation -> . factor DIVIDE term
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (123) factorOperation -> . idioms GTHAN factor
    (124) factorOperation -> . idioms LTHAN factor
    (125) factorOperation -> . idioms EQUAL factor
    (126) factorOperation -> . idioms DIFF factor
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 153
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_INT         shift and go to state 157
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    identifier                     shift and go to state 134
    expression                     shift and go to state 135
    term                           shift and go to state 136
    expressionOperation            shift and go to state 137
    factor                         shift and go to state 138
    termOperation                  shift and go to state 139
    idioms                         shift and go to state 140
    factorOperation                shift and go to state 141
    auction                        shift and go to state 142
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 108

    (87) writing -> WRITE LPAREN . writingAux
    (88) writingAux -> . writingFinal
    (89) writingAux -> . writingRecursive
    (90) writingFinal -> . writingString RPAREN
    (91) writingFinal -> . expression RPAREN
    (93) writingRecursive -> . writingString COMA writingFinal
    (94) writingRecursive -> . expression COMA writingFinal
    (95) writingRecursive -> . writingString COMA writingRecursive
    (96) writingRecursive -> . expression COMA writingRecursive
    (92) writingString -> . CTE_STRING
    (113) expression -> . term
    (114) expression -> . expressionOperation
    (117) term -> . factor
    (118) term -> . termOperation
    (115) expressionOperation -> . term PLUS expression
    (116) expressionOperation -> . term MINUS expression
    (121) factor -> . idioms
    (122) factor -> . factorOperation
    (119) termOperation -> . factor TIMES term
    (120) termOperation -> . factor DIVIDE term
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (123) factorOperation -> . idioms GTHAN factor
    (124) factorOperation -> . idioms LTHAN factor
    (125) factorOperation -> . idioms EQUAL factor
    (126) factorOperation -> . idioms DIFF factor
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    CTE_STRING      shift and go to state 165
    LPAREN          shift and go to state 153
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_INT         shift and go to state 157
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    writingAux                     shift and go to state 160
    writingFinal                   shift and go to state 161
    writingRecursive               shift and go to state 162
    writingString                  shift and go to state 163
    expression                     shift and go to state 164
    term                           shift and go to state 136
    expressionOperation            shift and go to state 137
    factor                         shift and go to state 138
    termOperation                  shift and go to state 139
    idioms                         shift and go to state 140
    factorOperation                shift and go to state 141
    auction                        shift and go to state 142
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    identifier                     shift and go to state 134
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 109

    (97) reading -> READ LPAREN . readingAux
    (98) readingAux -> . readingFinal
    (99) readingAux -> . readingRecursive
    (100) readingFinal -> . identifier RPAREN
    (101) readingRecursive -> . identifier COMA readingRecursive
    (102) readingRecursive -> . identifier COMA readingFinal
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    ID              shift and go to state 118

    readingAux                     shift and go to state 166
    readingFinal                   shift and go to state 167
    readingRecursive               shift and go to state 168
    identifier                     shift and go to state 169
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 110

    (107) functionCall -> ID LPAREN . callAux
    (108) callAux -> . expression RPAREN
    (109) callAux -> . callRecursive
    (110) callAux -> . callFinal
    (113) expression -> . term
    (114) expression -> . expressionOperation
    (111) callRecursive -> . expression COMA callAux
    (112) callFinal -> . RPAREN
    (117) term -> . factor
    (118) term -> . termOperation
    (115) expressionOperation -> . term PLUS expression
    (116) expressionOperation -> . term MINUS expression
    (121) factor -> . idioms
    (122) factor -> . factorOperation
    (119) termOperation -> . factor TIMES term
    (120) termOperation -> . factor DIVIDE term
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (123) factorOperation -> . idioms GTHAN factor
    (124) factorOperation -> . idioms LTHAN factor
    (125) factorOperation -> . idioms EQUAL factor
    (126) factorOperation -> . idioms DIFF factor
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    RPAREN          shift and go to state 172
    LPAREN          shift and go to state 153
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_INT         shift and go to state 157
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    callAux                        shift and go to state 170
    expression                     shift and go to state 171
    callRecursive                  shift and go to state 173
    callFinal                      shift and go to state 174
    term                           shift and go to state 136
    expressionOperation            shift and go to state 137
    factor                         shift and go to state 138
    termOperation                  shift and go to state 139
    idioms                         shift and go to state 140
    factorOperation                shift and go to state 141
    auction                        shift and go to state 142
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    identifier                     shift and go to state 134
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 111

    (148) identArray -> ID LSBRACK . expression RSBRACK
    (113) expression -> . term
    (114) expression -> . expressionOperation
    (117) term -> . factor
    (118) term -> . termOperation
    (115) expressionOperation -> . term PLUS expression
    (116) expressionOperation -> . term MINUS expression
    (121) factor -> . idioms
    (122) factor -> . factorOperation
    (119) termOperation -> . factor TIMES term
    (120) termOperation -> . factor DIVIDE term
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (123) factorOperation -> . idioms GTHAN factor
    (124) factorOperation -> . idioms LTHAN factor
    (125) factorOperation -> . idioms EQUAL factor
    (126) factorOperation -> . idioms DIFF factor
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 153
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_INT         shift and go to state 157
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    expression                     shift and go to state 175
    term                           shift and go to state 136
    expressionOperation            shift and go to state 137
    factor                         shift and go to state 138
    termOperation                  shift and go to state 139
    idioms                         shift and go to state 140
    factorOperation                shift and go to state 141
    auction                        shift and go to state 142
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    identifier                     shift and go to state 134
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 112

    (80) returnStatement -> RETURN LPAREN . expression RPAREN
    (113) expression -> . term
    (114) expression -> . expressionOperation
    (117) term -> . factor
    (118) term -> . termOperation
    (115) expressionOperation -> . term PLUS expression
    (116) expressionOperation -> . term MINUS expression
    (121) factor -> . idioms
    (122) factor -> . factorOperation
    (119) termOperation -> . factor TIMES term
    (120) termOperation -> . factor DIVIDE term
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (123) factorOperation -> . idioms GTHAN factor
    (124) factorOperation -> . idioms LTHAN factor
    (125) factorOperation -> . idioms EQUAL factor
    (126) factorOperation -> . idioms DIFF factor
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 153
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_INT         shift and go to state 157
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    expression                     shift and go to state 176
    term                           shift and go to state 136
    expressionOperation            shift and go to state 137
    factor                         shift and go to state 138
    termOperation                  shift and go to state 139
    idioms                         shift and go to state 140
    factorOperation                shift and go to state 141
    auction                        shift and go to state 142
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    identifier                     shift and go to state 134
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 113

    (86) regressionFunc -> REGRESSION LPAREN . ID COMA ID RPAREN

    ID              shift and go to state 177


state 114

    (85) plotXYFunc -> PLOTXY LPAREN . ID COMA ID RPAREN

    ID              shift and go to state 178


state 115

    (83) shortCondition -> IF LPAREN . expression RPAREN THEN block
    (84) longCondition -> IF LPAREN . expression RPAREN THEN block ELSE block
    (113) expression -> . term
    (114) expression -> . expressionOperation
    (117) term -> . factor
    (118) term -> . termOperation
    (115) expressionOperation -> . term PLUS expression
    (116) expressionOperation -> . term MINUS expression
    (121) factor -> . idioms
    (122) factor -> . factorOperation
    (119) termOperation -> . factor TIMES term
    (120) termOperation -> . factor DIVIDE term
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (123) factorOperation -> . idioms GTHAN factor
    (124) factorOperation -> . idioms LTHAN factor
    (125) factorOperation -> . idioms EQUAL factor
    (126) factorOperation -> . idioms DIFF factor
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 153
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_INT         shift and go to state 157
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    expression                     shift and go to state 179
    term                           shift and go to state 136
    expressionOperation            shift and go to state 137
    factor                         shift and go to state 138
    termOperation                  shift and go to state 139
    idioms                         shift and go to state 140
    factorOperation                shift and go to state 141
    auction                        shift and go to state 142
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    identifier                     shift and go to state 134
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 116

    (105) conditional -> WHILE LPAREN . expression RPAREN block
    (113) expression -> . term
    (114) expression -> . expressionOperation
    (117) term -> . factor
    (118) term -> . termOperation
    (115) expressionOperation -> . term PLUS expression
    (116) expressionOperation -> . term MINUS expression
    (121) factor -> . idioms
    (122) factor -> . factorOperation
    (119) termOperation -> . factor TIMES term
    (120) termOperation -> . factor DIVIDE term
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (123) factorOperation -> . idioms GTHAN factor
    (124) factorOperation -> . idioms LTHAN factor
    (125) factorOperation -> . idioms EQUAL factor
    (126) factorOperation -> . idioms DIFF factor
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 153
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_INT         shift and go to state 157
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    expression                     shift and go to state 180
    term                           shift and go to state 136
    expressionOperation            shift and go to state 137
    factor                         shift and go to state 138
    termOperation                  shift and go to state 139
    idioms                         shift and go to state 140
    factorOperation                shift and go to state 141
    auction                        shift and go to state 142
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    identifier                     shift and go to state 134
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 117

    (106) nonconditional -> FOR identifier . ASSIGN expression TO expression DO block

    ASSIGN          shift and go to state 181


state 118

    (147) identLonely -> ID .
    (148) identArray -> ID . LSBRACK expression RSBRACK

    ASSIGN          reduce using rule 147 (identLonely -> ID .)
    RPAREN          reduce using rule 147 (identLonely -> ID .)
    COMA            reduce using rule 147 (identLonely -> ID .)
    SEMICOLON       reduce using rule 147 (identLonely -> ID .)
    LSBRACK         shift and go to state 111


state 119

    (24) funcAux -> FUNCTION typeFunction ID LPAREN RPAREN funcVer1 .

    FUNCTION        reduce using rule 24 (funcAux -> FUNCTION typeFunction ID LPAREN RPAREN funcVer1 .)
    MAIN            reduce using rule 24 (funcAux -> FUNCTION typeFunction ID LPAREN RPAREN funcVer1 .)


state 120

    (25) funcAux -> FUNCTION typeFunction ID LPAREN RPAREN funcVer2 .

    FUNCTION        reduce using rule 25 (funcAux -> FUNCTION typeFunction ID LPAREN RPAREN funcVer2 .)
    MAIN            reduce using rule 25 (funcAux -> FUNCTION typeFunction ID LPAREN RPAREN funcVer2 .)


state 121

    (32) funcVer1 -> variablesLoc . block
    (64) block -> . LBRACK blockAux

    LBRACK          shift and go to state 43

    block                          shift and go to state 182

state 122

    (33) funcVer2 -> block .

    FUNCTION        reduce using rule 33 (funcVer2 -> block .)
    MAIN            reduce using rule 33 (funcVer2 -> block .)


state 123

    (34) variablesLoc -> VARS . varAuxLoc
    (35) varAuxLoc -> . oneVarLoc
    (36) varAuxLoc -> . sameTypeLoc
    (37) varAuxLoc -> . newTypeLoc
    (38) oneVarLoc -> . typeVar COLON identifier SEMICOLON
    (39) sameTypeLoc -> . typeVar COLON identifier COMA sameTypeFinalLoc
    (40) sameTypeLoc -> . typeVar COLON identifier COMA sameTypeRecursiveLoc
    (45) newTypeLoc -> . typeVar COLON identifier SEMICOLON varAuxLoc
    (60) typeVar -> . INT
    (61) typeVar -> . FLOAT
    (62) typeVar -> . CHAR

    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    varAuxLoc                      shift and go to state 183
    oneVarLoc                      shift and go to state 184
    sameTypeLoc                    shift and go to state 185
    newTypeLoc                     shift and go to state 186
    typeVar                        shift and go to state 187

state 124

    (30) withParameters -> parameters RPAREN . funcVer1
    (31) withParameters -> parameters RPAREN . funcVer2
    (32) funcVer1 -> . variablesLoc block
    (33) funcVer2 -> . block
    (34) variablesLoc -> . VARS varAuxLoc
    (64) block -> . LBRACK blockAux

    VARS            shift and go to state 123
    LBRACK          shift and go to state 43

    funcVer1                       shift and go to state 188
    funcVer2                       shift and go to state 189
    variablesLoc                   shift and go to state 121
    block                          shift and go to state 122

state 125

    (49) oneParam -> typeVar COLON . identifierVar
    (50) sameTypeParam -> typeVar COLON . identifierVar COMA sameTypeParamFinal
    (51) sameTypeParam -> typeVar COLON . identifierVar COMA sameTypeParamRecursive
    (56) newParam -> typeVar COLON . identifierVar SEMICOLON parameters
    (57) identifierVar -> . identLonely
    (58) identifierVar -> . identArrayVar
    (147) identLonely -> . ID
    (59) identArrayVar -> . ID LSBRACK expressionVar RSBRACK

    ID              shift and go to state 41

    identifierVar                  shift and go to state 190
    identLonely                    shift and go to state 39
    identArrayVar                  shift and go to state 40

state 126

    (15) sameTypeFinal -> identifierVar SEMICOLON .
    (18) sameTypeRecursive -> identifierVar SEMICOLON . varAux
    (9) varAux -> . oneVar
    (10) varAux -> . sameType
    (11) varAux -> . newType
    (12) oneVar -> . typeVar COLON identifierVar SEMICOLON
    (13) sameType -> . typeVar COLON identifierVar COMA sameTypeFinal
    (14) sameType -> . typeVar COLON identifierVar COMA sameTypeRecursive
    (19) newType -> . typeVar COLON identifierVar SEMICOLON varAux
    (60) typeVar -> . INT
    (61) typeVar -> . FLOAT
    (62) typeVar -> . CHAR

    MAIN            reduce using rule 15 (sameTypeFinal -> identifierVar SEMICOLON .)
    FUNCTION        reduce using rule 15 (sameTypeFinal -> identifierVar SEMICOLON .)
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    varAux                         shift and go to state 191
    oneVar                         shift and go to state 20
    sameType                       shift and go to state 21
    newType                        shift and go to state 22
    typeVar                        shift and go to state 23

state 127

    (16) sameTypeRecursive -> identifierVar COMA . sameTypeRecursive
    (17) sameTypeRecursive -> identifierVar COMA . sameTypeFinal
    (16) sameTypeRecursive -> . identifierVar COMA sameTypeRecursive
    (17) sameTypeRecursive -> . identifierVar COMA sameTypeFinal
    (18) sameTypeRecursive -> . identifierVar SEMICOLON varAux
    (15) sameTypeFinal -> . identifierVar SEMICOLON
    (57) identifierVar -> . identLonely
    (58) identifierVar -> . identArrayVar
    (147) identLonely -> . ID
    (59) identArrayVar -> . ID LSBRACK expressionVar RSBRACK

    ID              shift and go to state 41

    identifierVar                  shift and go to state 192
    sameTypeRecursive              shift and go to state 193
    sameTypeFinal                  shift and go to state 194
    identLonely                    shift and go to state 39
    identArrayVar                  shift and go to state 40

state 128

    (59) identArrayVar -> ID LSBRACK expressionVar RSBRACK .

    SEMICOLON       reduce using rule 59 (identArrayVar -> ID LSBRACK expressionVar RSBRACK .)
    COMA            reduce using rule 59 (identArrayVar -> ID LSBRACK expressionVar RSBRACK .)
    RPAREN          reduce using rule 59 (identArrayVar -> ID LSBRACK expressionVar RSBRACK .)


state 129

    (154) expressionOperationVar -> termVar PLUS . expressionVar
    (152) expressionVar -> . termVar
    (153) expressionVar -> . expressionOperationVar
    (156) termVar -> . auctionVar
    (157) termVar -> . termOperationVar
    (154) expressionOperationVar -> . termVar PLUS expressionVar
    (155) expressionOperationVar -> . termVar MINUS expressionVar
    (160) auctionVar -> . constantVar
    (161) auctionVar -> . otherExpressionVar
    (158) termOperationVar -> . auctionVar TIMES termVar
    (159) termOperationVar -> . auctionVar DIVIDE termVar
    (162) constantVar -> . CTE_INT
    (163) otherExpressionVar -> . LPAREN expressionVar RPAREN

    CTE_INT         shift and go to state 96
    LPAREN          shift and go to state 97

    termVar                        shift and go to state 90
    expressionVar                  shift and go to state 195
    expressionOperationVar         shift and go to state 91
    auctionVar                     shift and go to state 92
    termOperationVar               shift and go to state 93
    constantVar                    shift and go to state 94
    otherExpressionVar             shift and go to state 95

state 130

    (155) expressionOperationVar -> termVar MINUS . expressionVar
    (152) expressionVar -> . termVar
    (153) expressionVar -> . expressionOperationVar
    (156) termVar -> . auctionVar
    (157) termVar -> . termOperationVar
    (154) expressionOperationVar -> . termVar PLUS expressionVar
    (155) expressionOperationVar -> . termVar MINUS expressionVar
    (160) auctionVar -> . constantVar
    (161) auctionVar -> . otherExpressionVar
    (158) termOperationVar -> . auctionVar TIMES termVar
    (159) termOperationVar -> . auctionVar DIVIDE termVar
    (162) constantVar -> . CTE_INT
    (163) otherExpressionVar -> . LPAREN expressionVar RPAREN

    CTE_INT         shift and go to state 96
    LPAREN          shift and go to state 97

    termVar                        shift and go to state 90
    expressionVar                  shift and go to state 196
    expressionOperationVar         shift and go to state 91
    auctionVar                     shift and go to state 92
    termOperationVar               shift and go to state 93
    constantVar                    shift and go to state 94
    otherExpressionVar             shift and go to state 95

state 131

    (158) termOperationVar -> auctionVar TIMES . termVar
    (156) termVar -> . auctionVar
    (157) termVar -> . termOperationVar
    (160) auctionVar -> . constantVar
    (161) auctionVar -> . otherExpressionVar
    (158) termOperationVar -> . auctionVar TIMES termVar
    (159) termOperationVar -> . auctionVar DIVIDE termVar
    (162) constantVar -> . CTE_INT
    (163) otherExpressionVar -> . LPAREN expressionVar RPAREN

    CTE_INT         shift and go to state 96
    LPAREN          shift and go to state 97

    auctionVar                     shift and go to state 92
    termVar                        shift and go to state 197
    termOperationVar               shift and go to state 93
    constantVar                    shift and go to state 94
    otherExpressionVar             shift and go to state 95

state 132

    (159) termOperationVar -> auctionVar DIVIDE . termVar
    (156) termVar -> . auctionVar
    (157) termVar -> . termOperationVar
    (160) auctionVar -> . constantVar
    (161) auctionVar -> . otherExpressionVar
    (158) termOperationVar -> . auctionVar TIMES termVar
    (159) termOperationVar -> . auctionVar DIVIDE termVar
    (162) constantVar -> . CTE_INT
    (163) otherExpressionVar -> . LPAREN expressionVar RPAREN

    CTE_INT         shift and go to state 96
    LPAREN          shift and go to state 97

    auctionVar                     shift and go to state 92
    termVar                        shift and go to state 198
    termOperationVar               shift and go to state 93
    constantVar                    shift and go to state 94
    otherExpressionVar             shift and go to state 95

state 133

    (163) otherExpressionVar -> LPAREN expressionVar . RPAREN

    RPAREN          shift and go to state 199


state 134

    (133) auction -> identifier .

    OR              reduce using rule 133 (auction -> identifier .)
    AND             reduce using rule 133 (auction -> identifier .)
    GTHAN           reduce using rule 133 (auction -> identifier .)
    LTHAN           reduce using rule 133 (auction -> identifier .)
    EQUAL           reduce using rule 133 (auction -> identifier .)
    DIFF            reduce using rule 133 (auction -> identifier .)
    TIMES           reduce using rule 133 (auction -> identifier .)
    DIVIDE          reduce using rule 133 (auction -> identifier .)
    PLUS            reduce using rule 133 (auction -> identifier .)
    MINUS           reduce using rule 133 (auction -> identifier .)
    SEMICOLON       reduce using rule 133 (auction -> identifier .)
    RPAREN          reduce using rule 133 (auction -> identifier .)
    COMA            reduce using rule 133 (auction -> identifier .)
    RSBRACK         reduce using rule 133 (auction -> identifier .)
    TO              reduce using rule 133 (auction -> identifier .)
    DO              reduce using rule 133 (auction -> identifier .)


state 135

    (79) assignment -> identifier ASSIGN expression .

    SEMICOLON       reduce using rule 79 (assignment -> identifier ASSIGN expression .)


state 136

    (113) expression -> term .
    (115) expressionOperation -> term . PLUS expression
    (116) expressionOperation -> term . MINUS expression

    SEMICOLON       reduce using rule 113 (expression -> term .)
    RPAREN          reduce using rule 113 (expression -> term .)
    COMA            reduce using rule 113 (expression -> term .)
    RSBRACK         reduce using rule 113 (expression -> term .)
    TO              reduce using rule 113 (expression -> term .)
    DO              reduce using rule 113 (expression -> term .)
    PLUS            shift and go to state 200
    MINUS           shift and go to state 201


state 137

    (114) expression -> expressionOperation .

    SEMICOLON       reduce using rule 114 (expression -> expressionOperation .)
    RPAREN          reduce using rule 114 (expression -> expressionOperation .)
    COMA            reduce using rule 114 (expression -> expressionOperation .)
    RSBRACK         reduce using rule 114 (expression -> expressionOperation .)
    TO              reduce using rule 114 (expression -> expressionOperation .)
    DO              reduce using rule 114 (expression -> expressionOperation .)


state 138

    (117) term -> factor .
    (119) termOperation -> factor . TIMES term
    (120) termOperation -> factor . DIVIDE term

    PLUS            reduce using rule 117 (term -> factor .)
    MINUS           reduce using rule 117 (term -> factor .)
    SEMICOLON       reduce using rule 117 (term -> factor .)
    RPAREN          reduce using rule 117 (term -> factor .)
    COMA            reduce using rule 117 (term -> factor .)
    RSBRACK         reduce using rule 117 (term -> factor .)
    TO              reduce using rule 117 (term -> factor .)
    DO              reduce using rule 117 (term -> factor .)
    TIMES           shift and go to state 202
    DIVIDE          shift and go to state 203


state 139

    (118) term -> termOperation .

    PLUS            reduce using rule 118 (term -> termOperation .)
    MINUS           reduce using rule 118 (term -> termOperation .)
    SEMICOLON       reduce using rule 118 (term -> termOperation .)
    RPAREN          reduce using rule 118 (term -> termOperation .)
    COMA            reduce using rule 118 (term -> termOperation .)
    RSBRACK         reduce using rule 118 (term -> termOperation .)
    TO              reduce using rule 118 (term -> termOperation .)
    DO              reduce using rule 118 (term -> termOperation .)


state 140

    (121) factor -> idioms .
    (123) factorOperation -> idioms . GTHAN factor
    (124) factorOperation -> idioms . LTHAN factor
    (125) factorOperation -> idioms . EQUAL factor
    (126) factorOperation -> idioms . DIFF factor

    TIMES           reduce using rule 121 (factor -> idioms .)
    DIVIDE          reduce using rule 121 (factor -> idioms .)
    PLUS            reduce using rule 121 (factor -> idioms .)
    MINUS           reduce using rule 121 (factor -> idioms .)
    SEMICOLON       reduce using rule 121 (factor -> idioms .)
    RPAREN          reduce using rule 121 (factor -> idioms .)
    COMA            reduce using rule 121 (factor -> idioms .)
    RSBRACK         reduce using rule 121 (factor -> idioms .)
    TO              reduce using rule 121 (factor -> idioms .)
    DO              reduce using rule 121 (factor -> idioms .)
    GTHAN           shift and go to state 204
    LTHAN           shift and go to state 205
    EQUAL           shift and go to state 206
    DIFF            shift and go to state 207


state 141

    (122) factor -> factorOperation .

    TIMES           reduce using rule 122 (factor -> factorOperation .)
    DIVIDE          reduce using rule 122 (factor -> factorOperation .)
    PLUS            reduce using rule 122 (factor -> factorOperation .)
    MINUS           reduce using rule 122 (factor -> factorOperation .)
    SEMICOLON       reduce using rule 122 (factor -> factorOperation .)
    RPAREN          reduce using rule 122 (factor -> factorOperation .)
    COMA            reduce using rule 122 (factor -> factorOperation .)
    RSBRACK         reduce using rule 122 (factor -> factorOperation .)
    TO              reduce using rule 122 (factor -> factorOperation .)
    DO              reduce using rule 122 (factor -> factorOperation .)


state 142

    (127) idioms -> auction .
    (129) idiomsOperation -> auction . OR idioms
    (130) idiomsOperation -> auction . AND idioms

    GTHAN           reduce using rule 127 (idioms -> auction .)
    LTHAN           reduce using rule 127 (idioms -> auction .)
    EQUAL           reduce using rule 127 (idioms -> auction .)
    DIFF            reduce using rule 127 (idioms -> auction .)
    TIMES           reduce using rule 127 (idioms -> auction .)
    DIVIDE          reduce using rule 127 (idioms -> auction .)
    PLUS            reduce using rule 127 (idioms -> auction .)
    MINUS           reduce using rule 127 (idioms -> auction .)
    SEMICOLON       reduce using rule 127 (idioms -> auction .)
    RPAREN          reduce using rule 127 (idioms -> auction .)
    COMA            reduce using rule 127 (idioms -> auction .)
    RSBRACK         reduce using rule 127 (idioms -> auction .)
    TO              reduce using rule 127 (idioms -> auction .)
    DO              reduce using rule 127 (idioms -> auction .)
    OR              shift and go to state 208
    AND             shift and go to state 209


state 143

    (128) idioms -> idiomsOperation .

    GTHAN           reduce using rule 128 (idioms -> idiomsOperation .)
    LTHAN           reduce using rule 128 (idioms -> idiomsOperation .)
    EQUAL           reduce using rule 128 (idioms -> idiomsOperation .)
    DIFF            reduce using rule 128 (idioms -> idiomsOperation .)
    TIMES           reduce using rule 128 (idioms -> idiomsOperation .)
    DIVIDE          reduce using rule 128 (idioms -> idiomsOperation .)
    PLUS            reduce using rule 128 (idioms -> idiomsOperation .)
    MINUS           reduce using rule 128 (idioms -> idiomsOperation .)
    SEMICOLON       reduce using rule 128 (idioms -> idiomsOperation .)
    RPAREN          reduce using rule 128 (idioms -> idiomsOperation .)
    COMA            reduce using rule 128 (idioms -> idiomsOperation .)
    RSBRACK         reduce using rule 128 (idioms -> idiomsOperation .)
    TO              reduce using rule 128 (idioms -> idiomsOperation .)
    DO              reduce using rule 128 (idioms -> idiomsOperation .)


state 144

    (131) auction -> constant .

    OR              reduce using rule 131 (auction -> constant .)
    AND             reduce using rule 131 (auction -> constant .)
    GTHAN           reduce using rule 131 (auction -> constant .)
    LTHAN           reduce using rule 131 (auction -> constant .)
    EQUAL           reduce using rule 131 (auction -> constant .)
    DIFF            reduce using rule 131 (auction -> constant .)
    TIMES           reduce using rule 131 (auction -> constant .)
    DIVIDE          reduce using rule 131 (auction -> constant .)
    PLUS            reduce using rule 131 (auction -> constant .)
    MINUS           reduce using rule 131 (auction -> constant .)
    SEMICOLON       reduce using rule 131 (auction -> constant .)
    RPAREN          reduce using rule 131 (auction -> constant .)
    COMA            reduce using rule 131 (auction -> constant .)
    RSBRACK         reduce using rule 131 (auction -> constant .)
    TO              reduce using rule 131 (auction -> constant .)
    DO              reduce using rule 131 (auction -> constant .)


state 145

    (132) auction -> otherExpression .

    OR              reduce using rule 132 (auction -> otherExpression .)
    AND             reduce using rule 132 (auction -> otherExpression .)
    GTHAN           reduce using rule 132 (auction -> otherExpression .)
    LTHAN           reduce using rule 132 (auction -> otherExpression .)
    EQUAL           reduce using rule 132 (auction -> otherExpression .)
    DIFF            reduce using rule 132 (auction -> otherExpression .)
    TIMES           reduce using rule 132 (auction -> otherExpression .)
    DIVIDE          reduce using rule 132 (auction -> otherExpression .)
    PLUS            reduce using rule 132 (auction -> otherExpression .)
    MINUS           reduce using rule 132 (auction -> otherExpression .)
    SEMICOLON       reduce using rule 132 (auction -> otherExpression .)
    RPAREN          reduce using rule 132 (auction -> otherExpression .)
    COMA            reduce using rule 132 (auction -> otherExpression .)
    RSBRACK         reduce using rule 132 (auction -> otherExpression .)
    TO              reduce using rule 132 (auction -> otherExpression .)
    DO              reduce using rule 132 (auction -> otherExpression .)


state 146

    (134) auction -> averageFunc .

    OR              reduce using rule 134 (auction -> averageFunc .)
    AND             reduce using rule 134 (auction -> averageFunc .)
    GTHAN           reduce using rule 134 (auction -> averageFunc .)
    LTHAN           reduce using rule 134 (auction -> averageFunc .)
    EQUAL           reduce using rule 134 (auction -> averageFunc .)
    DIFF            reduce using rule 134 (auction -> averageFunc .)
    TIMES           reduce using rule 134 (auction -> averageFunc .)
    DIVIDE          reduce using rule 134 (auction -> averageFunc .)
    PLUS            reduce using rule 134 (auction -> averageFunc .)
    MINUS           reduce using rule 134 (auction -> averageFunc .)
    SEMICOLON       reduce using rule 134 (auction -> averageFunc .)
    RPAREN          reduce using rule 134 (auction -> averageFunc .)
    COMA            reduce using rule 134 (auction -> averageFunc .)
    RSBRACK         reduce using rule 134 (auction -> averageFunc .)
    TO              reduce using rule 134 (auction -> averageFunc .)
    DO              reduce using rule 134 (auction -> averageFunc .)


state 147

    (135) auction -> modeFunc .

    OR              reduce using rule 135 (auction -> modeFunc .)
    AND             reduce using rule 135 (auction -> modeFunc .)
    GTHAN           reduce using rule 135 (auction -> modeFunc .)
    LTHAN           reduce using rule 135 (auction -> modeFunc .)
    EQUAL           reduce using rule 135 (auction -> modeFunc .)
    DIFF            reduce using rule 135 (auction -> modeFunc .)
    TIMES           reduce using rule 135 (auction -> modeFunc .)
    DIVIDE          reduce using rule 135 (auction -> modeFunc .)
    PLUS            reduce using rule 135 (auction -> modeFunc .)
    MINUS           reduce using rule 135 (auction -> modeFunc .)
    SEMICOLON       reduce using rule 135 (auction -> modeFunc .)
    RPAREN          reduce using rule 135 (auction -> modeFunc .)
    COMA            reduce using rule 135 (auction -> modeFunc .)
    RSBRACK         reduce using rule 135 (auction -> modeFunc .)
    TO              reduce using rule 135 (auction -> modeFunc .)
    DO              reduce using rule 135 (auction -> modeFunc .)


state 148

    (136) auction -> varianceFunc .

    OR              reduce using rule 136 (auction -> varianceFunc .)
    AND             reduce using rule 136 (auction -> varianceFunc .)
    GTHAN           reduce using rule 136 (auction -> varianceFunc .)
    LTHAN           reduce using rule 136 (auction -> varianceFunc .)
    EQUAL           reduce using rule 136 (auction -> varianceFunc .)
    DIFF            reduce using rule 136 (auction -> varianceFunc .)
    TIMES           reduce using rule 136 (auction -> varianceFunc .)
    DIVIDE          reduce using rule 136 (auction -> varianceFunc .)
    PLUS            reduce using rule 136 (auction -> varianceFunc .)
    MINUS           reduce using rule 136 (auction -> varianceFunc .)
    SEMICOLON       reduce using rule 136 (auction -> varianceFunc .)
    RPAREN          reduce using rule 136 (auction -> varianceFunc .)
    COMA            reduce using rule 136 (auction -> varianceFunc .)
    RSBRACK         reduce using rule 136 (auction -> varianceFunc .)
    TO              reduce using rule 136 (auction -> varianceFunc .)
    DO              reduce using rule 136 (auction -> varianceFunc .)


state 149

    (137) auction -> functionCall .

    OR              reduce using rule 137 (auction -> functionCall .)
    AND             reduce using rule 137 (auction -> functionCall .)
    GTHAN           reduce using rule 137 (auction -> functionCall .)
    LTHAN           reduce using rule 137 (auction -> functionCall .)
    EQUAL           reduce using rule 137 (auction -> functionCall .)
    DIFF            reduce using rule 137 (auction -> functionCall .)
    TIMES           reduce using rule 137 (auction -> functionCall .)
    DIVIDE          reduce using rule 137 (auction -> functionCall .)
    PLUS            reduce using rule 137 (auction -> functionCall .)
    MINUS           reduce using rule 137 (auction -> functionCall .)
    SEMICOLON       reduce using rule 137 (auction -> functionCall .)
    RPAREN          reduce using rule 137 (auction -> functionCall .)
    COMA            reduce using rule 137 (auction -> functionCall .)
    RSBRACK         reduce using rule 137 (auction -> functionCall .)
    TO              reduce using rule 137 (auction -> functionCall .)
    DO              reduce using rule 137 (auction -> functionCall .)


state 150

    (138) constant -> someInt .

    OR              reduce using rule 138 (constant -> someInt .)
    AND             reduce using rule 138 (constant -> someInt .)
    GTHAN           reduce using rule 138 (constant -> someInt .)
    LTHAN           reduce using rule 138 (constant -> someInt .)
    EQUAL           reduce using rule 138 (constant -> someInt .)
    DIFF            reduce using rule 138 (constant -> someInt .)
    TIMES           reduce using rule 138 (constant -> someInt .)
    DIVIDE          reduce using rule 138 (constant -> someInt .)
    PLUS            reduce using rule 138 (constant -> someInt .)
    MINUS           reduce using rule 138 (constant -> someInt .)
    SEMICOLON       reduce using rule 138 (constant -> someInt .)
    RPAREN          reduce using rule 138 (constant -> someInt .)
    COMA            reduce using rule 138 (constant -> someInt .)
    RSBRACK         reduce using rule 138 (constant -> someInt .)
    TO              reduce using rule 138 (constant -> someInt .)
    DO              reduce using rule 138 (constant -> someInt .)


state 151

    (139) constant -> someFloat .

    OR              reduce using rule 139 (constant -> someFloat .)
    AND             reduce using rule 139 (constant -> someFloat .)
    GTHAN           reduce using rule 139 (constant -> someFloat .)
    LTHAN           reduce using rule 139 (constant -> someFloat .)
    EQUAL           reduce using rule 139 (constant -> someFloat .)
    DIFF            reduce using rule 139 (constant -> someFloat .)
    TIMES           reduce using rule 139 (constant -> someFloat .)
    DIVIDE          reduce using rule 139 (constant -> someFloat .)
    PLUS            reduce using rule 139 (constant -> someFloat .)
    MINUS           reduce using rule 139 (constant -> someFloat .)
    SEMICOLON       reduce using rule 139 (constant -> someFloat .)
    RPAREN          reduce using rule 139 (constant -> someFloat .)
    COMA            reduce using rule 139 (constant -> someFloat .)
    RSBRACK         reduce using rule 139 (constant -> someFloat .)
    TO              reduce using rule 139 (constant -> someFloat .)
    DO              reduce using rule 139 (constant -> someFloat .)


state 152

    (140) constant -> someChar .

    OR              reduce using rule 140 (constant -> someChar .)
    AND             reduce using rule 140 (constant -> someChar .)
    GTHAN           reduce using rule 140 (constant -> someChar .)
    LTHAN           reduce using rule 140 (constant -> someChar .)
    EQUAL           reduce using rule 140 (constant -> someChar .)
    DIFF            reduce using rule 140 (constant -> someChar .)
    TIMES           reduce using rule 140 (constant -> someChar .)
    DIVIDE          reduce using rule 140 (constant -> someChar .)
    PLUS            reduce using rule 140 (constant -> someChar .)
    MINUS           reduce using rule 140 (constant -> someChar .)
    SEMICOLON       reduce using rule 140 (constant -> someChar .)
    RPAREN          reduce using rule 140 (constant -> someChar .)
    COMA            reduce using rule 140 (constant -> someChar .)
    RSBRACK         reduce using rule 140 (constant -> someChar .)
    TO              reduce using rule 140 (constant -> someChar .)
    DO              reduce using rule 140 (constant -> someChar .)


state 153

    (144) otherExpression -> LPAREN . expression RPAREN
    (113) expression -> . term
    (114) expression -> . expressionOperation
    (117) term -> . factor
    (118) term -> . termOperation
    (115) expressionOperation -> . term PLUS expression
    (116) expressionOperation -> . term MINUS expression
    (121) factor -> . idioms
    (122) factor -> . factorOperation
    (119) termOperation -> . factor TIMES term
    (120) termOperation -> . factor DIVIDE term
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (123) factorOperation -> . idioms GTHAN factor
    (124) factorOperation -> . idioms LTHAN factor
    (125) factorOperation -> . idioms EQUAL factor
    (126) factorOperation -> . idioms DIFF factor
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 153
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_INT         shift and go to state 157
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    expression                     shift and go to state 210
    term                           shift and go to state 136
    expressionOperation            shift and go to state 137
    factor                         shift and go to state 138
    termOperation                  shift and go to state 139
    idioms                         shift and go to state 140
    factorOperation                shift and go to state 141
    auction                        shift and go to state 142
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    identifier                     shift and go to state 134
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 154

    (149) averageFunc -> AVERAGE . LPAREN ID RPAREN

    LPAREN          shift and go to state 211


state 155

    (150) modeFunc -> MODE . LPAREN ID RPAREN

    LPAREN          shift and go to state 212


state 156

    (151) varianceFunc -> VARIANCE . LPAREN ID RPAREN

    LPAREN          shift and go to state 213


state 157

    (141) someInt -> CTE_INT .

    OR              reduce using rule 141 (someInt -> CTE_INT .)
    AND             reduce using rule 141 (someInt -> CTE_INT .)
    GTHAN           reduce using rule 141 (someInt -> CTE_INT .)
    LTHAN           reduce using rule 141 (someInt -> CTE_INT .)
    EQUAL           reduce using rule 141 (someInt -> CTE_INT .)
    DIFF            reduce using rule 141 (someInt -> CTE_INT .)
    TIMES           reduce using rule 141 (someInt -> CTE_INT .)
    DIVIDE          reduce using rule 141 (someInt -> CTE_INT .)
    PLUS            reduce using rule 141 (someInt -> CTE_INT .)
    MINUS           reduce using rule 141 (someInt -> CTE_INT .)
    SEMICOLON       reduce using rule 141 (someInt -> CTE_INT .)
    RPAREN          reduce using rule 141 (someInt -> CTE_INT .)
    COMA            reduce using rule 141 (someInt -> CTE_INT .)
    RSBRACK         reduce using rule 141 (someInt -> CTE_INT .)
    TO              reduce using rule 141 (someInt -> CTE_INT .)
    DO              reduce using rule 141 (someInt -> CTE_INT .)


state 158

    (142) someFloat -> CTE_FLOAT .

    OR              reduce using rule 142 (someFloat -> CTE_FLOAT .)
    AND             reduce using rule 142 (someFloat -> CTE_FLOAT .)
    GTHAN           reduce using rule 142 (someFloat -> CTE_FLOAT .)
    LTHAN           reduce using rule 142 (someFloat -> CTE_FLOAT .)
    EQUAL           reduce using rule 142 (someFloat -> CTE_FLOAT .)
    DIFF            reduce using rule 142 (someFloat -> CTE_FLOAT .)
    TIMES           reduce using rule 142 (someFloat -> CTE_FLOAT .)
    DIVIDE          reduce using rule 142 (someFloat -> CTE_FLOAT .)
    PLUS            reduce using rule 142 (someFloat -> CTE_FLOAT .)
    MINUS           reduce using rule 142 (someFloat -> CTE_FLOAT .)
    SEMICOLON       reduce using rule 142 (someFloat -> CTE_FLOAT .)
    RPAREN          reduce using rule 142 (someFloat -> CTE_FLOAT .)
    COMA            reduce using rule 142 (someFloat -> CTE_FLOAT .)
    RSBRACK         reduce using rule 142 (someFloat -> CTE_FLOAT .)
    TO              reduce using rule 142 (someFloat -> CTE_FLOAT .)
    DO              reduce using rule 142 (someFloat -> CTE_FLOAT .)


state 159

    (143) someChar -> CTE_CHAR .

    OR              reduce using rule 143 (someChar -> CTE_CHAR .)
    AND             reduce using rule 143 (someChar -> CTE_CHAR .)
    GTHAN           reduce using rule 143 (someChar -> CTE_CHAR .)
    LTHAN           reduce using rule 143 (someChar -> CTE_CHAR .)
    EQUAL           reduce using rule 143 (someChar -> CTE_CHAR .)
    DIFF            reduce using rule 143 (someChar -> CTE_CHAR .)
    TIMES           reduce using rule 143 (someChar -> CTE_CHAR .)
    DIVIDE          reduce using rule 143 (someChar -> CTE_CHAR .)
    PLUS            reduce using rule 143 (someChar -> CTE_CHAR .)
    MINUS           reduce using rule 143 (someChar -> CTE_CHAR .)
    SEMICOLON       reduce using rule 143 (someChar -> CTE_CHAR .)
    RPAREN          reduce using rule 143 (someChar -> CTE_CHAR .)
    COMA            reduce using rule 143 (someChar -> CTE_CHAR .)
    RSBRACK         reduce using rule 143 (someChar -> CTE_CHAR .)
    TO              reduce using rule 143 (someChar -> CTE_CHAR .)
    DO              reduce using rule 143 (someChar -> CTE_CHAR .)


state 160

    (87) writing -> WRITE LPAREN writingAux .

    SEMICOLON       reduce using rule 87 (writing -> WRITE LPAREN writingAux .)


state 161

    (88) writingAux -> writingFinal .

    SEMICOLON       reduce using rule 88 (writingAux -> writingFinal .)


state 162

    (89) writingAux -> writingRecursive .

    SEMICOLON       reduce using rule 89 (writingAux -> writingRecursive .)


state 163

    (90) writingFinal -> writingString . RPAREN
    (93) writingRecursive -> writingString . COMA writingFinal
    (95) writingRecursive -> writingString . COMA writingRecursive

    RPAREN          shift and go to state 214
    COMA            shift and go to state 215


state 164

    (91) writingFinal -> expression . RPAREN
    (94) writingRecursive -> expression . COMA writingFinal
    (96) writingRecursive -> expression . COMA writingRecursive

    RPAREN          shift and go to state 216
    COMA            shift and go to state 217


state 165

    (92) writingString -> CTE_STRING .

    RPAREN          reduce using rule 92 (writingString -> CTE_STRING .)
    COMA            reduce using rule 92 (writingString -> CTE_STRING .)


state 166

    (97) reading -> READ LPAREN readingAux .

    SEMICOLON       reduce using rule 97 (reading -> READ LPAREN readingAux .)


state 167

    (98) readingAux -> readingFinal .

    SEMICOLON       reduce using rule 98 (readingAux -> readingFinal .)


state 168

    (99) readingAux -> readingRecursive .

    SEMICOLON       reduce using rule 99 (readingAux -> readingRecursive .)


state 169

    (100) readingFinal -> identifier . RPAREN
    (101) readingRecursive -> identifier . COMA readingRecursive
    (102) readingRecursive -> identifier . COMA readingFinal

    RPAREN          shift and go to state 218
    COMA            shift and go to state 219


state 170

    (107) functionCall -> ID LPAREN callAux .

    SEMICOLON       reduce using rule 107 (functionCall -> ID LPAREN callAux .)
    OR              reduce using rule 107 (functionCall -> ID LPAREN callAux .)
    AND             reduce using rule 107 (functionCall -> ID LPAREN callAux .)
    GTHAN           reduce using rule 107 (functionCall -> ID LPAREN callAux .)
    LTHAN           reduce using rule 107 (functionCall -> ID LPAREN callAux .)
    EQUAL           reduce using rule 107 (functionCall -> ID LPAREN callAux .)
    DIFF            reduce using rule 107 (functionCall -> ID LPAREN callAux .)
    TIMES           reduce using rule 107 (functionCall -> ID LPAREN callAux .)
    DIVIDE          reduce using rule 107 (functionCall -> ID LPAREN callAux .)
    PLUS            reduce using rule 107 (functionCall -> ID LPAREN callAux .)
    MINUS           reduce using rule 107 (functionCall -> ID LPAREN callAux .)
    RPAREN          reduce using rule 107 (functionCall -> ID LPAREN callAux .)
    COMA            reduce using rule 107 (functionCall -> ID LPAREN callAux .)
    RSBRACK         reduce using rule 107 (functionCall -> ID LPAREN callAux .)
    TO              reduce using rule 107 (functionCall -> ID LPAREN callAux .)
    DO              reduce using rule 107 (functionCall -> ID LPAREN callAux .)


state 171

    (108) callAux -> expression . RPAREN
    (111) callRecursive -> expression . COMA callAux

    RPAREN          shift and go to state 220
    COMA            shift and go to state 221


state 172

    (112) callFinal -> RPAREN .

    SEMICOLON       reduce using rule 112 (callFinal -> RPAREN .)
    OR              reduce using rule 112 (callFinal -> RPAREN .)
    AND             reduce using rule 112 (callFinal -> RPAREN .)
    GTHAN           reduce using rule 112 (callFinal -> RPAREN .)
    LTHAN           reduce using rule 112 (callFinal -> RPAREN .)
    EQUAL           reduce using rule 112 (callFinal -> RPAREN .)
    DIFF            reduce using rule 112 (callFinal -> RPAREN .)
    TIMES           reduce using rule 112 (callFinal -> RPAREN .)
    DIVIDE          reduce using rule 112 (callFinal -> RPAREN .)
    PLUS            reduce using rule 112 (callFinal -> RPAREN .)
    MINUS           reduce using rule 112 (callFinal -> RPAREN .)
    RPAREN          reduce using rule 112 (callFinal -> RPAREN .)
    COMA            reduce using rule 112 (callFinal -> RPAREN .)
    RSBRACK         reduce using rule 112 (callFinal -> RPAREN .)
    TO              reduce using rule 112 (callFinal -> RPAREN .)
    DO              reduce using rule 112 (callFinal -> RPAREN .)


state 173

    (109) callAux -> callRecursive .

    SEMICOLON       reduce using rule 109 (callAux -> callRecursive .)
    OR              reduce using rule 109 (callAux -> callRecursive .)
    AND             reduce using rule 109 (callAux -> callRecursive .)
    GTHAN           reduce using rule 109 (callAux -> callRecursive .)
    LTHAN           reduce using rule 109 (callAux -> callRecursive .)
    EQUAL           reduce using rule 109 (callAux -> callRecursive .)
    DIFF            reduce using rule 109 (callAux -> callRecursive .)
    TIMES           reduce using rule 109 (callAux -> callRecursive .)
    DIVIDE          reduce using rule 109 (callAux -> callRecursive .)
    PLUS            reduce using rule 109 (callAux -> callRecursive .)
    MINUS           reduce using rule 109 (callAux -> callRecursive .)
    RPAREN          reduce using rule 109 (callAux -> callRecursive .)
    COMA            reduce using rule 109 (callAux -> callRecursive .)
    RSBRACK         reduce using rule 109 (callAux -> callRecursive .)
    TO              reduce using rule 109 (callAux -> callRecursive .)
    DO              reduce using rule 109 (callAux -> callRecursive .)


state 174

    (110) callAux -> callFinal .

    SEMICOLON       reduce using rule 110 (callAux -> callFinal .)
    OR              reduce using rule 110 (callAux -> callFinal .)
    AND             reduce using rule 110 (callAux -> callFinal .)
    GTHAN           reduce using rule 110 (callAux -> callFinal .)
    LTHAN           reduce using rule 110 (callAux -> callFinal .)
    EQUAL           reduce using rule 110 (callAux -> callFinal .)
    DIFF            reduce using rule 110 (callAux -> callFinal .)
    TIMES           reduce using rule 110 (callAux -> callFinal .)
    DIVIDE          reduce using rule 110 (callAux -> callFinal .)
    PLUS            reduce using rule 110 (callAux -> callFinal .)
    MINUS           reduce using rule 110 (callAux -> callFinal .)
    RPAREN          reduce using rule 110 (callAux -> callFinal .)
    COMA            reduce using rule 110 (callAux -> callFinal .)
    RSBRACK         reduce using rule 110 (callAux -> callFinal .)
    TO              reduce using rule 110 (callAux -> callFinal .)
    DO              reduce using rule 110 (callAux -> callFinal .)


state 175

    (148) identArray -> ID LSBRACK expression . RSBRACK

    RSBRACK         shift and go to state 222


state 176

    (80) returnStatement -> RETURN LPAREN expression . RPAREN

    RPAREN          shift and go to state 223


state 177

    (86) regressionFunc -> REGRESSION LPAREN ID . COMA ID RPAREN

    COMA            shift and go to state 224


state 178

    (85) plotXYFunc -> PLOTXY LPAREN ID . COMA ID RPAREN

    COMA            shift and go to state 225


state 179

    (83) shortCondition -> IF LPAREN expression . RPAREN THEN block
    (84) longCondition -> IF LPAREN expression . RPAREN THEN block ELSE block

    RPAREN          shift and go to state 226


state 180

    (105) conditional -> WHILE LPAREN expression . RPAREN block

    RPAREN          shift and go to state 227


state 181

    (106) nonconditional -> FOR identifier ASSIGN . expression TO expression DO block
    (113) expression -> . term
    (114) expression -> . expressionOperation
    (117) term -> . factor
    (118) term -> . termOperation
    (115) expressionOperation -> . term PLUS expression
    (116) expressionOperation -> . term MINUS expression
    (121) factor -> . idioms
    (122) factor -> . factorOperation
    (119) termOperation -> . factor TIMES term
    (120) termOperation -> . factor DIVIDE term
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (123) factorOperation -> . idioms GTHAN factor
    (124) factorOperation -> . idioms LTHAN factor
    (125) factorOperation -> . idioms EQUAL factor
    (126) factorOperation -> . idioms DIFF factor
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 153
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_INT         shift and go to state 157
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    identifier                     shift and go to state 134
    expression                     shift and go to state 228
    term                           shift and go to state 136
    expressionOperation            shift and go to state 137
    factor                         shift and go to state 138
    termOperation                  shift and go to state 139
    idioms                         shift and go to state 140
    factorOperation                shift and go to state 141
    auction                        shift and go to state 142
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 182

    (32) funcVer1 -> variablesLoc block .

    FUNCTION        reduce using rule 32 (funcVer1 -> variablesLoc block .)
    MAIN            reduce using rule 32 (funcVer1 -> variablesLoc block .)


state 183

    (34) variablesLoc -> VARS varAuxLoc .

    LBRACK          reduce using rule 34 (variablesLoc -> VARS varAuxLoc .)


state 184

    (35) varAuxLoc -> oneVarLoc .

    LBRACK          reduce using rule 35 (varAuxLoc -> oneVarLoc .)


state 185

    (36) varAuxLoc -> sameTypeLoc .

    LBRACK          reduce using rule 36 (varAuxLoc -> sameTypeLoc .)


state 186

    (37) varAuxLoc -> newTypeLoc .

    LBRACK          reduce using rule 37 (varAuxLoc -> newTypeLoc .)


state 187

    (38) oneVarLoc -> typeVar . COLON identifier SEMICOLON
    (39) sameTypeLoc -> typeVar . COLON identifier COMA sameTypeFinalLoc
    (40) sameTypeLoc -> typeVar . COLON identifier COMA sameTypeRecursiveLoc
    (45) newTypeLoc -> typeVar . COLON identifier SEMICOLON varAuxLoc

    COLON           shift and go to state 229


state 188

    (30) withParameters -> parameters RPAREN funcVer1 .

    FUNCTION        reduce using rule 30 (withParameters -> parameters RPAREN funcVer1 .)
    MAIN            reduce using rule 30 (withParameters -> parameters RPAREN funcVer1 .)


state 189

    (31) withParameters -> parameters RPAREN funcVer2 .

    FUNCTION        reduce using rule 31 (withParameters -> parameters RPAREN funcVer2 .)
    MAIN            reduce using rule 31 (withParameters -> parameters RPAREN funcVer2 .)


state 190

    (49) oneParam -> typeVar COLON identifierVar .
    (50) sameTypeParam -> typeVar COLON identifierVar . COMA sameTypeParamFinal
    (51) sameTypeParam -> typeVar COLON identifierVar . COMA sameTypeParamRecursive
    (56) newParam -> typeVar COLON identifierVar . SEMICOLON parameters

    RPAREN          reduce using rule 49 (oneParam -> typeVar COLON identifierVar .)
    COMA            shift and go to state 230
    SEMICOLON       shift and go to state 231


state 191

    (18) sameTypeRecursive -> identifierVar SEMICOLON varAux .

    MAIN            reduce using rule 18 (sameTypeRecursive -> identifierVar SEMICOLON varAux .)
    FUNCTION        reduce using rule 18 (sameTypeRecursive -> identifierVar SEMICOLON varAux .)


state 192

    (16) sameTypeRecursive -> identifierVar . COMA sameTypeRecursive
    (17) sameTypeRecursive -> identifierVar . COMA sameTypeFinal
    (18) sameTypeRecursive -> identifierVar . SEMICOLON varAux
    (15) sameTypeFinal -> identifierVar . SEMICOLON

    COMA            shift and go to state 127
    SEMICOLON       shift and go to state 232


state 193

    (16) sameTypeRecursive -> identifierVar COMA sameTypeRecursive .

    MAIN            reduce using rule 16 (sameTypeRecursive -> identifierVar COMA sameTypeRecursive .)
    FUNCTION        reduce using rule 16 (sameTypeRecursive -> identifierVar COMA sameTypeRecursive .)


state 194

    (17) sameTypeRecursive -> identifierVar COMA sameTypeFinal .

    MAIN            reduce using rule 17 (sameTypeRecursive -> identifierVar COMA sameTypeFinal .)
    FUNCTION        reduce using rule 17 (sameTypeRecursive -> identifierVar COMA sameTypeFinal .)


state 195

    (154) expressionOperationVar -> termVar PLUS expressionVar .

    RSBRACK         reduce using rule 154 (expressionOperationVar -> termVar PLUS expressionVar .)
    RPAREN          reduce using rule 154 (expressionOperationVar -> termVar PLUS expressionVar .)


state 196

    (155) expressionOperationVar -> termVar MINUS expressionVar .

    RSBRACK         reduce using rule 155 (expressionOperationVar -> termVar MINUS expressionVar .)
    RPAREN          reduce using rule 155 (expressionOperationVar -> termVar MINUS expressionVar .)


state 197

    (158) termOperationVar -> auctionVar TIMES termVar .

    PLUS            reduce using rule 158 (termOperationVar -> auctionVar TIMES termVar .)
    MINUS           reduce using rule 158 (termOperationVar -> auctionVar TIMES termVar .)
    RSBRACK         reduce using rule 158 (termOperationVar -> auctionVar TIMES termVar .)
    RPAREN          reduce using rule 158 (termOperationVar -> auctionVar TIMES termVar .)


state 198

    (159) termOperationVar -> auctionVar DIVIDE termVar .

    PLUS            reduce using rule 159 (termOperationVar -> auctionVar DIVIDE termVar .)
    MINUS           reduce using rule 159 (termOperationVar -> auctionVar DIVIDE termVar .)
    RSBRACK         reduce using rule 159 (termOperationVar -> auctionVar DIVIDE termVar .)
    RPAREN          reduce using rule 159 (termOperationVar -> auctionVar DIVIDE termVar .)


state 199

    (163) otherExpressionVar -> LPAREN expressionVar RPAREN .

    TIMES           reduce using rule 163 (otherExpressionVar -> LPAREN expressionVar RPAREN .)
    DIVIDE          reduce using rule 163 (otherExpressionVar -> LPAREN expressionVar RPAREN .)
    PLUS            reduce using rule 163 (otherExpressionVar -> LPAREN expressionVar RPAREN .)
    MINUS           reduce using rule 163 (otherExpressionVar -> LPAREN expressionVar RPAREN .)
    RSBRACK         reduce using rule 163 (otherExpressionVar -> LPAREN expressionVar RPAREN .)
    RPAREN          reduce using rule 163 (otherExpressionVar -> LPAREN expressionVar RPAREN .)


state 200

    (115) expressionOperation -> term PLUS . expression
    (113) expression -> . term
    (114) expression -> . expressionOperation
    (117) term -> . factor
    (118) term -> . termOperation
    (115) expressionOperation -> . term PLUS expression
    (116) expressionOperation -> . term MINUS expression
    (121) factor -> . idioms
    (122) factor -> . factorOperation
    (119) termOperation -> . factor TIMES term
    (120) termOperation -> . factor DIVIDE term
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (123) factorOperation -> . idioms GTHAN factor
    (124) factorOperation -> . idioms LTHAN factor
    (125) factorOperation -> . idioms EQUAL factor
    (126) factorOperation -> . idioms DIFF factor
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 153
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_INT         shift and go to state 157
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    term                           shift and go to state 136
    expression                     shift and go to state 233
    expressionOperation            shift and go to state 137
    factor                         shift and go to state 138
    termOperation                  shift and go to state 139
    idioms                         shift and go to state 140
    factorOperation                shift and go to state 141
    auction                        shift and go to state 142
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    identifier                     shift and go to state 134
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 201

    (116) expressionOperation -> term MINUS . expression
    (113) expression -> . term
    (114) expression -> . expressionOperation
    (117) term -> . factor
    (118) term -> . termOperation
    (115) expressionOperation -> . term PLUS expression
    (116) expressionOperation -> . term MINUS expression
    (121) factor -> . idioms
    (122) factor -> . factorOperation
    (119) termOperation -> . factor TIMES term
    (120) termOperation -> . factor DIVIDE term
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (123) factorOperation -> . idioms GTHAN factor
    (124) factorOperation -> . idioms LTHAN factor
    (125) factorOperation -> . idioms EQUAL factor
    (126) factorOperation -> . idioms DIFF factor
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 153
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_INT         shift and go to state 157
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    term                           shift and go to state 136
    expression                     shift and go to state 234
    expressionOperation            shift and go to state 137
    factor                         shift and go to state 138
    termOperation                  shift and go to state 139
    idioms                         shift and go to state 140
    factorOperation                shift and go to state 141
    auction                        shift and go to state 142
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    identifier                     shift and go to state 134
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 202

    (119) termOperation -> factor TIMES . term
    (117) term -> . factor
    (118) term -> . termOperation
    (121) factor -> . idioms
    (122) factor -> . factorOperation
    (119) termOperation -> . factor TIMES term
    (120) termOperation -> . factor DIVIDE term
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (123) factorOperation -> . idioms GTHAN factor
    (124) factorOperation -> . idioms LTHAN factor
    (125) factorOperation -> . idioms EQUAL factor
    (126) factorOperation -> . idioms DIFF factor
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 153
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_INT         shift and go to state 157
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    factor                         shift and go to state 138
    term                           shift and go to state 235
    termOperation                  shift and go to state 139
    idioms                         shift and go to state 140
    factorOperation                shift and go to state 141
    auction                        shift and go to state 142
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    identifier                     shift and go to state 134
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 203

    (120) termOperation -> factor DIVIDE . term
    (117) term -> . factor
    (118) term -> . termOperation
    (121) factor -> . idioms
    (122) factor -> . factorOperation
    (119) termOperation -> . factor TIMES term
    (120) termOperation -> . factor DIVIDE term
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (123) factorOperation -> . idioms GTHAN factor
    (124) factorOperation -> . idioms LTHAN factor
    (125) factorOperation -> . idioms EQUAL factor
    (126) factorOperation -> . idioms DIFF factor
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 153
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_INT         shift and go to state 157
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    factor                         shift and go to state 138
    term                           shift and go to state 236
    termOperation                  shift and go to state 139
    idioms                         shift and go to state 140
    factorOperation                shift and go to state 141
    auction                        shift and go to state 142
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    identifier                     shift and go to state 134
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 204

    (123) factorOperation -> idioms GTHAN . factor
    (121) factor -> . idioms
    (122) factor -> . factorOperation
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (123) factorOperation -> . idioms GTHAN factor
    (124) factorOperation -> . idioms LTHAN factor
    (125) factorOperation -> . idioms EQUAL factor
    (126) factorOperation -> . idioms DIFF factor
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 153
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_INT         shift and go to state 157
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    idioms                         shift and go to state 140
    factor                         shift and go to state 237
    factorOperation                shift and go to state 141
    auction                        shift and go to state 142
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    identifier                     shift and go to state 134
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 205

    (124) factorOperation -> idioms LTHAN . factor
    (121) factor -> . idioms
    (122) factor -> . factorOperation
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (123) factorOperation -> . idioms GTHAN factor
    (124) factorOperation -> . idioms LTHAN factor
    (125) factorOperation -> . idioms EQUAL factor
    (126) factorOperation -> . idioms DIFF factor
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 153
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_INT         shift and go to state 157
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    idioms                         shift and go to state 140
    factor                         shift and go to state 238
    factorOperation                shift and go to state 141
    auction                        shift and go to state 142
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    identifier                     shift and go to state 134
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 206

    (125) factorOperation -> idioms EQUAL . factor
    (121) factor -> . idioms
    (122) factor -> . factorOperation
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (123) factorOperation -> . idioms GTHAN factor
    (124) factorOperation -> . idioms LTHAN factor
    (125) factorOperation -> . idioms EQUAL factor
    (126) factorOperation -> . idioms DIFF factor
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 153
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_INT         shift and go to state 157
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    idioms                         shift and go to state 140
    factor                         shift and go to state 239
    factorOperation                shift and go to state 141
    auction                        shift and go to state 142
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    identifier                     shift and go to state 134
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 207

    (126) factorOperation -> idioms DIFF . factor
    (121) factor -> . idioms
    (122) factor -> . factorOperation
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (123) factorOperation -> . idioms GTHAN factor
    (124) factorOperation -> . idioms LTHAN factor
    (125) factorOperation -> . idioms EQUAL factor
    (126) factorOperation -> . idioms DIFF factor
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 153
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_INT         shift and go to state 157
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    idioms                         shift and go to state 140
    factor                         shift and go to state 240
    factorOperation                shift and go to state 141
    auction                        shift and go to state 142
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    identifier                     shift and go to state 134
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 208

    (129) idiomsOperation -> auction OR . idioms
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 153
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_INT         shift and go to state 157
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    auction                        shift and go to state 142
    idioms                         shift and go to state 241
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    identifier                     shift and go to state 134
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 209

    (130) idiomsOperation -> auction AND . idioms
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 153
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_INT         shift and go to state 157
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    auction                        shift and go to state 142
    idioms                         shift and go to state 242
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    identifier                     shift and go to state 134
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 210

    (144) otherExpression -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 243


state 211

    (149) averageFunc -> AVERAGE LPAREN . ID RPAREN

    ID              shift and go to state 244


state 212

    (150) modeFunc -> MODE LPAREN . ID RPAREN

    ID              shift and go to state 245


state 213

    (151) varianceFunc -> VARIANCE LPAREN . ID RPAREN

    ID              shift and go to state 246


state 214

    (90) writingFinal -> writingString RPAREN .

    SEMICOLON       reduce using rule 90 (writingFinal -> writingString RPAREN .)


state 215

    (93) writingRecursive -> writingString COMA . writingFinal
    (95) writingRecursive -> writingString COMA . writingRecursive
    (90) writingFinal -> . writingString RPAREN
    (91) writingFinal -> . expression RPAREN
    (93) writingRecursive -> . writingString COMA writingFinal
    (94) writingRecursive -> . expression COMA writingFinal
    (95) writingRecursive -> . writingString COMA writingRecursive
    (96) writingRecursive -> . expression COMA writingRecursive
    (92) writingString -> . CTE_STRING
    (113) expression -> . term
    (114) expression -> . expressionOperation
    (117) term -> . factor
    (118) term -> . termOperation
    (115) expressionOperation -> . term PLUS expression
    (116) expressionOperation -> . term MINUS expression
    (121) factor -> . idioms
    (122) factor -> . factorOperation
    (119) termOperation -> . factor TIMES term
    (120) termOperation -> . factor DIVIDE term
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (123) factorOperation -> . idioms GTHAN factor
    (124) factorOperation -> . idioms LTHAN factor
    (125) factorOperation -> . idioms EQUAL factor
    (126) factorOperation -> . idioms DIFF factor
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    CTE_STRING      shift and go to state 165
    LPAREN          shift and go to state 153
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_INT         shift and go to state 157
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    writingString                  shift and go to state 163
    writingFinal                   shift and go to state 247
    writingRecursive               shift and go to state 248
    expression                     shift and go to state 164
    term                           shift and go to state 136
    expressionOperation            shift and go to state 137
    factor                         shift and go to state 138
    termOperation                  shift and go to state 139
    idioms                         shift and go to state 140
    factorOperation                shift and go to state 141
    auction                        shift and go to state 142
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    identifier                     shift and go to state 134
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 216

    (91) writingFinal -> expression RPAREN .

    SEMICOLON       reduce using rule 91 (writingFinal -> expression RPAREN .)


state 217

    (94) writingRecursive -> expression COMA . writingFinal
    (96) writingRecursive -> expression COMA . writingRecursive
    (90) writingFinal -> . writingString RPAREN
    (91) writingFinal -> . expression RPAREN
    (93) writingRecursive -> . writingString COMA writingFinal
    (94) writingRecursive -> . expression COMA writingFinal
    (95) writingRecursive -> . writingString COMA writingRecursive
    (96) writingRecursive -> . expression COMA writingRecursive
    (92) writingString -> . CTE_STRING
    (113) expression -> . term
    (114) expression -> . expressionOperation
    (117) term -> . factor
    (118) term -> . termOperation
    (115) expressionOperation -> . term PLUS expression
    (116) expressionOperation -> . term MINUS expression
    (121) factor -> . idioms
    (122) factor -> . factorOperation
    (119) termOperation -> . factor TIMES term
    (120) termOperation -> . factor DIVIDE term
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (123) factorOperation -> . idioms GTHAN factor
    (124) factorOperation -> . idioms LTHAN factor
    (125) factorOperation -> . idioms EQUAL factor
    (126) factorOperation -> . idioms DIFF factor
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    CTE_STRING      shift and go to state 165
    LPAREN          shift and go to state 153
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_INT         shift and go to state 157
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    expression                     shift and go to state 164
    writingFinal                   shift and go to state 249
    writingRecursive               shift and go to state 250
    writingString                  shift and go to state 163
    term                           shift and go to state 136
    expressionOperation            shift and go to state 137
    factor                         shift and go to state 138
    termOperation                  shift and go to state 139
    idioms                         shift and go to state 140
    factorOperation                shift and go to state 141
    auction                        shift and go to state 142
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    identifier                     shift and go to state 134
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 218

    (100) readingFinal -> identifier RPAREN .

    SEMICOLON       reduce using rule 100 (readingFinal -> identifier RPAREN .)


state 219

    (101) readingRecursive -> identifier COMA . readingRecursive
    (102) readingRecursive -> identifier COMA . readingFinal
    (101) readingRecursive -> . identifier COMA readingRecursive
    (102) readingRecursive -> . identifier COMA readingFinal
    (100) readingFinal -> . identifier RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    ID              shift and go to state 118

    identifier                     shift and go to state 251
    readingRecursive               shift and go to state 252
    readingFinal                   shift and go to state 253
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 220

    (108) callAux -> expression RPAREN .

    SEMICOLON       reduce using rule 108 (callAux -> expression RPAREN .)
    OR              reduce using rule 108 (callAux -> expression RPAREN .)
    AND             reduce using rule 108 (callAux -> expression RPAREN .)
    GTHAN           reduce using rule 108 (callAux -> expression RPAREN .)
    LTHAN           reduce using rule 108 (callAux -> expression RPAREN .)
    EQUAL           reduce using rule 108 (callAux -> expression RPAREN .)
    DIFF            reduce using rule 108 (callAux -> expression RPAREN .)
    TIMES           reduce using rule 108 (callAux -> expression RPAREN .)
    DIVIDE          reduce using rule 108 (callAux -> expression RPAREN .)
    PLUS            reduce using rule 108 (callAux -> expression RPAREN .)
    MINUS           reduce using rule 108 (callAux -> expression RPAREN .)
    RPAREN          reduce using rule 108 (callAux -> expression RPAREN .)
    COMA            reduce using rule 108 (callAux -> expression RPAREN .)
    RSBRACK         reduce using rule 108 (callAux -> expression RPAREN .)
    TO              reduce using rule 108 (callAux -> expression RPAREN .)
    DO              reduce using rule 108 (callAux -> expression RPAREN .)


state 221

    (111) callRecursive -> expression COMA . callAux
    (108) callAux -> . expression RPAREN
    (109) callAux -> . callRecursive
    (110) callAux -> . callFinal
    (113) expression -> . term
    (114) expression -> . expressionOperation
    (111) callRecursive -> . expression COMA callAux
    (112) callFinal -> . RPAREN
    (117) term -> . factor
    (118) term -> . termOperation
    (115) expressionOperation -> . term PLUS expression
    (116) expressionOperation -> . term MINUS expression
    (121) factor -> . idioms
    (122) factor -> . factorOperation
    (119) termOperation -> . factor TIMES term
    (120) termOperation -> . factor DIVIDE term
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (123) factorOperation -> . idioms GTHAN factor
    (124) factorOperation -> . idioms LTHAN factor
    (125) factorOperation -> . idioms EQUAL factor
    (126) factorOperation -> . idioms DIFF factor
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    RPAREN          shift and go to state 172
    LPAREN          shift and go to state 153
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_INT         shift and go to state 157
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    expression                     shift and go to state 171
    callAux                        shift and go to state 254
    callRecursive                  shift and go to state 173
    callFinal                      shift and go to state 174
    term                           shift and go to state 136
    expressionOperation            shift and go to state 137
    factor                         shift and go to state 138
    termOperation                  shift and go to state 139
    idioms                         shift and go to state 140
    factorOperation                shift and go to state 141
    auction                        shift and go to state 142
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    identifier                     shift and go to state 134
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 222

    (148) identArray -> ID LSBRACK expression RSBRACK .

    ASSIGN          reduce using rule 148 (identArray -> ID LSBRACK expression RSBRACK .)
    OR              reduce using rule 148 (identArray -> ID LSBRACK expression RSBRACK .)
    AND             reduce using rule 148 (identArray -> ID LSBRACK expression RSBRACK .)
    GTHAN           reduce using rule 148 (identArray -> ID LSBRACK expression RSBRACK .)
    LTHAN           reduce using rule 148 (identArray -> ID LSBRACK expression RSBRACK .)
    EQUAL           reduce using rule 148 (identArray -> ID LSBRACK expression RSBRACK .)
    DIFF            reduce using rule 148 (identArray -> ID LSBRACK expression RSBRACK .)
    TIMES           reduce using rule 148 (identArray -> ID LSBRACK expression RSBRACK .)
    DIVIDE          reduce using rule 148 (identArray -> ID LSBRACK expression RSBRACK .)
    PLUS            reduce using rule 148 (identArray -> ID LSBRACK expression RSBRACK .)
    MINUS           reduce using rule 148 (identArray -> ID LSBRACK expression RSBRACK .)
    SEMICOLON       reduce using rule 148 (identArray -> ID LSBRACK expression RSBRACK .)
    RPAREN          reduce using rule 148 (identArray -> ID LSBRACK expression RSBRACK .)
    COMA            reduce using rule 148 (identArray -> ID LSBRACK expression RSBRACK .)
    RSBRACK         reduce using rule 148 (identArray -> ID LSBRACK expression RSBRACK .)
    TO              reduce using rule 148 (identArray -> ID LSBRACK expression RSBRACK .)
    DO              reduce using rule 148 (identArray -> ID LSBRACK expression RSBRACK .)


state 223

    (80) returnStatement -> RETURN LPAREN expression RPAREN .

    SEMICOLON       reduce using rule 80 (returnStatement -> RETURN LPAREN expression RPAREN .)


state 224

    (86) regressionFunc -> REGRESSION LPAREN ID COMA . ID RPAREN

    ID              shift and go to state 255


state 225

    (85) plotXYFunc -> PLOTXY LPAREN ID COMA . ID RPAREN

    ID              shift and go to state 256


state 226

    (83) shortCondition -> IF LPAREN expression RPAREN . THEN block
    (84) longCondition -> IF LPAREN expression RPAREN . THEN block ELSE block

    THEN            shift and go to state 257


state 227

    (105) conditional -> WHILE LPAREN expression RPAREN . block
    (64) block -> . LBRACK blockAux

    LBRACK          shift and go to state 43

    block                          shift and go to state 258

state 228

    (106) nonconditional -> FOR identifier ASSIGN expression . TO expression DO block

    TO              shift and go to state 259


state 229

    (38) oneVarLoc -> typeVar COLON . identifier SEMICOLON
    (39) sameTypeLoc -> typeVar COLON . identifier COMA sameTypeFinalLoc
    (40) sameTypeLoc -> typeVar COLON . identifier COMA sameTypeRecursiveLoc
    (45) newTypeLoc -> typeVar COLON . identifier SEMICOLON varAuxLoc
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    ID              shift and go to state 118

    identifier                     shift and go to state 260
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 230

    (50) sameTypeParam -> typeVar COLON identifierVar COMA . sameTypeParamFinal
    (51) sameTypeParam -> typeVar COLON identifierVar COMA . sameTypeParamRecursive
    (52) sameTypeParamFinal -> . identifierVar
    (53) sameTypeParamRecursive -> . identifierVar COMA sameTypeParamRecursive
    (54) sameTypeParamRecursive -> . identifierVar COMA sameTypeFinal
    (55) sameTypeParamRecursive -> . identifier SEMICOLON parameters
    (57) identifierVar -> . identLonely
    (58) identifierVar -> . identArrayVar
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (147) identLonely -> . ID
    (59) identArrayVar -> . ID LSBRACK expressionVar RSBRACK
    (148) identArray -> . ID LSBRACK expression RSBRACK

    ID              shift and go to state 266

    identifierVar                  shift and go to state 261
    sameTypeParamFinal             shift and go to state 262
    sameTypeParamRecursive         shift and go to state 263
    identifier                     shift and go to state 264
    identLonely                    shift and go to state 265
    identArrayVar                  shift and go to state 40
    identArray                     shift and go to state 74

state 231

    (56) newParam -> typeVar COLON identifierVar SEMICOLON . parameters
    (46) parameters -> . oneParam
    (47) parameters -> . sameTypeParam
    (48) parameters -> . newParam
    (49) oneParam -> . typeVar COLON identifierVar
    (50) sameTypeParam -> . typeVar COLON identifierVar COMA sameTypeParamFinal
    (51) sameTypeParam -> . typeVar COLON identifierVar COMA sameTypeParamRecursive
    (56) newParam -> . typeVar COLON identifierVar SEMICOLON parameters
    (60) typeVar -> . INT
    (61) typeVar -> . FLOAT
    (62) typeVar -> . CHAR

    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    typeVar                        shift and go to state 84
    parameters                     shift and go to state 267
    oneParam                       shift and go to state 81
    sameTypeParam                  shift and go to state 82
    newParam                       shift and go to state 83

state 232

    (18) sameTypeRecursive -> identifierVar SEMICOLON . varAux
    (15) sameTypeFinal -> identifierVar SEMICOLON .
    (9) varAux -> . oneVar
    (10) varAux -> . sameType
    (11) varAux -> . newType
    (12) oneVar -> . typeVar COLON identifierVar SEMICOLON
    (13) sameType -> . typeVar COLON identifierVar COMA sameTypeFinal
    (14) sameType -> . typeVar COLON identifierVar COMA sameTypeRecursive
    (19) newType -> . typeVar COLON identifierVar SEMICOLON varAux
    (60) typeVar -> . INT
    (61) typeVar -> . FLOAT
    (62) typeVar -> . CHAR

    MAIN            reduce using rule 15 (sameTypeFinal -> identifierVar SEMICOLON .)
    FUNCTION        reduce using rule 15 (sameTypeFinal -> identifierVar SEMICOLON .)
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    varAux                         shift and go to state 191
    oneVar                         shift and go to state 20
    sameType                       shift and go to state 21
    newType                        shift and go to state 22
    typeVar                        shift and go to state 23

state 233

    (115) expressionOperation -> term PLUS expression .

    SEMICOLON       reduce using rule 115 (expressionOperation -> term PLUS expression .)
    RPAREN          reduce using rule 115 (expressionOperation -> term PLUS expression .)
    COMA            reduce using rule 115 (expressionOperation -> term PLUS expression .)
    RSBRACK         reduce using rule 115 (expressionOperation -> term PLUS expression .)
    TO              reduce using rule 115 (expressionOperation -> term PLUS expression .)
    DO              reduce using rule 115 (expressionOperation -> term PLUS expression .)


state 234

    (116) expressionOperation -> term MINUS expression .

    SEMICOLON       reduce using rule 116 (expressionOperation -> term MINUS expression .)
    RPAREN          reduce using rule 116 (expressionOperation -> term MINUS expression .)
    COMA            reduce using rule 116 (expressionOperation -> term MINUS expression .)
    RSBRACK         reduce using rule 116 (expressionOperation -> term MINUS expression .)
    TO              reduce using rule 116 (expressionOperation -> term MINUS expression .)
    DO              reduce using rule 116 (expressionOperation -> term MINUS expression .)


state 235

    (119) termOperation -> factor TIMES term .

    PLUS            reduce using rule 119 (termOperation -> factor TIMES term .)
    MINUS           reduce using rule 119 (termOperation -> factor TIMES term .)
    SEMICOLON       reduce using rule 119 (termOperation -> factor TIMES term .)
    RPAREN          reduce using rule 119 (termOperation -> factor TIMES term .)
    COMA            reduce using rule 119 (termOperation -> factor TIMES term .)
    RSBRACK         reduce using rule 119 (termOperation -> factor TIMES term .)
    TO              reduce using rule 119 (termOperation -> factor TIMES term .)
    DO              reduce using rule 119 (termOperation -> factor TIMES term .)


state 236

    (120) termOperation -> factor DIVIDE term .

    PLUS            reduce using rule 120 (termOperation -> factor DIVIDE term .)
    MINUS           reduce using rule 120 (termOperation -> factor DIVIDE term .)
    SEMICOLON       reduce using rule 120 (termOperation -> factor DIVIDE term .)
    RPAREN          reduce using rule 120 (termOperation -> factor DIVIDE term .)
    COMA            reduce using rule 120 (termOperation -> factor DIVIDE term .)
    RSBRACK         reduce using rule 120 (termOperation -> factor DIVIDE term .)
    TO              reduce using rule 120 (termOperation -> factor DIVIDE term .)
    DO              reduce using rule 120 (termOperation -> factor DIVIDE term .)


state 237

    (123) factorOperation -> idioms GTHAN factor .

    TIMES           reduce using rule 123 (factorOperation -> idioms GTHAN factor .)
    DIVIDE          reduce using rule 123 (factorOperation -> idioms GTHAN factor .)
    PLUS            reduce using rule 123 (factorOperation -> idioms GTHAN factor .)
    MINUS           reduce using rule 123 (factorOperation -> idioms GTHAN factor .)
    SEMICOLON       reduce using rule 123 (factorOperation -> idioms GTHAN factor .)
    RPAREN          reduce using rule 123 (factorOperation -> idioms GTHAN factor .)
    COMA            reduce using rule 123 (factorOperation -> idioms GTHAN factor .)
    RSBRACK         reduce using rule 123 (factorOperation -> idioms GTHAN factor .)
    TO              reduce using rule 123 (factorOperation -> idioms GTHAN factor .)
    DO              reduce using rule 123 (factorOperation -> idioms GTHAN factor .)


state 238

    (124) factorOperation -> idioms LTHAN factor .

    TIMES           reduce using rule 124 (factorOperation -> idioms LTHAN factor .)
    DIVIDE          reduce using rule 124 (factorOperation -> idioms LTHAN factor .)
    PLUS            reduce using rule 124 (factorOperation -> idioms LTHAN factor .)
    MINUS           reduce using rule 124 (factorOperation -> idioms LTHAN factor .)
    SEMICOLON       reduce using rule 124 (factorOperation -> idioms LTHAN factor .)
    RPAREN          reduce using rule 124 (factorOperation -> idioms LTHAN factor .)
    COMA            reduce using rule 124 (factorOperation -> idioms LTHAN factor .)
    RSBRACK         reduce using rule 124 (factorOperation -> idioms LTHAN factor .)
    TO              reduce using rule 124 (factorOperation -> idioms LTHAN factor .)
    DO              reduce using rule 124 (factorOperation -> idioms LTHAN factor .)


state 239

    (125) factorOperation -> idioms EQUAL factor .

    TIMES           reduce using rule 125 (factorOperation -> idioms EQUAL factor .)
    DIVIDE          reduce using rule 125 (factorOperation -> idioms EQUAL factor .)
    PLUS            reduce using rule 125 (factorOperation -> idioms EQUAL factor .)
    MINUS           reduce using rule 125 (factorOperation -> idioms EQUAL factor .)
    SEMICOLON       reduce using rule 125 (factorOperation -> idioms EQUAL factor .)
    RPAREN          reduce using rule 125 (factorOperation -> idioms EQUAL factor .)
    COMA            reduce using rule 125 (factorOperation -> idioms EQUAL factor .)
    RSBRACK         reduce using rule 125 (factorOperation -> idioms EQUAL factor .)
    TO              reduce using rule 125 (factorOperation -> idioms EQUAL factor .)
    DO              reduce using rule 125 (factorOperation -> idioms EQUAL factor .)


state 240

    (126) factorOperation -> idioms DIFF factor .

    TIMES           reduce using rule 126 (factorOperation -> idioms DIFF factor .)
    DIVIDE          reduce using rule 126 (factorOperation -> idioms DIFF factor .)
    PLUS            reduce using rule 126 (factorOperation -> idioms DIFF factor .)
    MINUS           reduce using rule 126 (factorOperation -> idioms DIFF factor .)
    SEMICOLON       reduce using rule 126 (factorOperation -> idioms DIFF factor .)
    RPAREN          reduce using rule 126 (factorOperation -> idioms DIFF factor .)
    COMA            reduce using rule 126 (factorOperation -> idioms DIFF factor .)
    RSBRACK         reduce using rule 126 (factorOperation -> idioms DIFF factor .)
    TO              reduce using rule 126 (factorOperation -> idioms DIFF factor .)
    DO              reduce using rule 126 (factorOperation -> idioms DIFF factor .)


state 241

    (129) idiomsOperation -> auction OR idioms .

    GTHAN           reduce using rule 129 (idiomsOperation -> auction OR idioms .)
    LTHAN           reduce using rule 129 (idiomsOperation -> auction OR idioms .)
    EQUAL           reduce using rule 129 (idiomsOperation -> auction OR idioms .)
    DIFF            reduce using rule 129 (idiomsOperation -> auction OR idioms .)
    TIMES           reduce using rule 129 (idiomsOperation -> auction OR idioms .)
    DIVIDE          reduce using rule 129 (idiomsOperation -> auction OR idioms .)
    PLUS            reduce using rule 129 (idiomsOperation -> auction OR idioms .)
    MINUS           reduce using rule 129 (idiomsOperation -> auction OR idioms .)
    SEMICOLON       reduce using rule 129 (idiomsOperation -> auction OR idioms .)
    RPAREN          reduce using rule 129 (idiomsOperation -> auction OR idioms .)
    COMA            reduce using rule 129 (idiomsOperation -> auction OR idioms .)
    RSBRACK         reduce using rule 129 (idiomsOperation -> auction OR idioms .)
    TO              reduce using rule 129 (idiomsOperation -> auction OR idioms .)
    DO              reduce using rule 129 (idiomsOperation -> auction OR idioms .)


state 242

    (130) idiomsOperation -> auction AND idioms .

    GTHAN           reduce using rule 130 (idiomsOperation -> auction AND idioms .)
    LTHAN           reduce using rule 130 (idiomsOperation -> auction AND idioms .)
    EQUAL           reduce using rule 130 (idiomsOperation -> auction AND idioms .)
    DIFF            reduce using rule 130 (idiomsOperation -> auction AND idioms .)
    TIMES           reduce using rule 130 (idiomsOperation -> auction AND idioms .)
    DIVIDE          reduce using rule 130 (idiomsOperation -> auction AND idioms .)
    PLUS            reduce using rule 130 (idiomsOperation -> auction AND idioms .)
    MINUS           reduce using rule 130 (idiomsOperation -> auction AND idioms .)
    SEMICOLON       reduce using rule 130 (idiomsOperation -> auction AND idioms .)
    RPAREN          reduce using rule 130 (idiomsOperation -> auction AND idioms .)
    COMA            reduce using rule 130 (idiomsOperation -> auction AND idioms .)
    RSBRACK         reduce using rule 130 (idiomsOperation -> auction AND idioms .)
    TO              reduce using rule 130 (idiomsOperation -> auction AND idioms .)
    DO              reduce using rule 130 (idiomsOperation -> auction AND idioms .)


state 243

    (144) otherExpression -> LPAREN expression RPAREN .

    OR              reduce using rule 144 (otherExpression -> LPAREN expression RPAREN .)
    AND             reduce using rule 144 (otherExpression -> LPAREN expression RPAREN .)
    GTHAN           reduce using rule 144 (otherExpression -> LPAREN expression RPAREN .)
    LTHAN           reduce using rule 144 (otherExpression -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 144 (otherExpression -> LPAREN expression RPAREN .)
    DIFF            reduce using rule 144 (otherExpression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 144 (otherExpression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 144 (otherExpression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 144 (otherExpression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 144 (otherExpression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 144 (otherExpression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 144 (otherExpression -> LPAREN expression RPAREN .)
    COMA            reduce using rule 144 (otherExpression -> LPAREN expression RPAREN .)
    RSBRACK         reduce using rule 144 (otherExpression -> LPAREN expression RPAREN .)
    TO              reduce using rule 144 (otherExpression -> LPAREN expression RPAREN .)
    DO              reduce using rule 144 (otherExpression -> LPAREN expression RPAREN .)


state 244

    (149) averageFunc -> AVERAGE LPAREN ID . RPAREN

    RPAREN          shift and go to state 268


state 245

    (150) modeFunc -> MODE LPAREN ID . RPAREN

    RPAREN          shift and go to state 269


state 246

    (151) varianceFunc -> VARIANCE LPAREN ID . RPAREN

    RPAREN          shift and go to state 270


state 247

    (93) writingRecursive -> writingString COMA writingFinal .

    SEMICOLON       reduce using rule 93 (writingRecursive -> writingString COMA writingFinal .)


state 248

    (95) writingRecursive -> writingString COMA writingRecursive .

    SEMICOLON       reduce using rule 95 (writingRecursive -> writingString COMA writingRecursive .)


state 249

    (94) writingRecursive -> expression COMA writingFinal .

    SEMICOLON       reduce using rule 94 (writingRecursive -> expression COMA writingFinal .)


state 250

    (96) writingRecursive -> expression COMA writingRecursive .

    SEMICOLON       reduce using rule 96 (writingRecursive -> expression COMA writingRecursive .)


state 251

    (101) readingRecursive -> identifier . COMA readingRecursive
    (102) readingRecursive -> identifier . COMA readingFinal
    (100) readingFinal -> identifier . RPAREN

    COMA            shift and go to state 219
    RPAREN          shift and go to state 218


state 252

    (101) readingRecursive -> identifier COMA readingRecursive .

    SEMICOLON       reduce using rule 101 (readingRecursive -> identifier COMA readingRecursive .)


state 253

    (102) readingRecursive -> identifier COMA readingFinal .

    SEMICOLON       reduce using rule 102 (readingRecursive -> identifier COMA readingFinal .)


state 254

    (111) callRecursive -> expression COMA callAux .

    SEMICOLON       reduce using rule 111 (callRecursive -> expression COMA callAux .)
    OR              reduce using rule 111 (callRecursive -> expression COMA callAux .)
    AND             reduce using rule 111 (callRecursive -> expression COMA callAux .)
    GTHAN           reduce using rule 111 (callRecursive -> expression COMA callAux .)
    LTHAN           reduce using rule 111 (callRecursive -> expression COMA callAux .)
    EQUAL           reduce using rule 111 (callRecursive -> expression COMA callAux .)
    DIFF            reduce using rule 111 (callRecursive -> expression COMA callAux .)
    TIMES           reduce using rule 111 (callRecursive -> expression COMA callAux .)
    DIVIDE          reduce using rule 111 (callRecursive -> expression COMA callAux .)
    PLUS            reduce using rule 111 (callRecursive -> expression COMA callAux .)
    MINUS           reduce using rule 111 (callRecursive -> expression COMA callAux .)
    RPAREN          reduce using rule 111 (callRecursive -> expression COMA callAux .)
    COMA            reduce using rule 111 (callRecursive -> expression COMA callAux .)
    RSBRACK         reduce using rule 111 (callRecursive -> expression COMA callAux .)
    TO              reduce using rule 111 (callRecursive -> expression COMA callAux .)
    DO              reduce using rule 111 (callRecursive -> expression COMA callAux .)


state 255

    (86) regressionFunc -> REGRESSION LPAREN ID COMA ID . RPAREN

    RPAREN          shift and go to state 271


state 256

    (85) plotXYFunc -> PLOTXY LPAREN ID COMA ID . RPAREN

    RPAREN          shift and go to state 272


state 257

    (83) shortCondition -> IF LPAREN expression RPAREN THEN . block
    (84) longCondition -> IF LPAREN expression RPAREN THEN . block ELSE block
    (64) block -> . LBRACK blockAux

    LBRACK          shift and go to state 43

    block                          shift and go to state 273

state 258

    (105) conditional -> WHILE LPAREN expression RPAREN block .

    RBRACK          reduce using rule 105 (conditional -> WHILE LPAREN expression RPAREN block .)
    WRITE           reduce using rule 105 (conditional -> WHILE LPAREN expression RPAREN block .)
    READ            reduce using rule 105 (conditional -> WHILE LPAREN expression RPAREN block .)
    ID              reduce using rule 105 (conditional -> WHILE LPAREN expression RPAREN block .)
    RETURN          reduce using rule 105 (conditional -> WHILE LPAREN expression RPAREN block .)
    REGRESSION      reduce using rule 105 (conditional -> WHILE LPAREN expression RPAREN block .)
    PLOTXY          reduce using rule 105 (conditional -> WHILE LPAREN expression RPAREN block .)
    IF              reduce using rule 105 (conditional -> WHILE LPAREN expression RPAREN block .)
    WHILE           reduce using rule 105 (conditional -> WHILE LPAREN expression RPAREN block .)
    FOR             reduce using rule 105 (conditional -> WHILE LPAREN expression RPAREN block .)


state 259

    (106) nonconditional -> FOR identifier ASSIGN expression TO . expression DO block
    (113) expression -> . term
    (114) expression -> . expressionOperation
    (117) term -> . factor
    (118) term -> . termOperation
    (115) expressionOperation -> . term PLUS expression
    (116) expressionOperation -> . term MINUS expression
    (121) factor -> . idioms
    (122) factor -> . factorOperation
    (119) termOperation -> . factor TIMES term
    (120) termOperation -> . factor DIVIDE term
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (123) factorOperation -> . idioms GTHAN factor
    (124) factorOperation -> . idioms LTHAN factor
    (125) factorOperation -> . idioms EQUAL factor
    (126) factorOperation -> . idioms DIFF factor
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    LPAREN          shift and go to state 153
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_INT         shift and go to state 157
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    identifier                     shift and go to state 134
    expression                     shift and go to state 274
    term                           shift and go to state 136
    expressionOperation            shift and go to state 137
    factor                         shift and go to state 138
    termOperation                  shift and go to state 139
    idioms                         shift and go to state 140
    factorOperation                shift and go to state 141
    auction                        shift and go to state 142
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 260

    (38) oneVarLoc -> typeVar COLON identifier . SEMICOLON
    (39) sameTypeLoc -> typeVar COLON identifier . COMA sameTypeFinalLoc
    (40) sameTypeLoc -> typeVar COLON identifier . COMA sameTypeRecursiveLoc
    (45) newTypeLoc -> typeVar COLON identifier . SEMICOLON varAuxLoc

    SEMICOLON       shift and go to state 275
    COMA            shift and go to state 276


state 261

    (52) sameTypeParamFinal -> identifierVar .
    (53) sameTypeParamRecursive -> identifierVar . COMA sameTypeParamRecursive
    (54) sameTypeParamRecursive -> identifierVar . COMA sameTypeFinal

    RPAREN          reduce using rule 52 (sameTypeParamFinal -> identifierVar .)
    COMA            shift and go to state 277


state 262

    (50) sameTypeParam -> typeVar COLON identifierVar COMA sameTypeParamFinal .

    RPAREN          reduce using rule 50 (sameTypeParam -> typeVar COLON identifierVar COMA sameTypeParamFinal .)


state 263

    (51) sameTypeParam -> typeVar COLON identifierVar COMA sameTypeParamRecursive .

    RPAREN          reduce using rule 51 (sameTypeParam -> typeVar COLON identifierVar COMA sameTypeParamRecursive .)


state 264

    (55) sameTypeParamRecursive -> identifier . SEMICOLON parameters

    SEMICOLON       shift and go to state 278


state 265

    (57) identifierVar -> identLonely .
    (145) identifier -> identLonely .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 57 (identifierVar -> identLonely .)
    COMA            reduce using rule 57 (identifierVar -> identLonely .)
    RPAREN          reduce using rule 57 (identifierVar -> identLonely .)
    SEMICOLON       reduce using rule 57 (identifierVar -> identLonely .)

  ! SEMICOLON       [ reduce using rule 145 (identifier -> identLonely .) ]


state 266

    (147) identLonely -> ID .
    (59) identArrayVar -> ID . LSBRACK expressionVar RSBRACK
    (148) identArray -> ID . LSBRACK expression RSBRACK

    COMA            reduce using rule 147 (identLonely -> ID .)
    RPAREN          reduce using rule 147 (identLonely -> ID .)
    SEMICOLON       reduce using rule 147 (identLonely -> ID .)
    LSBRACK         shift and go to state 279


state 267

    (56) newParam -> typeVar COLON identifierVar SEMICOLON parameters .

    RPAREN          reduce using rule 56 (newParam -> typeVar COLON identifierVar SEMICOLON parameters .)


state 268

    (149) averageFunc -> AVERAGE LPAREN ID RPAREN .

    OR              reduce using rule 149 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    AND             reduce using rule 149 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    GTHAN           reduce using rule 149 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    LTHAN           reduce using rule 149 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    EQUAL           reduce using rule 149 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    DIFF            reduce using rule 149 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    TIMES           reduce using rule 149 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    DIVIDE          reduce using rule 149 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    PLUS            reduce using rule 149 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    MINUS           reduce using rule 149 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    SEMICOLON       reduce using rule 149 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    RPAREN          reduce using rule 149 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    COMA            reduce using rule 149 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    RSBRACK         reduce using rule 149 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    TO              reduce using rule 149 (averageFunc -> AVERAGE LPAREN ID RPAREN .)
    DO              reduce using rule 149 (averageFunc -> AVERAGE LPAREN ID RPAREN .)


state 269

    (150) modeFunc -> MODE LPAREN ID RPAREN .

    OR              reduce using rule 150 (modeFunc -> MODE LPAREN ID RPAREN .)
    AND             reduce using rule 150 (modeFunc -> MODE LPAREN ID RPAREN .)
    GTHAN           reduce using rule 150 (modeFunc -> MODE LPAREN ID RPAREN .)
    LTHAN           reduce using rule 150 (modeFunc -> MODE LPAREN ID RPAREN .)
    EQUAL           reduce using rule 150 (modeFunc -> MODE LPAREN ID RPAREN .)
    DIFF            reduce using rule 150 (modeFunc -> MODE LPAREN ID RPAREN .)
    TIMES           reduce using rule 150 (modeFunc -> MODE LPAREN ID RPAREN .)
    DIVIDE          reduce using rule 150 (modeFunc -> MODE LPAREN ID RPAREN .)
    PLUS            reduce using rule 150 (modeFunc -> MODE LPAREN ID RPAREN .)
    MINUS           reduce using rule 150 (modeFunc -> MODE LPAREN ID RPAREN .)
    SEMICOLON       reduce using rule 150 (modeFunc -> MODE LPAREN ID RPAREN .)
    RPAREN          reduce using rule 150 (modeFunc -> MODE LPAREN ID RPAREN .)
    COMA            reduce using rule 150 (modeFunc -> MODE LPAREN ID RPAREN .)
    RSBRACK         reduce using rule 150 (modeFunc -> MODE LPAREN ID RPAREN .)
    TO              reduce using rule 150 (modeFunc -> MODE LPAREN ID RPAREN .)
    DO              reduce using rule 150 (modeFunc -> MODE LPAREN ID RPAREN .)


state 270

    (151) varianceFunc -> VARIANCE LPAREN ID RPAREN .

    OR              reduce using rule 151 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    AND             reduce using rule 151 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    GTHAN           reduce using rule 151 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    LTHAN           reduce using rule 151 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    EQUAL           reduce using rule 151 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    DIFF            reduce using rule 151 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    TIMES           reduce using rule 151 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    DIVIDE          reduce using rule 151 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    PLUS            reduce using rule 151 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    MINUS           reduce using rule 151 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    SEMICOLON       reduce using rule 151 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    RPAREN          reduce using rule 151 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    COMA            reduce using rule 151 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    RSBRACK         reduce using rule 151 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    TO              reduce using rule 151 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)
    DO              reduce using rule 151 (varianceFunc -> VARIANCE LPAREN ID RPAREN .)


state 271

    (86) regressionFunc -> REGRESSION LPAREN ID COMA ID RPAREN .

    SEMICOLON       reduce using rule 86 (regressionFunc -> REGRESSION LPAREN ID COMA ID RPAREN .)


state 272

    (85) plotXYFunc -> PLOTXY LPAREN ID COMA ID RPAREN .

    SEMICOLON       reduce using rule 85 (plotXYFunc -> PLOTXY LPAREN ID COMA ID RPAREN .)


state 273

    (83) shortCondition -> IF LPAREN expression RPAREN THEN block .
    (84) longCondition -> IF LPAREN expression RPAREN THEN block . ELSE block

    RBRACK          reduce using rule 83 (shortCondition -> IF LPAREN expression RPAREN THEN block .)
    WRITE           reduce using rule 83 (shortCondition -> IF LPAREN expression RPAREN THEN block .)
    READ            reduce using rule 83 (shortCondition -> IF LPAREN expression RPAREN THEN block .)
    ID              reduce using rule 83 (shortCondition -> IF LPAREN expression RPAREN THEN block .)
    RETURN          reduce using rule 83 (shortCondition -> IF LPAREN expression RPAREN THEN block .)
    REGRESSION      reduce using rule 83 (shortCondition -> IF LPAREN expression RPAREN THEN block .)
    PLOTXY          reduce using rule 83 (shortCondition -> IF LPAREN expression RPAREN THEN block .)
    IF              reduce using rule 83 (shortCondition -> IF LPAREN expression RPAREN THEN block .)
    WHILE           reduce using rule 83 (shortCondition -> IF LPAREN expression RPAREN THEN block .)
    FOR             reduce using rule 83 (shortCondition -> IF LPAREN expression RPAREN THEN block .)
    ELSE            shift and go to state 280


state 274

    (106) nonconditional -> FOR identifier ASSIGN expression TO expression . DO block

    DO              shift and go to state 281


state 275

    (38) oneVarLoc -> typeVar COLON identifier SEMICOLON .
    (45) newTypeLoc -> typeVar COLON identifier SEMICOLON . varAuxLoc
    (35) varAuxLoc -> . oneVarLoc
    (36) varAuxLoc -> . sameTypeLoc
    (37) varAuxLoc -> . newTypeLoc
    (38) oneVarLoc -> . typeVar COLON identifier SEMICOLON
    (39) sameTypeLoc -> . typeVar COLON identifier COMA sameTypeFinalLoc
    (40) sameTypeLoc -> . typeVar COLON identifier COMA sameTypeRecursiveLoc
    (45) newTypeLoc -> . typeVar COLON identifier SEMICOLON varAuxLoc
    (60) typeVar -> . INT
    (61) typeVar -> . FLOAT
    (62) typeVar -> . CHAR

    LBRACK          reduce using rule 38 (oneVarLoc -> typeVar COLON identifier SEMICOLON .)
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    typeVar                        shift and go to state 187
    varAuxLoc                      shift and go to state 282
    oneVarLoc                      shift and go to state 184
    sameTypeLoc                    shift and go to state 185
    newTypeLoc                     shift and go to state 186

state 276

    (39) sameTypeLoc -> typeVar COLON identifier COMA . sameTypeFinalLoc
    (40) sameTypeLoc -> typeVar COLON identifier COMA . sameTypeRecursiveLoc
    (41) sameTypeFinalLoc -> . identifier SEMICOLON
    (42) sameTypeRecursiveLoc -> . identifier COMA sameTypeRecursiveLoc
    (43) sameTypeRecursiveLoc -> . identifier COMA sameTypeFinalLoc
    (44) sameTypeRecursiveLoc -> . identifier SEMICOLON varAuxLoc
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    ID              shift and go to state 118

    identifier                     shift and go to state 283
    sameTypeFinalLoc               shift and go to state 284
    sameTypeRecursiveLoc           shift and go to state 285
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 277

    (53) sameTypeParamRecursive -> identifierVar COMA . sameTypeParamRecursive
    (54) sameTypeParamRecursive -> identifierVar COMA . sameTypeFinal
    (53) sameTypeParamRecursive -> . identifierVar COMA sameTypeParamRecursive
    (54) sameTypeParamRecursive -> . identifierVar COMA sameTypeFinal
    (55) sameTypeParamRecursive -> . identifier SEMICOLON parameters
    (15) sameTypeFinal -> . identifierVar SEMICOLON
    (57) identifierVar -> . identLonely
    (58) identifierVar -> . identArrayVar
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (147) identLonely -> . ID
    (59) identArrayVar -> . ID LSBRACK expressionVar RSBRACK
    (148) identArray -> . ID LSBRACK expression RSBRACK

    ID              shift and go to state 266

    identifierVar                  shift and go to state 286
    sameTypeParamRecursive         shift and go to state 287
    sameTypeFinal                  shift and go to state 288
    identifier                     shift and go to state 264
    identLonely                    shift and go to state 265
    identArrayVar                  shift and go to state 40
    identArray                     shift and go to state 74

state 278

    (55) sameTypeParamRecursive -> identifier SEMICOLON . parameters
    (46) parameters -> . oneParam
    (47) parameters -> . sameTypeParam
    (48) parameters -> . newParam
    (49) oneParam -> . typeVar COLON identifierVar
    (50) sameTypeParam -> . typeVar COLON identifierVar COMA sameTypeParamFinal
    (51) sameTypeParam -> . typeVar COLON identifierVar COMA sameTypeParamRecursive
    (56) newParam -> . typeVar COLON identifierVar SEMICOLON parameters
    (60) typeVar -> . INT
    (61) typeVar -> . FLOAT
    (62) typeVar -> . CHAR

    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    parameters                     shift and go to state 289
    oneParam                       shift and go to state 81
    sameTypeParam                  shift and go to state 82
    newParam                       shift and go to state 83
    typeVar                        shift and go to state 84

state 279

    (59) identArrayVar -> ID LSBRACK . expressionVar RSBRACK
    (148) identArray -> ID LSBRACK . expression RSBRACK
    (152) expressionVar -> . termVar
    (153) expressionVar -> . expressionOperationVar
    (113) expression -> . term
    (114) expression -> . expressionOperation
    (156) termVar -> . auctionVar
    (157) termVar -> . termOperationVar
    (154) expressionOperationVar -> . termVar PLUS expressionVar
    (155) expressionOperationVar -> . termVar MINUS expressionVar
    (117) term -> . factor
    (118) term -> . termOperation
    (115) expressionOperation -> . term PLUS expression
    (116) expressionOperation -> . term MINUS expression
    (160) auctionVar -> . constantVar
    (161) auctionVar -> . otherExpressionVar
    (158) termOperationVar -> . auctionVar TIMES termVar
    (159) termOperationVar -> . auctionVar DIVIDE termVar
    (121) factor -> . idioms
    (122) factor -> . factorOperation
    (119) termOperation -> . factor TIMES term
    (120) termOperation -> . factor DIVIDE term
    (162) constantVar -> . CTE_INT
    (163) otherExpressionVar -> . LPAREN expressionVar RPAREN
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (123) factorOperation -> . idioms GTHAN factor
    (124) factorOperation -> . idioms LTHAN factor
    (125) factorOperation -> . idioms EQUAL factor
    (126) factorOperation -> . idioms DIFF factor
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    CTE_INT         shift and go to state 290
    LPAREN          shift and go to state 291
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    expressionVar                  shift and go to state 89
    expression                     shift and go to state 175
    termVar                        shift and go to state 90
    expressionOperationVar         shift and go to state 91
    term                           shift and go to state 136
    expressionOperation            shift and go to state 137
    auctionVar                     shift and go to state 92
    termOperationVar               shift and go to state 93
    factor                         shift and go to state 138
    termOperation                  shift and go to state 139
    constantVar                    shift and go to state 94
    otherExpressionVar             shift and go to state 95
    idioms                         shift and go to state 140
    factorOperation                shift and go to state 141
    auction                        shift and go to state 142
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    identifier                     shift and go to state 134
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 280

    (84) longCondition -> IF LPAREN expression RPAREN THEN block ELSE . block
    (64) block -> . LBRACK blockAux

    LBRACK          shift and go to state 43

    block                          shift and go to state 292

state 281

    (106) nonconditional -> FOR identifier ASSIGN expression TO expression DO . block
    (64) block -> . LBRACK blockAux

    LBRACK          shift and go to state 43

    block                          shift and go to state 293

state 282

    (45) newTypeLoc -> typeVar COLON identifier SEMICOLON varAuxLoc .

    LBRACK          reduce using rule 45 (newTypeLoc -> typeVar COLON identifier SEMICOLON varAuxLoc .)


state 283

    (41) sameTypeFinalLoc -> identifier . SEMICOLON
    (42) sameTypeRecursiveLoc -> identifier . COMA sameTypeRecursiveLoc
    (43) sameTypeRecursiveLoc -> identifier . COMA sameTypeFinalLoc
    (44) sameTypeRecursiveLoc -> identifier . SEMICOLON varAuxLoc

    SEMICOLON       shift and go to state 294
    COMA            shift and go to state 295


state 284

    (39) sameTypeLoc -> typeVar COLON identifier COMA sameTypeFinalLoc .

    LBRACK          reduce using rule 39 (sameTypeLoc -> typeVar COLON identifier COMA sameTypeFinalLoc .)


state 285

    (40) sameTypeLoc -> typeVar COLON identifier COMA sameTypeRecursiveLoc .

    LBRACK          reduce using rule 40 (sameTypeLoc -> typeVar COLON identifier COMA sameTypeRecursiveLoc .)


state 286

    (53) sameTypeParamRecursive -> identifierVar . COMA sameTypeParamRecursive
    (54) sameTypeParamRecursive -> identifierVar . COMA sameTypeFinal
    (15) sameTypeFinal -> identifierVar . SEMICOLON

    COMA            shift and go to state 277
    SEMICOLON       shift and go to state 296


state 287

    (53) sameTypeParamRecursive -> identifierVar COMA sameTypeParamRecursive .

    RPAREN          reduce using rule 53 (sameTypeParamRecursive -> identifierVar COMA sameTypeParamRecursive .)


state 288

    (54) sameTypeParamRecursive -> identifierVar COMA sameTypeFinal .

    RPAREN          reduce using rule 54 (sameTypeParamRecursive -> identifierVar COMA sameTypeFinal .)


state 289

    (55) sameTypeParamRecursive -> identifier SEMICOLON parameters .

    RPAREN          reduce using rule 55 (sameTypeParamRecursive -> identifier SEMICOLON parameters .)


state 290

    (162) constantVar -> CTE_INT .
    (141) someInt -> CTE_INT .

  ! reduce/reduce conflict for TIMES resolved using rule 141 (someInt -> CTE_INT .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 141 (someInt -> CTE_INT .)
  ! reduce/reduce conflict for PLUS resolved using rule 141 (someInt -> CTE_INT .)
  ! reduce/reduce conflict for MINUS resolved using rule 141 (someInt -> CTE_INT .)
  ! reduce/reduce conflict for RSBRACK resolved using rule 141 (someInt -> CTE_INT .)
  ! reduce/reduce conflict for RPAREN resolved using rule 141 (someInt -> CTE_INT .)
    OR              reduce using rule 141 (someInt -> CTE_INT .)
    AND             reduce using rule 141 (someInt -> CTE_INT .)
    GTHAN           reduce using rule 141 (someInt -> CTE_INT .)
    LTHAN           reduce using rule 141 (someInt -> CTE_INT .)
    EQUAL           reduce using rule 141 (someInt -> CTE_INT .)
    DIFF            reduce using rule 141 (someInt -> CTE_INT .)
    TIMES           reduce using rule 141 (someInt -> CTE_INT .)
    DIVIDE          reduce using rule 141 (someInt -> CTE_INT .)
    PLUS            reduce using rule 141 (someInt -> CTE_INT .)
    MINUS           reduce using rule 141 (someInt -> CTE_INT .)
    RSBRACK         reduce using rule 141 (someInt -> CTE_INT .)
    RPAREN          reduce using rule 141 (someInt -> CTE_INT .)

  ! TIMES           [ reduce using rule 162 (constantVar -> CTE_INT .) ]
  ! DIVIDE          [ reduce using rule 162 (constantVar -> CTE_INT .) ]
  ! PLUS            [ reduce using rule 162 (constantVar -> CTE_INT .) ]
  ! MINUS           [ reduce using rule 162 (constantVar -> CTE_INT .) ]
  ! RSBRACK         [ reduce using rule 162 (constantVar -> CTE_INT .) ]
  ! RPAREN          [ reduce using rule 162 (constantVar -> CTE_INT .) ]


state 291

    (163) otherExpressionVar -> LPAREN . expressionVar RPAREN
    (144) otherExpression -> LPAREN . expression RPAREN
    (152) expressionVar -> . termVar
    (153) expressionVar -> . expressionOperationVar
    (113) expression -> . term
    (114) expression -> . expressionOperation
    (156) termVar -> . auctionVar
    (157) termVar -> . termOperationVar
    (154) expressionOperationVar -> . termVar PLUS expressionVar
    (155) expressionOperationVar -> . termVar MINUS expressionVar
    (117) term -> . factor
    (118) term -> . termOperation
    (115) expressionOperation -> . term PLUS expression
    (116) expressionOperation -> . term MINUS expression
    (160) auctionVar -> . constantVar
    (161) auctionVar -> . otherExpressionVar
    (158) termOperationVar -> . auctionVar TIMES termVar
    (159) termOperationVar -> . auctionVar DIVIDE termVar
    (121) factor -> . idioms
    (122) factor -> . factorOperation
    (119) termOperation -> . factor TIMES term
    (120) termOperation -> . factor DIVIDE term
    (162) constantVar -> . CTE_INT
    (163) otherExpressionVar -> . LPAREN expressionVar RPAREN
    (127) idioms -> . auction
    (128) idioms -> . idiomsOperation
    (123) factorOperation -> . idioms GTHAN factor
    (124) factorOperation -> . idioms LTHAN factor
    (125) factorOperation -> . idioms EQUAL factor
    (126) factorOperation -> . idioms DIFF factor
    (131) auction -> . constant
    (132) auction -> . otherExpression
    (133) auction -> . identifier
    (134) auction -> . averageFunc
    (135) auction -> . modeFunc
    (136) auction -> . varianceFunc
    (137) auction -> . functionCall
    (129) idiomsOperation -> . auction OR idioms
    (130) idiomsOperation -> . auction AND idioms
    (138) constant -> . someInt
    (139) constant -> . someFloat
    (140) constant -> . someChar
    (144) otherExpression -> . LPAREN expression RPAREN
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (149) averageFunc -> . AVERAGE LPAREN ID RPAREN
    (150) modeFunc -> . MODE LPAREN ID RPAREN
    (151) varianceFunc -> . VARIANCE LPAREN ID RPAREN
    (107) functionCall -> . ID LPAREN callAux
    (141) someInt -> . CTE_INT
    (142) someFloat -> . CTE_FLOAT
    (143) someChar -> . CTE_CHAR
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    CTE_INT         shift and go to state 290
    LPAREN          shift and go to state 291
    AVERAGE         shift and go to state 154
    MODE            shift and go to state 155
    VARIANCE        shift and go to state 156
    ID              shift and go to state 69
    CTE_FLOAT       shift and go to state 158
    CTE_CHAR        shift and go to state 159

    expressionVar                  shift and go to state 133
    expression                     shift and go to state 210
    termVar                        shift and go to state 90
    expressionOperationVar         shift and go to state 91
    term                           shift and go to state 136
    expressionOperation            shift and go to state 137
    auctionVar                     shift and go to state 92
    termOperationVar               shift and go to state 93
    factor                         shift and go to state 138
    termOperation                  shift and go to state 139
    constantVar                    shift and go to state 94
    otherExpressionVar             shift and go to state 95
    idioms                         shift and go to state 140
    factorOperation                shift and go to state 141
    auction                        shift and go to state 142
    idiomsOperation                shift and go to state 143
    constant                       shift and go to state 144
    otherExpression                shift and go to state 145
    identifier                     shift and go to state 134
    averageFunc                    shift and go to state 146
    modeFunc                       shift and go to state 147
    varianceFunc                   shift and go to state 148
    functionCall                   shift and go to state 149
    someInt                        shift and go to state 150
    someFloat                      shift and go to state 151
    someChar                       shift and go to state 152
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 292

    (84) longCondition -> IF LPAREN expression RPAREN THEN block ELSE block .

    RBRACK          reduce using rule 84 (longCondition -> IF LPAREN expression RPAREN THEN block ELSE block .)
    WRITE           reduce using rule 84 (longCondition -> IF LPAREN expression RPAREN THEN block ELSE block .)
    READ            reduce using rule 84 (longCondition -> IF LPAREN expression RPAREN THEN block ELSE block .)
    ID              reduce using rule 84 (longCondition -> IF LPAREN expression RPAREN THEN block ELSE block .)
    RETURN          reduce using rule 84 (longCondition -> IF LPAREN expression RPAREN THEN block ELSE block .)
    REGRESSION      reduce using rule 84 (longCondition -> IF LPAREN expression RPAREN THEN block ELSE block .)
    PLOTXY          reduce using rule 84 (longCondition -> IF LPAREN expression RPAREN THEN block ELSE block .)
    IF              reduce using rule 84 (longCondition -> IF LPAREN expression RPAREN THEN block ELSE block .)
    WHILE           reduce using rule 84 (longCondition -> IF LPAREN expression RPAREN THEN block ELSE block .)
    FOR             reduce using rule 84 (longCondition -> IF LPAREN expression RPAREN THEN block ELSE block .)


state 293

    (106) nonconditional -> FOR identifier ASSIGN expression TO expression DO block .

    RBRACK          reduce using rule 106 (nonconditional -> FOR identifier ASSIGN expression TO expression DO block .)
    WRITE           reduce using rule 106 (nonconditional -> FOR identifier ASSIGN expression TO expression DO block .)
    READ            reduce using rule 106 (nonconditional -> FOR identifier ASSIGN expression TO expression DO block .)
    ID              reduce using rule 106 (nonconditional -> FOR identifier ASSIGN expression TO expression DO block .)
    RETURN          reduce using rule 106 (nonconditional -> FOR identifier ASSIGN expression TO expression DO block .)
    REGRESSION      reduce using rule 106 (nonconditional -> FOR identifier ASSIGN expression TO expression DO block .)
    PLOTXY          reduce using rule 106 (nonconditional -> FOR identifier ASSIGN expression TO expression DO block .)
    IF              reduce using rule 106 (nonconditional -> FOR identifier ASSIGN expression TO expression DO block .)
    WHILE           reduce using rule 106 (nonconditional -> FOR identifier ASSIGN expression TO expression DO block .)
    FOR             reduce using rule 106 (nonconditional -> FOR identifier ASSIGN expression TO expression DO block .)


state 294

    (41) sameTypeFinalLoc -> identifier SEMICOLON .
    (44) sameTypeRecursiveLoc -> identifier SEMICOLON . varAuxLoc
    (35) varAuxLoc -> . oneVarLoc
    (36) varAuxLoc -> . sameTypeLoc
    (37) varAuxLoc -> . newTypeLoc
    (38) oneVarLoc -> . typeVar COLON identifier SEMICOLON
    (39) sameTypeLoc -> . typeVar COLON identifier COMA sameTypeFinalLoc
    (40) sameTypeLoc -> . typeVar COLON identifier COMA sameTypeRecursiveLoc
    (45) newTypeLoc -> . typeVar COLON identifier SEMICOLON varAuxLoc
    (60) typeVar -> . INT
    (61) typeVar -> . FLOAT
    (62) typeVar -> . CHAR

    LBRACK          reduce using rule 41 (sameTypeFinalLoc -> identifier SEMICOLON .)
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    varAuxLoc                      shift and go to state 297
    oneVarLoc                      shift and go to state 184
    sameTypeLoc                    shift and go to state 185
    newTypeLoc                     shift and go to state 186
    typeVar                        shift and go to state 187

state 295

    (42) sameTypeRecursiveLoc -> identifier COMA . sameTypeRecursiveLoc
    (43) sameTypeRecursiveLoc -> identifier COMA . sameTypeFinalLoc
    (42) sameTypeRecursiveLoc -> . identifier COMA sameTypeRecursiveLoc
    (43) sameTypeRecursiveLoc -> . identifier COMA sameTypeFinalLoc
    (44) sameTypeRecursiveLoc -> . identifier SEMICOLON varAuxLoc
    (41) sameTypeFinalLoc -> . identifier SEMICOLON
    (145) identifier -> . identLonely
    (146) identifier -> . identArray
    (147) identLonely -> . ID
    (148) identArray -> . ID LSBRACK expression RSBRACK

    ID              shift and go to state 118

    identifier                     shift and go to state 298
    sameTypeRecursiveLoc           shift and go to state 299
    sameTypeFinalLoc               shift and go to state 300
    identLonely                    shift and go to state 73
    identArray                     shift and go to state 74

state 296

    (15) sameTypeFinal -> identifierVar SEMICOLON .

    RPAREN          reduce using rule 15 (sameTypeFinal -> identifierVar SEMICOLON .)


state 297

    (44) sameTypeRecursiveLoc -> identifier SEMICOLON varAuxLoc .

    LBRACK          reduce using rule 44 (sameTypeRecursiveLoc -> identifier SEMICOLON varAuxLoc .)


state 298

    (42) sameTypeRecursiveLoc -> identifier . COMA sameTypeRecursiveLoc
    (43) sameTypeRecursiveLoc -> identifier . COMA sameTypeFinalLoc
    (44) sameTypeRecursiveLoc -> identifier . SEMICOLON varAuxLoc
    (41) sameTypeFinalLoc -> identifier . SEMICOLON

    COMA            shift and go to state 295
    SEMICOLON       shift and go to state 301


state 299

    (42) sameTypeRecursiveLoc -> identifier COMA sameTypeRecursiveLoc .

    LBRACK          reduce using rule 42 (sameTypeRecursiveLoc -> identifier COMA sameTypeRecursiveLoc .)


state 300

    (43) sameTypeRecursiveLoc -> identifier COMA sameTypeFinalLoc .

    LBRACK          reduce using rule 43 (sameTypeRecursiveLoc -> identifier COMA sameTypeFinalLoc .)


state 301

    (44) sameTypeRecursiveLoc -> identifier SEMICOLON . varAuxLoc
    (41) sameTypeFinalLoc -> identifier SEMICOLON .
    (35) varAuxLoc -> . oneVarLoc
    (36) varAuxLoc -> . sameTypeLoc
    (37) varAuxLoc -> . newTypeLoc
    (38) oneVarLoc -> . typeVar COLON identifier SEMICOLON
    (39) sameTypeLoc -> . typeVar COLON identifier COMA sameTypeFinalLoc
    (40) sameTypeLoc -> . typeVar COLON identifier COMA sameTypeRecursiveLoc
    (45) newTypeLoc -> . typeVar COLON identifier SEMICOLON varAuxLoc
    (60) typeVar -> . INT
    (61) typeVar -> . FLOAT
    (62) typeVar -> . CHAR

    LBRACK          reduce using rule 41 (sameTypeFinalLoc -> identifier SEMICOLON .)
    INT             shift and go to state 24
    FLOAT           shift and go to state 25
    CHAR            shift and go to state 26

    varAuxLoc                      shift and go to state 297
    oneVarLoc                      shift and go to state 184
    sameTypeLoc                    shift and go to state 185
    newTypeLoc                     shift and go to state 186
    typeVar                        shift and go to state 187
WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 98 resolved using rule (blockAux -> statute RBRACK)
WARNING: rejected rule (blockFinal -> RBRACK) in state 98
WARNING: reduce/reduce conflict in state 265 resolved using rule (identifierVar -> identLonely)
WARNING: rejected rule (identifier -> identLonely) in state 265
WARNING: reduce/reduce conflict in state 290 resolved using rule (someInt -> CTE_INT)
WARNING: rejected rule (constantVar -> CTE_INT) in state 290
